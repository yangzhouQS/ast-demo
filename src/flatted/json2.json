{
  "uiSkeleton": {
    "master": {
      "__nodeId": "views_lopncx2m",
      "__nodeName": "views",
      "__nodeType": "baseNode",
      "__nodeEvent": {},
      "__nodeOptions": {
        "planeOptions": {
          "__nodeId": "plane_lopncx2n",
          "__nodeName": "plane",
          "__nodeType": "baseNode",
          "__nodeEvent": {},
          "__nodeOptions": {
            "isShowNav": true,
            "navigationOptions": {
              "__nodeId": "navigationBar_lopncx2o",
              "__nodeName": "navigationBar",
              "__nodeType": "baseNode",
              "__nodeEvent": {},
              "__nodeOptions": {
                "defaultSlot": [],
                "display": true,
                "permissionSetting": "",
                "routers": [],
                "isSysRouter": true
              },
              "__nodeKey": "nodeKey_navigationBar_lopncx2o",
              "__description": ""
            },
            "flexBoxOptions": {
              "__nodeId": "flexBox_lopncx38",
              "__nodeName": "flexBox",
              "__nodeType": "baseNode",
              "__nodeOptions": {
                "display": true,
                "permissionSetting": "",
                "isRow": false,
                "itemNum": 1,
                "width": "100%",
                "height": "100%",
                "itemConfig": [
                  {
                    "tag": "item-1",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "100%",
                    "contentType": "container",
                    "paddingSize": "large",
                    "display": true,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lopncx39",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "tabpanel",
                        "containerOptions": {
                          "__nodeId": "tabpanel_lopncx3b",
                          "__nodeName": "tabpanel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "activeName": "receive",
                            "type": "",
                            "stretch": false,
                            "tabPosition": "top",
                            "permissionSetting": "",
                            "display": true,
                            "tabPane": [
                              {
                                "name": "receive",
                                "label": "入库登记",
                                "lazy": true,
                                "disabled": false,
                                "paddingSize": "default",
                                "contentType": "flexBox",
                                "defaultSlot": {
                                  "__nodeId": "flexBox_lopncx3t",
                                  "__nodeName": "flexBox",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "isRow": false,
                                    "itemNum": 3,
                                    "width": "100%",
                                    "height": "100%",
                                    "itemConfig": [
                                      {
                                        "tag": "item-1",
                                        "isFixed": true,
                                        "showDragButton": false,
                                        "size": "",
                                        "paddingSize": "base",
                                        "clearPadding": [
                                          "bottom"
                                        ],
                                        "contentType": "container",
                                        "isHidden": false,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lqbohf05",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "dynamicFilter",
                                            "containerOptions": {
                                              "__nodeId": "dynamicFilter_lqbp4l1s",
                                              "__nodeName": "dynamicFilter",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "divider": true,
                                                "border": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "toolMaxWidth": "",
                                                "filterCode": "receiveOrderFilter",
                                                "display": true,
                                                "permissionSetting": "",
                                                "filterGutter": 6,
                                                "defaultSlot": {
                                                  "__nodeId": "flexLine_lqbp4l1t",
                                                  "__nodeName": "flexLine",
                                                  "__nodeType": "baseNode",
                                                  "__nodeStyle": {},
                                                  "__nodeEvent": {},
                                                  "__nodeOptions": {
                                                    "leftWidth": "50%",
                                                    "background": false,
                                                    "leftPadding": true,
                                                    "rightPadding": true,
                                                    "paddingSize": "",
                                                    "leftClearPadding": [],
                                                    "rightClearPadding": [],
                                                    "__activeSlot": "defaultSlot",
                                                    "defaultSlot": [
                                                      {
                                                        "__nodeId": "elementRender_lopncx4u",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lopncx4v",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": false,
                                                              "content": "添加",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "icon": "",
                                                              "iconFont": "icon cs-common add"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName() {\n                                                                  localStorage.setItem('route', 'receive')\n                                                                  this.$assemCore.setForm('receiveFormModel');\n                                                                  const {  receiveFormModel, dicData, validText } = this.$dataModels\n                                                                  const { lastProject } = this.$globalVars.$context\n                                                                  receiveFormModel.qReceive.serviceType = 10\n                                                                  validText.materialIds = []\n                                                                  for (const key in receiveFormModel.qReceive) {\n                                                                    if (['serviceType'].includes(key)) {\n\n                                                                    } else {\n                                                                      receiveFormModel.qReceive[key] = null\n                                                                    }\n                                                                  }\n                                                                  receiveFormModel.qReceiveMoreMaterials = []\n                                                                  // 获取照片配置\n                                                                  receiveFormModel.qReceivePhotos = await this.$sharedFns.getPhotoConfig('mq2ReceiveKey', 5)\n                                                                  receiveFormModel.deleteItems = []\n                                                                  receiveFormModel.deletePhotos = []\n                                                                  //  获取税率\n                                                                  const taxRate = await this.$requestFns.getDictionaryData({ dictType: 'taxRate' });\n                                                                  dicData.taxRate = taxRate.data.map(t => {\n                                                                    t.value = parseFloat(t.name)\n                                                                    t.label = t.name\n                                                                    return t\n                                                                  })\n                                                                  // 获取存放地\n                                                                  const storagePlace = await this.$requestFns.getDictionaryData({ dictType: 'storageLocation', orgId: lastProject.id });\n                                                                  dicData.storagePlace = storagePlace.data.map(t => {\n                                                                    t.value = t.fullName\n                                                                    return t\n                                                                  })\n\n                                                                  this.$globalVars.$router.push({\n                                                                    name: 'receiveEdit',\n                                                                    query: {}\n                                                                  })\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lopncx4v",
                                                            "__description": "收添加"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lopncx4u",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lopncx4w",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lopncx4x",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "修改",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "icon": "Edit"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName() {\n                                                                  localStorage.setItem('route', 'receive')\n                                                                  const { currentReceiveRow, receiveFormModel, dicData, validText } = this.$dataModels\n                                                                  const { lastProject } = this.$globalVars.$context\n                                                                  receiveFormModel.deleteItems = []\n                                                                  receiveFormModel.deletePhotos = []\n                                                                  receiveFormModel.photos = []\n                                                                  receiveFormModel.qReceiveMoreMaterials = []\n                                                                  validText.materialIds = []\n\n\n                                                                  // 获取节点导出模型\n                                                                  const curRow  = this.$exposeds.get('tableAsync_lopncx41').model.currentRow.value;\n                                                                  const {id,orgId} = curRow\n\n                                                                  //  获取税率\n                                                                  if (curRow.serviceType > 0) {\n                                                                    const taxRate = await this.$requestFns.getDictionaryData({ dictType: 'taxRate' });\n                                                                    dicData.taxRate = taxRate.data.map(t => {\n                                                                      t.value = parseFloat(t.name)\n                                                                      // t.label = t.name\n                                                                      return t\n                                                                    })\n                                                                  }\n                                                                  // 获取存放地\n                                                                  const storagePlace = await this.$requestFns.getDictionaryData({ dictType: 'storageLocation', orgId: lastProject.id });\n                                                                  dicData.storagePlace = storagePlace.data.map(t => {\n                                                                    t.value = t.fullName\n                                                                    return t\n                                                                  })\n                                                                  // 获取单据详情\n                                                                  const res = await this.$requestFns.getReceive({ orgId, id })\n                                                                  Object.assign(receiveFormModel.qReceive, res.data.qReceive)\n                                                                  receiveFormModel.photos = res.data.qReceivePhotos\n                                                                  receiveFormModel.qReceiveMoreMaterials = res.data.qReceiveMoreMaterials\n                                                                  receiveFormModel.qReceiveGpys = res.data.qReceiveGpys\n                                                                  // 验收卡控\n                                                                  await this.$sharedFns.editReceiveControl(res.data.qReceiveMoreMaterials);\n\n                                                                  this.$sharedFns.resetSortCode('receive');\n                                                                  // 处理照片\n                                                                  await this.$sharedFns.handlePhotoData('receive');\n                                                                  // console.log(this.$dataModels.receiveFormModel.qReceivePhotos);\n\n                                                                  this.$globalVars.$router.push({\n                                                                    name: 'receiveEdit',\n                                                                    query: { orgId, id }\n                                                                  })\n\n\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lopncx4x",
                                                            "__description": "收修改"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lopncx4w",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lopncx4y",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lopncx4z",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "提交",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common tijiao"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n\n\n                                                                  const {  receiveFormModel } = this.$dataModels\n                                                                  const { userId, userName, tenantId, lastProject } = this.$globalVars.$context;\n                                                                  const currentRow = this.$exposeds.get('tableAsync_lopncx41').model.currentRow.value;\n\n                                                                  this.$dataModels.currentReceiveRow.singleTable = currentRow\n\n\n                                                                  const { serviceType, recordedDate, id, orgId } = currentRow\n\n                                                                  const receiveData = await this.$requestFns.getReceive({ id: id, orgId: orgId });\n                                                                  Object.assign(receiveFormModel.qReceive, receiveData.data.qReceive)\n                                                                  receiveFormModel.qReceiveMoreMaterials = receiveData.data.qReceiveMoreMaterials\n                                                                  debugger\n                                                                  let isBreak = false\n                                                                  if (serviceType > 0) {\n                                                                    // 验收业务卡控逻辑\n                                                                    isBreak = await this.$sharedFns.receiveControl();\n                                                                  }\n                                                                  if (isBreak) {\n                                                                    this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                                    return\n                                                                  }\n\n                                                                  const obj = {\n                                                                    id: currentRow.id,\n                                                                    orgId: currentRow.orgId,\n                                                                    userName: userName,\n                                                                    readSnapshot: true\n                                                                  }\n\n                                                                  await this.$requestFns.auditReceive(obj).then(res=>{\n                                                                    if(res.data.success) {\n                                                                      this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n                                                                    } else {\n                                                                      this.$vueGlobal.$message({\n                                                                        type: 'error',\n                                                                        message: res.data.message\n                                                                      })\n                                                                    }\n                                                                  });\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: false\n                                                                  };\n\n\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lopncx4z",
                                                            "__description": "收提交",
                                                            "__nodeStyle": {
                                                              "marginRight": "50px"
                                                            }
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lopncx4y",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lozrsvrr",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lozrsvrs",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "撤销提交",
                                                              "type": "warning",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common chexiao"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "isOn": true,
                                                                "fn": "async function fnName() {\n                                                                  // 获取节点导出模型\n                                                                  const row = this.$exposeds.get('tableAsync_lopncx41').model.currentRow.value;\n\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  const data = await this.$requestFns.unAuditReceive({\n                                                                    id: row.id,\n                                                                    orgId: row.orgId,\n                                                                    userName: this.$globalVars.$context.userName\n                                                                  });\n                                                                  if(data.error===null){\n                                                                    if(data.data.success){\n                                                                      this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n                                                                    } else {\n                                                                      this.$vueGlobal.$message({\n                                                                        type: 'error',\n                                                                        message: data.data.message\n                                                                      })\n                                                                    }\n                                                                  }\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: false\n                                                                  };\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lozrsvrs",
                                                            "__description": "收撤销提交"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lozrsvrr",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lozthm11",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lozthm12",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "删除",
                                                              "type": "danger",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common delete"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  const {id,orgId} = this.$exposeds.get('tableAsync_lopncx41').model.currentRow.value;\n\n                                                                  await this.$requestFns.deleteReceive({id:id,orgId:orgId}).then(res=>{\n                                                                    if(!res.error){\n                                                                      this.$vueGlobal.$message.success('删除数据成功！')\n                                                                      this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n                                                                    }else{\n                                                                      this.$vueGlobal.$message.error('删除数据失败！')\n                                                                    }\n                                                                  }).catch(err=>{\n                                                                    this.$vueGlobal.$message.error('删除数据失败！' + err)\n                                                                  });\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: false\n                                                                  };\n\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lozthm12",
                                                            "__description": "删除"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lozthm11",
                                                        "__description": ""
                                                      }
                                                    ],
                                                    "rightSlot": [],
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeKey": "nodeKey_flexLine_lqbp4l1t",
                                                  "__description": ""
                                                },
                                                "toolSlot": [
                                                  {
                                                    "__nodeId": "elementRender_lopncx52",
                                                    "__nodeName": "elementRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "button",
                                                      "elementOptions": {
                                                        "__nodeId": "button_lopncx53",
                                                        "__nodeName": "button",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "modelName": "",
                                                          "size": "default",
                                                          "plain": true,
                                                          "content": "查询",
                                                          "type": "info",
                                                          "text": false,
                                                          "link": false,
                                                          "round": false,
                                                          "circle": false,
                                                          "loading": false,
                                                          "disabled": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "icon": "Search"
                                                        },
                                                        "__nodeEvent": {
                                                          "onClick": {
                                                            "isOn": true,
                                                            "fn": "async function fnName(){\n                                                              this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n                                                            }"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_button_lopncx53",
                                                        "__description": "查询"
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_elementRender_lopncx52",
                                                    "__description": ""
                                                  },
                                                  {
                                                    "__nodeId": "elementRender_ltczicjt",
                                                    "__nodeName": "elementRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "printExportConfig",
                                                      "elementOptions": {
                                                        "__nodeId": "printExportConfig_ltczicju",
                                                        "__nodeName": "printExportConfig",
                                                        "__nodeType": "baseNode",
                                                        "__nodeEvent": {},
                                                        "__nodeOptions": {
                                                          "exportParams": {},
                                                          "printParams": {},
                                                          "permissionSetting": "",
                                                          "display": true
                                                        },
                                                        "__nodeKey": "nodeKey_printExportConfig_ltczicju",
                                                        "__description": ""
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_elementRender_ltczicjt",
                                                    "__description": ""
                                                  }
                                                ],
                                                "filterItems": [
                                                  {
                                                    "name": "orgId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqbp4l1u",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "searchTreeSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "searchTreeSelect_lqbp4l1v",
                                                          "__nodeName": "searchTreeSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入检索内容",
                                                            "requestFn": "getOrgList",
                                                            "moreEnable": true,
                                                            "reloadEnable": true,
                                                            "defaultProps": {
                                                              "label": "name",
                                                              "value": "id"
                                                            },
                                                            "currentSize": 20,
                                                            "modelName": "receiveFilter.qReceiveModel.orgId",
                                                            "defaultText": "根节点",
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "300px",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn() {\n\n                                                                const rootNode = { name: this.$globalVars.$context.orgShortName, id: this.$globalVars.$context.orgId };\n                                                                this.$dataModels.receiveFilter.qReceiveModel.orgId = this.$globalVars.$context.orgId;\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  rootNode: rootNode,\n                                                                  defaultText: this.$globalVars.$context.orgName\n                                                                };\n\n                                                              }"
                                                            },
                                                            "onChange": {
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n\n                                                                this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_searchTreeSelect_lqbp4l1v",
                                                          "__description": "请选择"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqbp4l1u",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "orderDate",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqbp4l1w",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "datePicker",
                                                        "elementOptions": {
                                                          "__nodeId": "datePicker_lqbp4l1x",
                                                          "__nodeName": "datePicker",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "size": "default",
                                                            "editable": true,
                                                            "clearable": true,
                                                            "type": "month",
                                                            "prefixIcon": "Calendar",
                                                            "clearIcon": "CircleClose",
                                                            "placeholder": "请选择日期",
                                                            "modelName": "receiveFilter.qReceiveModel.orderDate",
                                                            "shortcuts": [],
                                                            "format": "YYYY-MM",
                                                            "valueFormat": "YYYY-MM",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                const { receiveFilter } = this.$dataModels;\n                                                                const { formatDate } = this.$utils;\n                                                                console.log(receiveFilter.qReceiveModel.orderDate);\n\n                                                                if (!this.$dataModels.receiveFilter.qReceiveModel.isClear && !receiveFilter.qReceiveModel.orderDate){\n                                                                  receiveFilter.qReceiveModel.orderDate = formatDate('YYYY-MM');\n                                                                }\n\n\n                                                              }"
                                                            },
                                                            "onChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(val){\n                                                                if(!val){\n                                                                  this.$dataModels.receiveFilter.qReceiveModel.isClear = true\n                                                                }\n                                                                this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_datePicker_lqbp4l1x",
                                                          "__description": "请选择日期",
                                                          "__nodeStyle": {
                                                            "width": "100%"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqbp4l1w",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "exitTime",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqbp4l1y",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "datePickerRange",
                                                        "elementOptions": {
                                                          "__nodeId": "datePickerRange_lqbp4l1z",
                                                          "__nodeName": "datePickerRange",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "clearable": false,
                                                            "defaultValue": [],
                                                            "modelName": "receiveFilter.qReceiveModel.exitTime",
                                                            "accountDay": 31,
                                                            "selectBarItems": [
                                                              "day",
                                                              "week",
                                                              "month",
                                                              "quarter",
                                                              "year",
                                                              "all"
                                                            ],
                                                            "defaultPicked": "month",
                                                            "type": "datetimerange",
                                                            "size": "default",
                                                            "valueFormat": "YYYY-MM-DD HH:mm:ss",
                                                            "placeholder": "请选择日期",
                                                            "startPlaceholder": "请选择日期",
                                                            "endPlaceholder": "结束时间",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_datePickerRange_lqbp4l1z",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqbp4l1y",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "supplierId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc4mzqk",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "basisCommonSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "basisCommonSelect_lqc4mzql",
                                                          "__nodeName": "basisCommonSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  clearable: true,\n                                                                  defaultText: this.$dataModels.receiveFilter.qReceiveModel.supplierName || '',\n                                                                  parameter: {\n                                                                    url: '/mquantity/suppliers-data',\n                                                                    fieldName: 'supplierName',\n                                                                    orgId: this.$globalVars.$context.orgId,\n                                                                    condtionItems: [\n                                                                      { fieldName: 'orderOrigin', op: 'in', fieldValue: [2] }\n                                                                    ]\n                                                                  }\n                                                                };\n\n\n\n                                                              }"
                                                            },
                                                            "onSelectionChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnSelectionChange(item){\n                                                                this.$dataModels.receiveFilter.qReceiveModel.supplierName = item.supplierName\n\n                                                                this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnClear(){\n                                                                this.$dataModels.receiveFilter.qReceiveModel.supplierName = ''\n                                                                this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeOptions": {
                                                            "defaultText": "",
                                                            "limit": 10,
                                                            "defaultProps": {
                                                              "label": "supplierName",
                                                              "subLabel": "subLabel",
                                                              "nextLabel": "nextLabel",
                                                              "value": "supplierId"
                                                            },
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "240px",
                                                            "clearable": true,
                                                            "placeholder": "请选择供应单位",
                                                            "searchPlaceholder": "请输入关键字搜索",
                                                            "disabled": false,
                                                            "searchEnable": true,
                                                            "parameter": {
                                                              "url": "/mquantity/suppliers-data",
                                                              "basisDataType": "supplier",
                                                              "orgId": 0,
                                                              "fieldName": "supplierName",
                                                              "condtionItems": [
                                                                {
                                                                  "fieldName": "orderOrigin",
                                                                  "op": "in",
                                                                  "fieldValue": [
                                                                    2
                                                                  ]
                                                                }
                                                              ],
                                                              "queryDataJson": {}
                                                            },
                                                            "addButton": false,
                                                            "downloadIcon": false,
                                                            "size": "default",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "modelName": "receiveFilter.qReceiveModel.supplierId"
                                                          },
                                                          "__nodeKey": "nodeKey_basisCommonSelect_lqc4mzql",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc4mzqk",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "settlementId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc4mzxp",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "basisCommonSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "basisCommonSelect_lqc4mzxq",
                                                          "__nodeName": "basisCommonSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n\n\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  clearable: true,\n                                                                  defaultText: this.$dataModels.receiveFilter.qReceiveModel.settlementName || '',\n                                                                  parameter: {\n                                                                    url: '/mq3-mquantity/query-settlement-data',\n                                                                    fieldName: 'settlementName',\n                                                                    orgId: this.$globalVars.$context.orgId,\n                                                                    condtionItems: [\n                                                                      { fieldName: 'orderOrigin', op: 'in', fieldValue: [2] }\n                                                                    ]\n                                                                  }\n                                                                };\n                                                              }"
                                                            },
                                                            "onSelectionChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnSelectionChange(item){\n\n\n                                                                this.$dataModels.receiveFilter.qReceiveModel.settlementName = item.settlementName\n\n                                                                this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnClear(){\n\n                                                                this.$dataModels.receiveFilter.qReceiveModel.settlementName = ''\n                                                                this.$exposeds.get('tableAsync_lopncx41').methods.loadData();\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeOptions": {
                                                            "defaultText": "",
                                                            "limit": 10,
                                                            "defaultProps": {
                                                              "label": "settlementName",
                                                              "subLabel": "subLabel",
                                                              "nextLabel": "nextLabel",
                                                              "value": "settlementId"
                                                            },
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "240px",
                                                            "clearable": false,
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入关键字搜索",
                                                            "disabled": false,
                                                            "searchEnable": true,
                                                            "parameter": {
                                                              "url": "",
                                                              "basisDataType": "supplier",
                                                              "orgId": 0,
                                                              "fieldName": "",
                                                              "condtionItems": [],
                                                              "queryDataJson": {}
                                                            },
                                                            "addButton": false,
                                                            "downloadIcon": false,
                                                            "size": "default",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "modelName": "receiveFilter.qReceiveModel.settlementId"
                                                          },
                                                          "__nodeKey": "nodeKey_basisCommonSelect_lqc4mzxq",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc4mzxp",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "orderCode",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqbp4l24",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "input",
                                                        "elementOptions": {
                                                          "__nodeId": "input_lqbp4l25",
                                                          "__nodeName": "input",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "plain": false,
                                                            "clearable": true,
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "type": "text",
                                                            "placeholder": "请输入",
                                                            "modelName": "receiveFilter.qReceiveModel.orderCode",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_input_lqbp4l25",
                                                          "__description": "请输入",
                                                          "__nodeStyle": {
                                                            "width": "100%"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqbp4l24",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "isAudit",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqbp4l26",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "select",
                                                        "elementOptions": {
                                                          "__nodeId": "select_lqbp4l27",
                                                          "__nodeName": "select",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "multiple": false,
                                                            "disabled": false,
                                                            "size": "default",
                                                            "clearable": false,
                                                            "collapseTags": false,
                                                            "collapseTagsTooltip": false,
                                                            "multipleLimit": 0,
                                                            "clearIcon": "CircleClose",
                                                            "fitInputWidth": false,
                                                            "filterable": false,
                                                            "valueKey": "value",
                                                            "placeholder": "请选择",
                                                            "modelName": "receiveFilter.qReceiveModel.isAudit",
                                                            "itemData": [
                                                              {
                                                                "value": "",
                                                                "label": "全部"
                                                              },
                                                              {
                                                                "value": true,
                                                                "label": "已提交"
                                                              },
                                                              {
                                                                "value": false,
                                                                "label": "未提交"
                                                              }
                                                            ],
                                                            "defaultProps": {
                                                              "label": "label",
                                                              "value": "value"
                                                            },
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_select_lqbp4l27",
                                                          "__description": "请选择"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqbp4l26",
                                                      "__description": ""
                                                    }
                                                  }
                                                ],
                                                "labelWidth": "80px"
                                              },
                                              "__nodeKey": "nodeKey_dynamicFilter_lqbp4l1s",
                                              "__description": "收料主界面过滤器"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lqbohf05",
                                          "__description": ""
                                        }
                                      },
                                      {
                                        "tag": "item-2",
                                        "isFixed": true,
                                        "showDragButton": true,
                                        "size": "400px",
                                        "paddingSize": "base",
                                        "clearPadding": [],
                                        "contentType": "container",
                                        "display": true,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lopncx3v",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "box",
                                            "containerOptions": {
                                              "__nodeId": "box_lopncx3z",
                                              "__nodeName": "box",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "shadow": false,
                                                "border": true,
                                                "background": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "clearBorder": [],
                                                "height": "100%",
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lopncx40",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "tableAsync",
                                                    "elementOptions": {
                                                      "__nodeId": "tableAsync_lopncx41",
                                                      "__nodeName": "tableAsync",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "requestFn": "getReceiveData",
                                                        "columnConfigs": [
                                                          {
                                                            "attr": {
                                                              "prop": "id",
                                                              "label": "序号",
                                                              "type": "index"
                                                            },
                                                            "id": "0_item_config_lu93ycd5"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orgId",
                                                              "label": "打印/导出",
                                                              "scopedSlot": "print"
                                                            },
                                                            "id": "1_item_config_lu93ycd6"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isAudit",
                                                              "label": "提交状态",
                                                              "scopedSlot": "isAudit"
                                                            },
                                                            "id": "2_item_config_lu93ycd7"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orgName",
                                                              "label": "组织机构"
                                                            },
                                                            "id": "3_item_config_lu93ycd8"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderCode",
                                                              "label": "单据编号",
                                                              "scopedSlot": "orderCode"
                                                            },
                                                            "id": "4_item_config_lu93ycd9"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "exitTime",
                                                              "label": "入库时间"
                                                            },
                                                            "id": "5_item_config_lu93ycda"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "supplierName",
                                                              "label": "供应单位"
                                                            },
                                                            "id": "6_item_config_lu93ycdb"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "settlementName",
                                                              "label": "结算单位"
                                                            },
                                                            "id": "7_item_config_lu93ycdc"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "maker",
                                                              "label": "制单人"
                                                            },
                                                            "id": "8_item_config_lu93ycdd"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "makerDate",
                                                              "label": "制单日期"
                                                            },
                                                            "id": "9_item_config_lu93ycde"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auditor",
                                                              "label": "提交人"
                                                            },
                                                            "id": "10_item_config_lu93ycdf"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auditDate",
                                                              "label": "提交时间"
                                                            },
                                                            "id": "11_item_config_lu93ycdg"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "remark",
                                                              "label": "单据备注"
                                                            },
                                                            "id": "12_item_config_lu93ycdh"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "printTimes",
                                                              "label": "附件管理",
                                                              "scopedSlot": "printTimes"
                                                            },
                                                            "id": "13_item_config_lu93ycdi"
                                                          }
                                                        ],
                                                        "columnSlots": [
                                                          {
                                                            "code": "printTimes",
                                                            "columRender": {
                                                              "__nodeId": "columRender_loqifltt",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "uploadComp",
                                                                "elementOptions": {
                                                                  "__nodeId": "uploadComp_loqiflts",
                                                                  "__nodeName": "uploadComp",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeEvent": {},
                                                                  "__nodeOptions": {
                                                                    "moduleCode": "receive",
                                                                    "orderId": 0,
                                                                    "uploadAttach": true,
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "size": "small"
                                                                  },
                                                                  "__nodeKey": "nodeKey_uploadComp_loqiflts",
                                                                  "__description": ""
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_loqifltt",
                                                              "__description": ""
                                                            },
                                                            "propName": "附件管理"
                                                          },
                                                          {
                                                            "code": "print",
                                                            "columRender": {
                                                              "__nodeId": "columRender_loqiflvo",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "buttonGroup",
                                                                "elementOptions": {
                                                                  "__nodeId": "buttonGroup_loqiflvj",
                                                                  "__nodeName": "buttonGroup",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "buttonGroupOptions": [
                                                                      {
                                                                        "tooltipOption": {
                                                                          "effect": "dark",
                                                                          "content": "打印数据",
                                                                          "placement": "top"
                                                                        },
                                                                        "btnType": "button",
                                                                        "buttonOptions": {
                                                                          "__nodeId": "button_loqiflvm",
                                                                          "__nodeName": "button",
                                                                          "__nodeType": "columnNode",
                                                                          "__nodeOptions": {
                                                                            "size": "small",
                                                                            "type": "success",
                                                                            "icon": "Printer",
                                                                            "plain": true,
                                                                            "circle": true
                                                                          },
                                                                          "__nodeEvent": {
                                                                            "onClick": {
                                                                              "isOn": true,
                                                                              "fn": "async function fnName(row){\n                                                                                this.$sharedFns.printReceive(row, 'print');\n                                                                              }"
                                                                            }
                                                                          },
                                                                          "__nodeKey": "nodeKey_button_loqiflvm"
                                                                        }
                                                                      },
                                                                      {
                                                                        "tooltipOption": {
                                                                          "effect": "dark",
                                                                          "content": "导出数据",
                                                                          "placement": "top"
                                                                        },
                                                                        "btnType": "button",
                                                                        "buttonOptions": {
                                                                          "__nodeId": "button_loqiflvn",
                                                                          "__nodeName": "button",
                                                                          "__nodeType": "columnNode",
                                                                          "__nodeEvent": {
                                                                            "onClick": {
                                                                              "isOn": true,
                                                                              "fn": "async function fnName(row){\n\n                                                                                this.$sharedFns.printReceive(row,'excel');\n\n                                                                              }"
                                                                            }
                                                                          },
                                                                          "__nodeOptions": {
                                                                            "size": "small",
                                                                            "type": "success",
                                                                            "plain": true,
                                                                            "circle": true,
                                                                            "iconFont": "icon cs-common excel"
                                                                          },
                                                                          "__nodeKey": "nodeKey_button_loqiflvn"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "__nodeEvent": {},
                                                                  "__nodeKey": "nodeKey_buttonGroup_loqiflvj",
                                                                  "__description": ""
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_loqiflvo",
                                                              "__description": ""
                                                            },
                                                            "propName": "打印/导出"
                                                          },
                                                          {
                                                            "code": "isAudit",
                                                            "columRender": {
                                                              "__nodeId": "columRender_loqiflxf",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "tag",
                                                                "elementOptions": {
                                                                  "__nodeId": "tag_loqiflxe",
                                                                  "__nodeName": "tag",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "content": "标签",
                                                                    "closable": false,
                                                                    "hit": false,
                                                                    "round": false,
                                                                    "effect": "light",
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "size": "small"
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onValueRender": {
                                                                      "isOn": true,
                                                                      "fn": "function onValueRenderFn(row){\n\n                                                                        if(row.isAudit){\n                                                                          return { content: '已提交', type: 'success'}\n                                                                        }else{\n                                                                          return { content: '未提交' ,type:'danger'}\n                                                                        }\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_tag_loqiflxe",
                                                                  "__description": "标签"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_loqiflxf",
                                                              "__description": ""
                                                            },
                                                            "propName": "提交状态"
                                                          },
                                                          {
                                                            "code": "orderCode",
                                                            "columRender": {
                                                              "__nodeId": "columRender_loqiflz6",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "button",
                                                                "elementOptions": {
                                                                  "__nodeId": "button_loqiflz5",
                                                                  "__nodeName": "button",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "size": "default",
                                                                    "plain": true,
                                                                    "content": "",
                                                                    "type": "primary",
                                                                    "text": false,
                                                                    "link": true,
                                                                    "round": false,
                                                                    "circle": false,
                                                                    "loading": false,
                                                                    "disabled": false,
                                                                    "display": true,
                                                                    "permissionSetting": ""
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onValueRender": {
                                                                      "isOn": true,
                                                                      "fn": "function onValueRenderFn(row){\n                                                                        return {\n                                                                          content: row.orderCode\n                                                                        };\n                                                                      }"
                                                                    },
                                                                    "onClick": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function fnName(row){\n                                                                        localStorage.setItem('route', 'receive')\n                                                                        const { receiveFormModel, previewSrcList, gpyPreviewList } = this.$dataModels\n                                                                        previewSrcList.items = []\n                                                                        gpyPreviewList.items = []\n                                                                        receiveFormModel.gpyPhotos.length = []\n                                                                        const { orgId, id } = row\n                                                                        const res = await this.$requestFns.getReceive({ orgId, id });\n\n\n                                                                        Object.assign(receiveFormModel.qReceive, res.data.qReceive)\n                                                                        receiveFormModel.photos = []\n                                                                        receiveFormModel.qReceiveMoreMaterials = res.data.qReceiveMoreMaterials\n                                                                        let keys = []\n                                                                        let ghyPhotoList = []\n                                                                        res.data.qReceiveGpys.forEach(p => {\n                                                                          p.gpyPhotoUrl ? ghyPhotoList.push(p.gpyPhotoUrl) : ''\n                                                                        })\n                                                                        res.data.qReceivePhotos.forEach(p => {\n                                                                          p.photoUrl ? keys.push(p.photoUrl) : ''\n                                                                        })\n                                                                        if (ghyPhotoList.length) {\n                                                                          const gpyps = await this.$sharedFns.downloadFile({ keys: ghyPhotoList });\n                                                                          res.data.qReceiveGpys.forEach(t => {\n                                                                            receiveFormModel.gpyPhotos.push(Object.assign(t, { gpyPhotoUrl: gpyps[t.gpyPhotoUrl] }))\n                                                                            gpyPreviewList.items.push(t.gpyPhotoUrl)\n                                                                          })\n                                                                        }\n\n                                                                        console.log(receiveFormModel,'receiveFormModel');\n                                                                        console.log(this.$dataModels.gpyPreviewList.items,'this.$dataModels.gpyPreviewList.items');\n                                                                        debugger\n                                                                        if (keys.length) {\n                                                                          const ps = await this.$sharedFns.downloadFile({ keys: keys });\n                                                                          res.data.qReceivePhotos.forEach(t => {\n                                                                            receiveFormModel.photos.push(Object.assign(t, { _photoUrl: ps[t.photoUrl] }))\n                                                                            previewSrcList.items.push(ps[t.photoUrl])\n                                                                          })\n                                                                          debugger\n                                                                        }\n                                                                        this.$globalVars.$router.push({\n                                                                          name: 'receiveDetail',\n                                                                          query: row\n                                                                        })\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_button_loqiflz5",
                                                                  "__description": "按钮"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_loqiflz6",
                                                              "__description": ""
                                                            },
                                                            "propName": "单据编号"
                                                          },
                                                          {
                                                            "code": "orgId",
                                                            "columRender": {
                                                              "__nodeId": "columRender_ltdzqfpy",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "button",
                                                                "elementOptions": {
                                                                  "__nodeId": "button_ltdzqg67",
                                                                  "__nodeName": "button",
                                                                  "__nodeType": "baseNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "size": "default",
                                                                    "plain": true,
                                                                    "content": "按钮",
                                                                    "type": "primary",
                                                                    "text": false,
                                                                    "link": false,
                                                                    "round": false,
                                                                    "circle": false,
                                                                    "loading": false,
                                                                    "disabled": false,
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "tooltip": false,
                                                                    "tooltipEffect": "dark",
                                                                    "tooltipContent": "显示的内容",
                                                                    "tooltipPlacement": "bottom"
                                                                  },
                                                                  "__nodeEvent": {},
                                                                  "__nodeKey": "nodeKey_button_ltdzqg67",
                                                                  "__description": "按钮"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_ltdzqfpy",
                                                              "__description": ""
                                                            },
                                                            "propName": "打印/导出"
                                                          }
                                                        ],
                                                        "columnHeaderSlots": [],
                                                        "showSummary": false,
                                                        "pagination": {
                                                          "currentSize": 10,
                                                          "pageSizes": [
                                                            10,
                                                            20,
                                                            30,
                                                            50
                                                          ],
                                                          "layout": "sizes,prev,pager,next,total"
                                                        },
                                                        "tableCodeRemark": "",
                                                        "tableCode": "qReceiveOrderTable",
                                                        "isCustom": true
                                                      },
                                                      "__nodeEvent": {
                                                        "onMounted": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn(){\n                                                            const { formatDate } = this.$utils;\n                                                            if (!this.$dataModels.receiveFilter.qReceiveModel.isClear && !  this.$dataModels.receiveFilter.qReceiveModel.orderDate) {\n                                                              this.$dataModels.receiveFilter.qReceiveModel.orderDate = formatDate('YYYY-MM');\n                                                            }\n                                                            this.$currentInstance.exposed.methods.loadData();\n                                                            this.$sharedFns.changeBtnState('receive');\n                                                          }"
                                                        },
                                                        "onRowClick": {
                                                          "isOn": true,
                                                          "fn": "async function fnRowClick(row, column){\n                                                            this.$currentInstance.exposed.model.currentRow.value = row;\n                                                            this.$exposeds.get('tableReport_lopncx48').methods.loadData();\n                                                            this.$sharedFns.changeBtnState('receive');\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_tableAsync_lopncx41",
                                                      "__description": "收料主界面主表"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lopncx40",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeKey": "nodeKey_box_lopncx3z",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lopncx3v",
                                          "__description": ""
                                        },
                                        "dragButtonPosition": "bottom"
                                      },
                                      {
                                        "tag": "item-3",
                                        "isFixed": false,
                                        "showDragButton": false,
                                        "size": "",
                                        "paddingSize": "base",
                                        "clearPadding": [
                                          "top"
                                        ],
                                        "contentType": "container",
                                        "display": true,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lopncx3w",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "box",
                                            "containerOptions": {
                                              "__nodeId": "box_lopncx43",
                                              "__nodeName": "box",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "shadow": false,
                                                "border": true,
                                                "background": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "clearBorder": [],
                                                "height": "100%",
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lopncx47",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "tableReport",
                                                    "elementOptions": {
                                                      "__nodeId": "tableReport_lopncx48",
                                                      "__nodeName": "tableReport",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {
                                                        "onLoadData": {
                                                          "isOn": true,
                                                          "fn": "async function fnLoadData(params) {\n                                                            this.$currentInstance.exposed.model.tableLoading.value = true;\n                                                            const { id, orgId } = this.$exposeds.get('tableAsync_lopncx41').model.currentRow.value;\n                                                            const data = await this.$requestFns.getReceive({ id: id, orgId: orgId });\n                                                            if (!data.error) {\n                                                              this.$currentInstance.exposed.model.tableData.value = data.data.qReceiveMoreMaterials;\n                                                            } else {\n                                                              this.$currentInstance.exposed.model.tableData.value = []\n                                                            }\n                                                            this.$currentInstance.exposed.model.tableLoading.value = false;\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeOptions": {
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "requestFn": "",
                                                        "columnConfigs": [
                                                          {
                                                            "attr": {
                                                              "prop": "id",
                                                              "label": "选择",
                                                              "type": "selection"
                                                            },
                                                            "id": "0_item_config_ltsmir30"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orgId",
                                                              "label": "序号",
                                                              "type": "index"
                                                            },
                                                            "id": "1_item_config_ltsmir31"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialName",
                                                              "label": "物资名称"
                                                            },
                                                            "id": "2_item_config_ltsmir32"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialModel",
                                                              "label": "规格型号"
                                                            },
                                                            "id": "3_item_config_ltsmir33"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialUnit",
                                                              "label": "计量单位"
                                                            },
                                                            "id": "4_item_config_ltsmir34"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "netQuantity",
                                                              "label": "收料数量"
                                                            },
                                                            "id": "5_item_config_ltsmir35"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxRate",
                                                              "label": "税率(%)"
                                                            },
                                                            "id": "6_item_config_ltsmir36"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxIncludedPrice",
                                                              "label": "含税单价(元)"
                                                            },
                                                            "id": "7_item_config_ltsmir37"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "freight",
                                                              "label": "运费(元)"
                                                            },
                                                            "id": "8_item_config_ltsmir38"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "manufacturer",
                                                              "label": "生产厂商"
                                                            },
                                                            "id": "9_item_config_ltsmir39"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "batchNo",
                                                              "label": "炉批号"
                                                            },
                                                            "id": "10_item_config_ltsmir3a"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "storagePlace",
                                                              "label": "存放地"
                                                            },
                                                            "id": "11_item_config_ltsmir3b"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "testReportNo",
                                                              "label": "实验报告号"
                                                            },
                                                            "id": "12_item_config_ltsmir3c"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "acceptanceRecord",
                                                              "label": "验收情况记录"
                                                            },
                                                            "id": "13_item_config_ltsmir3d"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "qualityCertificate",
                                                              "label": "质量证明文件"
                                                            },
                                                            "id": "14_item_config_ltsmir3e"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "remark",
                                                              "label": "材料备注"
                                                            },
                                                            "id": "15_item_config_ltsmir3f"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialCode",
                                                              "label": "物资编码"
                                                            },
                                                            "id": "16_item_config_ltsmir3g"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auxiliaryUnit",
                                                              "label": "辅单位"
                                                            },
                                                            "id": "17_item_config_ltsmir3h"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "classFullId",
                                                              "label": "材料类别fullId"
                                                            },
                                                            "id": "18_item_config_ltsmir3i"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "roughQuantity",
                                                              "label": "毛重"
                                                            },
                                                            "id": "19_item_config_ltsmir3j"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "conversionRate",
                                                              "label": "转化率"
                                                            },
                                                            "id": "20_item_config_ltsmir3k"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "deductRate",
                                                              "label": "扣率"
                                                            },
                                                            "id": "21_item_config_ltsmir3l"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "deductQuantity",
                                                              "label": "扣吨"
                                                            },
                                                            "id": "22_item_config_ltsmir3m"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "oriNetQuantity",
                                                              "label": "原始净重"
                                                            },
                                                            "id": "23_item_config_ltsmir3n"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialId",
                                                              "label": "主材主键"
                                                            },
                                                            "id": "24_item_config_ltsmir3o"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderId",
                                                              "label": "主表主键"
                                                            },
                                                            "id": "25_item_config_ltsmir3p"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auxiliaryNetQuantity",
                                                              "label": "辅单位净重"
                                                            },
                                                            "id": "26_item_config_ltsmir3q"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "mainNetQuantity",
                                                              "label": "净重主单位"
                                                            },
                                                            "id": "27_item_config_ltsmir3r"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "itemBarCode",
                                                              "label": null
                                                            },
                                                            "id": "28_item_config_ltsmir3s"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxFreePrice",
                                                              "label": null
                                                            },
                                                            "id": "29_item_config_ltsmir3t"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accountOrderId",
                                                              "label": null
                                                            },
                                                            "id": "30_item_config_ltsmir3u"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accountor",
                                                              "label": null
                                                            },
                                                            "id": "31_item_config_ltsmir3v"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "classId",
                                                              "label": "材料类别id"
                                                            },
                                                            "id": "32_item_config_ltsmir3w"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accountDate",
                                                              "label": null
                                                            },
                                                            "id": "33_item_config_ltsmir3x"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isAccounted",
                                                              "label": null
                                                            },
                                                            "id": "34_item_config_ltsmir3y"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "oriMaterialId",
                                                              "label": "材料信息varchar主键"
                                                            },
                                                            "id": "35_item_config_ltsmir3z"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "skillCardNo",
                                                              "label": null
                                                            },
                                                            "id": "36_item_config_ltsmir40"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "purchaseMethodFullNames",
                                                              "label": "采购方式全称"
                                                            },
                                                            "id": "37_item_config_ltsmir41"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderType",
                                                              "label": null
                                                            },
                                                            "id": "38_item_config_ltsmir42"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "technicalRequest",
                                                              "label": "技术要求"
                                                            },
                                                            "id": "39_item_config_ltsmir43"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "stockbinFullName",
                                                              "label": "存放地"
                                                            },
                                                            "id": "40_item_config_ltsmir44"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "itemContractCode",
                                                              "label": "合同编号"
                                                            },
                                                            "id": "41_item_config_ltsmir45"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "diffRemark",
                                                              "label": "调差备注"
                                                            },
                                                            "id": "42_item_config_ltsmir46"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "serviceType",
                                                              "label": null
                                                            },
                                                            "id": "43_item_config_ltsmir47"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "labDeductRate",
                                                              "label": "实验室测定扣率"
                                                            },
                                                            "id": "44_item_config_ltsmir48"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "purchaseMethods",
                                                              "label": "采购方式"
                                                            },
                                                            "id": "45_item_config_ltsmir49"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "waybillWeight",
                                                              "label": null
                                                            },
                                                            "id": "46_item_config_ltsmir4a"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "receivePrice",
                                                              "label": null
                                                            },
                                                            "id": "47_item_config_ltsmir4b"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "labDeductQuantity",
                                                              "label": "实验室测定扣重"
                                                            },
                                                            "id": "48_item_config_ltsmir4c"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialSpec",
                                                              "label": "材料规格"
                                                            },
                                                            "id": "49_item_config_ltsmir4d"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isRed",
                                                              "label": null
                                                            },
                                                            "id": "50_item_config_ltsmir4e"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "sortCode",
                                                              "label": null
                                                            },
                                                            "id": "51_item_config_ltsmir4f"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isNew",
                                                              "label": null
                                                            },
                                                            "id": "52_item_config_ltsmir4g"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "declarationState",
                                                              "label": "报验情况"
                                                            },
                                                            "id": "53_item_config_ltsmir4h"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "submitDate",
                                                              "label": null
                                                            },
                                                            "id": "54_item_config_ltsmir4i"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxFreeSum",
                                                              "label": null
                                                            },
                                                            "id": "55_item_config_ltsmir4j"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxIncludedSum",
                                                              "label": null
                                                            },
                                                            "id": "56_item_config_ltsmir4k"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxAmount",
                                                              "label": null
                                                            },
                                                            "id": "57_item_config_ltsmir4l"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accountQuantity",
                                                              "label": null
                                                            },
                                                            "id": "58_item_config_ltsmir4m"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "checkState",
                                                              "label": null
                                                            },
                                                            "id": "59_item_config_ltsmir4n"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "priceType",
                                                              "label": "价格类型,合同价调查价"
                                                            },
                                                            "id": "60_item_config_ltsmir4o"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "createdAt",
                                                              "label": "创建时间"
                                                            },
                                                            "id": "61_item_config_ltsmir4p"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "updatedAt",
                                                              "label": null
                                                            },
                                                            "id": "62_item_config_ltsmir4q"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isRemoved",
                                                              "label": "删除标记"
                                                            },
                                                            "id": "63_item_config_ltsmir4r"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "stockbinId",
                                                              "label": "存放地id"
                                                            },
                                                            "id": "64_item_config_ltsmir4s"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "originalOrgId",
                                                              "label": "原条码orgId"
                                                            },
                                                            "id": "65_item_config_ltsmir4t"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "oriStockbinId",
                                                              "label": "存放地第三方id"
                                                            },
                                                            "id": "66_item_config_ltsmir4u"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accTaxRate",
                                                              "label": "对账税率"
                                                            },
                                                            "id": "67_item_config_ltsmir4v"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "summaryId",
                                                              "label": "收料汇总id"
                                                            },
                                                            "id": "68_item_config_ltsmir4w"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isVoid",
                                                              "label": "是否作废"
                                                            },
                                                            "id": "69_item_config_ltsmir4x"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "oriPlanId",
                                                              "label": "采购计划id"
                                                            },
                                                            "id": "70_item_config_ltsmir4y"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "typeMark",
                                                              "label": "原发料id"
                                                            },
                                                            "id": "71_item_config_ltsmir4z"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accTaxIncludedPrice",
                                                              "label": "对账单价"
                                                            },
                                                            "id": "72_item_config_ltsmir50"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accDeductQuantity",
                                                              "label": "对账扣吨"
                                                            },
                                                            "id": "73_item_config_ltsmir51"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "accDeductRate",
                                                              "label": "对账扣率"
                                                            },
                                                            "id": "74_item_config_ltsmir52"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "receiveType",
                                                              "label": "单据类型"
                                                            },
                                                            "id": "75_item_config_ltsmir53"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "itemContractId",
                                                              "label": "合同id"
                                                            },
                                                            "id": "76_item_config_ltsmir54"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "colVarchar_50No_01",
                                                              "label": "字符串50-01"
                                                            },
                                                            "id": "77_item_config_ltsmir55"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "colVarchar_50No_02",
                                                              "label": "字符串50-02"
                                                            },
                                                            "id": "78_item_config_ltsmir56"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "colVarchar_50No_03",
                                                              "label": "字符串50-03"
                                                            },
                                                            "id": "79_item_config_ltsmir57"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "colVarchar_50No_04",
                                                              "label": "字符串50-04"
                                                            },
                                                            "id": "80_item_config_ltsmir58"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "colBigint_20No_01",
                                                              "label": "整型-主键类-01"
                                                            },
                                                            "id": "81_item_config_ltsmir59"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "colBigint_20No_02",
                                                              "label": "整型-主键类-02"
                                                            },
                                                            "id": "82_item_config_ltsmir5a"
                                                          }
                                                        ],
                                                        "columnSlots": [],
                                                        "columnHeaderSlots": [],
                                                        "showSummary": false,
                                                        "pagination": {
                                                          "currentSize": 10,
                                                          "pageSizes": [
                                                            10,
                                                            20,
                                                            30,
                                                            50
                                                          ],
                                                          "layout": "sizes,prev,pager,next,total"
                                                        },
                                                        "tableCodeRemark": "",
                                                        "tableCode": "qReceiveOrderItemTable",
                                                        "isCustom": true
                                                      },
                                                      "__nodeKey": "nodeKey_tableReport_lopncx48",
                                                      "__description": "收料主界面从表"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lopncx47",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeKey": "nodeKey_box_lopncx43",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lopncx3w",
                                          "__description": ""
                                        }
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {},
                                  "__nodeKey": "nodeKey_flexBox_lopncx3t",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "delivery",
                                "label": "出库登记",
                                "lazy": true,
                                "disabled": false,
                                "paddingSize": "default",
                                "contentType": "flexBox",
                                "defaultSlot": {
                                  "__nodeId": "flexBox_lozthmog",
                                  "__nodeName": "flexBox",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "isRow": false,
                                    "itemNum": 3,
                                    "width": "100%",
                                    "height": "100%",
                                    "itemConfig": [
                                      {
                                        "tag": "item-1",
                                        "isFixed": true,
                                        "showDragButton": false,
                                        "size": "",
                                        "paddingSize": "base",
                                        "clearPadding": [
                                          "bottom"
                                        ],
                                        "contentType": "container",
                                        "isHidden": false,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lqc5azod",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "dynamicFilter",
                                            "containerOptions": {
                                              "__nodeId": "dynamicFilter_lqc5sr9y",
                                              "__nodeName": "dynamicFilter",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "divider": true,
                                                "border": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "toolMaxWidth": "",
                                                "filterCode": "qDeliveryOrderFilter",
                                                "display": true,
                                                "permissionSetting": "",
                                                "filterGutter": 6,
                                                "defaultSlot": {
                                                  "__nodeId": "flexLine_lqc5sr9z",
                                                  "__nodeName": "flexLine",
                                                  "__nodeType": "baseNode",
                                                  "__nodeStyle": {},
                                                  "__nodeEvent": {},
                                                  "__nodeOptions": {
                                                    "leftWidth": "50%",
                                                    "background": false,
                                                    "leftPadding": true,
                                                    "rightPadding": true,
                                                    "paddingSize": "",
                                                    "leftClearPadding": [],
                                                    "rightClearPadding": [],
                                                    "__activeSlot": "defaultSlot",
                                                    "defaultSlot": [
                                                      {
                                                        "__nodeId": "elementRender_lozthuuw",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lozthuux",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": false,
                                                              "content": "添加",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common add"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName() {\n                                                                  localStorage.setItem('route', 'delivery')\n                                                                  this.$assemCore.setForm('deliveryFormModel');\n                                                                  const { deliveryFormModel} = this.$dataModels\n                                                                  deliveryFormModel.qDeliveryPhotos = await this.$sharedFns.getPhotoConfig('mq2DeliveryKey', 5)\n                                                                  deliveryFormModel.qDelivery.serviceType = 10\n                                                                  deliveryFormModel.qDeliveryMoreOrders = []\n                                                                  deliveryFormModel.qDeliveryMoreMaterials = []\n                                                                  deliveryFormModel.deleteItems = []\n                                                                  deliveryFormModel.deletePhotos = []\n                                                                  const { orgId } = this.$globalVars.$context\n                                                                  const { formatDate } = this.$utils;\n                                                                  const obj = {\n                                                                    orgId: orgId,\n                                                                    id: null,\n                                                                    codeWord: '发料-',\n                                                                    recordedDate: formatDate('YYYY-MM-DD HH:mm:ss'),\n                                                                    moduleCode: 'mq_delivery'\n                                                                  }\n                                                                  this.$dataModels.deliveryFormModel.qDelivery.orderCode = await this.$sharedFns.getOrderCode(obj);\n                                                                  console.log(this.$dataModels.deliveryFormModel.qDelivery.orderCode);\n                                                                  console.log(\"=================================this.$dataModels.deliveryFormModel.qDelivery.orderCode==========================\");\n                                                                  this.$globalVars.$router.push({\n                                                                    name: 'deliveryEdit',\n                                                                    query: {}\n                                                                  })\n\n\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lozthuux",
                                                            "__description": "发添加"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lozthuuw",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lozthv2a",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lozthv2b",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "修改",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "icon": "Edit"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName() {\n                                                                  localStorage.setItem('route', 'delivery')\n                                                                  const {  deliveryFormModel, childOrgList } = this.$dataModels\n                                                                  // 获取节点导出模型\n                                                                  const currentReceiveRow = this.$exposeds.get('tableAsync_lozthqrh').model.currentRow.value\n                                                                  childOrgList.items = []\n\n                                                                  deliveryFormModel.deleteItems = []\n                                                                  deliveryFormModel.deletePhotos = []\n                                                                  deliveryFormModel.qDeliveryPhotos = []\n                                                                  deliveryFormModel.qDeliveryMoreOrders = []\n                                                                  deliveryFormModel.qDeliveryMoreMaterials = []\n\n\n\n\n                                                                  // 获取单据详情\n                                                                  const res = await this.$requestFns.getqDelivery({\n                                                                    id: currentReceiveRow.id,\n                                                                    orgId: currentReceiveRow.orgId\n                                                                  })\n\n                                                                  Object.assign(deliveryFormModel.qDelivery, res.data.qDelivery)\n                                                                  deliveryFormModel.photos = res.data.qDeliveryPhotos\n                                                                  deliveryFormModel.qDeliveryMoreOrders = res.data.qDeliveryMoreOrders\n                                                                  deliveryFormModel.qDeliveryGpys = res.data.qDeliveryGpys\n                                                                  this.$sharedFns.resetSortCode('delivery');\n                                                                  // 处理照片\n                                                                  await this.$sharedFns.handlePhotoData('delivery');\n\n                                                                  this.$globalVars.$router.push({\n                                                                    name: 'deliveryEdit',\n                                                                    query: {\n                                                                      id: currentReceiveRow.id,\n                                                                      orgId: currentReceiveRow.orgId\n                                                                    }\n                                                                  })\n\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lozthv2b",
                                                            "__description": "发修改"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lozthv2a",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lozthv9o",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lozthv9p",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "提交",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common tijiao"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n\n                                                                  // 获取节点导出模型\n                                                                  const { deliveryType, id, orgId } = this.$exposeds.get('tableAsync_lozthqrh').model.currentRow.value;\n                                                                  const { userName } = this.$globalVars.$context;\n                                                                  if (deliveryType === 3) {\n                                                                    return\n                                                                  }\n\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  const obj = {\n                                                                    id: id,\n                                                                    userName: userName,\n                                                                    orgId: orgId\n                                                                  }\n\n                                                                  await this.$requestFns.auditDelivery(obj).then(data => {\n                                                                    if (data.data.success) {\n                                                                      this.$vueGlobal.$message.success('单据提交成功')\n\n                                                                      this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n                                                                    } else {\n                                                                      this.$vueGlobal.$message.error('失败！' + data.data.message)\n                                                                    }\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      loading: false\n                                                                    };\n                                                                  }).catch(err => {\n                                                                    this.$vueGlobal.$message.error('提交失败！' + err)\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      loading: false\n                                                                    };\n                                                                  })\n\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lozthv9p",
                                                            "__description": "发提交",
                                                            "__nodeStyle": {
                                                              "marginRight": "50px"
                                                            }
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lozthv9o",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lozthvh2",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lozthvh3",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "撤销提交",
                                                              "type": "warning",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common chexiao"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n                                                                  const currentRow = this.$exposeds.get('tableAsync_lozthqrh').model.currentRow.value;\n                                                                  const { userName } = this.$globalVars.$context;\n                                                                  const obj = {\n                                                                    id: currentRow.id,\n                                                                    userName: userName,\n                                                                    orgId: currentRow.orgId\n                                                                  }\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  if (currentRow.isRed === false) {\n                                                                    if (currentRow.allotId > 0) {\n                                                                      await this.$requestFns.queryLabourAllotParams({id:currentRow.id, orgId: currentRow.orgId}).then(data => {\n                                                                        this.$vueGlobal.$message.error(\n                                                                          '撤销提交失败,请先撤销单号为【' +\n                                                                          data.data.rows[0].orderCode +\n                                                                          '】的调拨单！'\n                                                                        )\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          loading: false\n                                                                        };\n                                                                      }).catch(err => {\n                                                                        this.$vueGlobal.$message.error('撤销提交失败！' + err)\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          loading: false\n                                                                        };\n                                                                      })\n                                                                    } else {\n                                                                      await this.$requestFns.unAuditDelivery(obj).then(data => {\n                                                                        if (data.data.success) {\n                                                                          this.$vueGlobal.$message.success(data.data.message)\n                                                                          this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n                                                                        } else {\n                                                                          this.$vueGlobal.$message.error(data.data.message)\n                                                                        }\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          loading: false\n                                                                        };\n                                                                      })\n                                                                        .catch(err => {\n                                                                          this.$vueGlobal.$message.error('撤销提交失败！' + err)\n                                                                          this.$currentInstance.exposed.model.elementOption.value = {\n                                                                            loading: false\n                                                                          };\n                                                                        })\n                                                                    }\n                                                                  } else {\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      loading: false\n                                                                    };\n                                                                    this.$vueGlobal.$message.error('撤销提交失败,该单据已是冲发料单！')\n                                                                  }\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lozthvh3",
                                                            "__description": "发撤销提交"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lozthvh2",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_lozthvog",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_lozthvoh",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "删除",
                                                              "type": "danger",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common delete"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  const {id,orgId} = this.$exposeds.get('tableAsync_lozthqrh').model.currentRow.value;\n                                                                  await this.$requestFns.deleteDelivery({id: id,orgId:orgId}).then(data => {\n                                                                    if (data.data === 0) {\n                                                                      this.$vueGlobal.$message.success('删除数据成功！');\n                                                                      this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n                                                                    } else {\n                                                                      this.$vueGlobal.$message.error(data.data.message)\n                                                                    }\n                                                                  })\n                                                                    .catch(err => {\n                                                                      this.$vueGlobal.$message.error('删除数据失败！' + err)\n                                                                    })\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: false\n                                                                  };\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_lozthvoh",
                                                            "__description": "发删除"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_lozthvog",
                                                        "__description": ""
                                                      }
                                                    ],
                                                    "rightSlot": [],
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeKey": "nodeKey_flexLine_lqc5sr9z",
                                                  "__description": ""
                                                },
                                                "toolSlot": [
                                                  {
                                                    "__nodeId": "elementRender_lozthunh",
                                                    "__nodeName": "elementRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "button",
                                                      "elementOptions": {
                                                        "__nodeId": "button_lozthuni",
                                                        "__nodeName": "button",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "modelName": "",
                                                          "size": "default",
                                                          "plain": true,
                                                          "content": "查询",
                                                          "type": "info",
                                                          "text": false,
                                                          "link": false,
                                                          "round": false,
                                                          "circle": false,
                                                          "loading": false,
                                                          "disabled": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "iconFont": "icon cs-common search"
                                                        },
                                                        "__nodeEvent": {
                                                          "onClick": {
                                                            "isOn": true,
                                                            "fn": "async function fnName() {\n\n\n\n                                                              this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n\n                                                            }"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_button_lozthuni",
                                                        "__description": "查询"
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_elementRender_lozthunh",
                                                    "__description": ""
                                                  },
                                                  {
                                                    "__nodeId": "elementRender_ltd8fpwa",
                                                    "__nodeName": "elementRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "printExportConfig",
                                                      "elementOptions": {
                                                        "__nodeId": "printExportConfig_ltd8fpwb",
                                                        "__nodeName": "printExportConfig",
                                                        "__nodeType": "baseNode",
                                                        "__nodeEvent": {},
                                                        "__nodeOptions": {
                                                          "exportParams": {},
                                                          "printParams": {},
                                                          "permissionSetting": "",
                                                          "display": true
                                                        },
                                                        "__nodeKey": "nodeKey_printExportConfig_ltd8fpwb",
                                                        "__description": ""
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_elementRender_ltd8fpwa",
                                                    "__description": ""
                                                  }
                                                ],
                                                "filterItems": [
                                                  {
                                                    "name": "orgId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc5sra0",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "searchTreeSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "searchTreeSelect_lqc5sra1",
                                                          "__nodeName": "searchTreeSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入检索内容",
                                                            "requestFn": "getOrgList",
                                                            "moreEnable": true,
                                                            "reloadEnable": true,
                                                            "defaultProps": {
                                                              "label": "name",
                                                              "value": "id"
                                                            },
                                                            "currentSize": 20,
                                                            "modelName": "deliveryFilter.singleTable.orgId",
                                                            "defaultText": "根节点",
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "300px",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                const rootNode = { name: this.$globalVars.$context.orgShortName, id: this.$globalVars.$context.orgId };\n                                                                this.$dataModels.deliveryFilter.singleTable.orgId = this.$globalVars.$context.orgId;\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  rootNode: rootNode,\n                                                                  defaultText: this.$globalVars.$context.orgName\n                                                                };\n\n                                                              }"
                                                            },
                                                            "onChange": {
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n\n                                                                this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_searchTreeSelect_lqc5sra1",
                                                          "__description": "请选择"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc5sra0",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "orderDate",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc5sra2",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "datePicker",
                                                        "elementOptions": {
                                                          "__nodeId": "datePicker_lqc5sra3",
                                                          "__nodeName": "datePicker",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "size": "default",
                                                            "editable": true,
                                                            "clearable": true,
                                                            "type": "month",
                                                            "prefixIcon": "Calendar",
                                                            "clearIcon": "CircleClose",
                                                            "placeholder": "请选择日期",
                                                            "modelName": "deliveryFilter.singleTable.orderDate",
                                                            "shortcuts": [],
                                                            "format": "YYYY-MM",
                                                            "valueFormat": "YYYY-MM",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(val){\n                                                                if(!val){\n                                                                  this.$dataModels.deliveryFilter.singleTable.isClear = true\n                                                                }\n                                                                this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n\n                                                              }"
                                                            },
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                const { deliveryFilter } = this.$dataModels;\n                                                                const { formatDate } = this.$utils;\n                                                                if (!deliveryFilter.singleTable.orderDate && !deliveryFilter.singleTable.isClear){\n\n                                                                  deliveryFilter.singleTable.orderDate = formatDate('YYYY-MM');\n                                                                }\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_datePicker_lqc5sra3",
                                                          "__description": "请选择日期",
                                                          "__nodeStyle": {
                                                            "width": "100%"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc5sra2",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "exitTime",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc5sra4",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "datePickerRange",
                                                        "elementOptions": {
                                                          "__nodeId": "datePickerRange_lqc5sra5",
                                                          "__nodeName": "datePickerRange",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "clearable": false,
                                                            "defaultValue": [],
                                                            "modelName": "",
                                                            "accountDay": 31,
                                                            "selectBarItems": [
                                                              "day",
                                                              "week",
                                                              "month",
                                                              "quarter",
                                                              "year",
                                                              "all"
                                                            ],
                                                            "defaultPicked": "",
                                                            "type": "daterange",
                                                            "size": "default",
                                                            "valueFormat": "YYYY-MM-DD",
                                                            "placeholder": "请选择日期",
                                                            "startPlaceholder": "请选择日期",
                                                            "endPlaceholder": "结束时间",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_datePickerRange_lqc5sra5",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc5sra4",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "labourId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc5sra6",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "basisCommonSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "basisCommonSelect_lqc5sra7",
                                                          "__nodeName": "basisCommonSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  clearable: true,\n                                                                  defaultText: this.$dataModels.deliveryFilter.singleTable.teamName || '',\n                                                                  parameter: {\n                                                                    url: '/mq3-mquantity/labours-data',\n                                                                    fieldName: 'labourName',\n                                                                    orgId: this.$globalVars.$context.orgId,\n                                                                    condtionItems: [\n                                                                      {\n                                                                        fieldName: 'orderOrigin',\n                                                                        op: 'in',\n                                                                        fieldValue: [2]\n                                                                      }\n                                                                    ]\n                                                                  }\n                                                                };\n\n                                                              }"
                                                            },
                                                            "onSelectionChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnSelectionChange(item){\n                                                                console.log(item);\n\n                                                                if(item.labourId !== item.teamId){\n                                                                  this.$dataModels.deliveryFilter.singleTable.teamId = item.teamId\n                                                                }\n                                                                this.$dataModels.deliveryFilter.singleTable.teamName = item.teamName\n                                                                this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnClear(){\n\n                                                                this.$dataModels.deliveryFilter.singleTable.teamId = 0\n                                                                this.$dataModels.deliveryFilter.singleTable.teamName = ''\n\n                                                                this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeOptions": {
                                                            "defaultText": "",
                                                            "limit": 10,
                                                            "defaultProps": {
                                                              "label": "teamName",
                                                              "subLabel": "labourName",
                                                              "nextLabel": "nextLabel",
                                                              "value": "labourId"
                                                            },
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "240px",
                                                            "clearable": false,
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入关键字搜索",
                                                            "disabled": false,
                                                            "searchEnable": true,
                                                            "parameter": {
                                                              "url": "",
                                                              "basisDataType": "supplier",
                                                              "orgId": 0,
                                                              "fieldName": "",
                                                              "condtionItems": [],
                                                              "queryDataJson": {}
                                                            },
                                                            "addButton": false,
                                                            "downloadIcon": false,
                                                            "size": "default",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "modelName": "deliveryFilter.singleTable.labourId"
                                                          },
                                                          "__nodeKey": "nodeKey_basisCommonSelect_lqc5sra7",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc5sra6",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "ghId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc5sra8",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "searchTreeSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "searchTreeSelect_lqc5sra9",
                                                          "__nodeName": "searchTreeSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入检索内容",
                                                            "requestFn": "getGhList",
                                                            "moreEnable": true,
                                                            "reloadEnable": true,
                                                            "defaultProps": {
                                                              "label": "name",
                                                              "value": "id"
                                                            },
                                                            "currentSize": 20,
                                                            "modelName": "deliveryFilter.singleTable.ghId",
                                                            "defaultText": "根节点",
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "300px",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "clearable": true
                                                          },
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                const rootNode = { name: this.$globalVars.$context.orgShortName, id: this.$globalVars.$context.orgId };\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  rootNode: rootNode,\n                                                                  defaultText: this.$dataModels.deliveryFilter.singleTable.ghName || '',\n                                                                  clearable: true,\n                                                                  currentSize: 10,\n                                                                  searchEnable: false,\n                                                                  placeholder: '请选择'\n                                                                };\n\n                                                              }"
                                                            },
                                                            "onChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(item){\n                                                                this.$dataModels.deliveryFilter.singleTable.ghName = item.name\n\n                                                                this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n                                                                this.$dataModels.deliveryFilter.singleTable.ghName = ''\n                                                                this.$dataModels.deliveryFilter.singleTable.ghId = 0\n\n                                                                this.$exposeds.get('tableAsync_lozthqrh').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_searchTreeSelect_lqc5sra9",
                                                          "__description": "请选择"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc5sra8",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "orderCode",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc5sraa",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "input",
                                                        "elementOptions": {
                                                          "__nodeId": "input_lqc5srab",
                                                          "__nodeName": "input",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "plain": false,
                                                            "clearable": true,
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "type": "text",
                                                            "placeholder": "请输入",
                                                            "modelName": "deliveryFilter.singleTable.orderCode",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_input_lqc5srab",
                                                          "__description": "请输入"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc5sraa",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "isAudit",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc5srac",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "select",
                                                        "elementOptions": {
                                                          "__nodeId": "select_lqc5srad",
                                                          "__nodeName": "select",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "multiple": false,
                                                            "disabled": false,
                                                            "size": "default",
                                                            "clearable": false,
                                                            "collapseTags": false,
                                                            "collapseTagsTooltip": false,
                                                            "multipleLimit": 0,
                                                            "clearIcon": "CircleClose",
                                                            "fitInputWidth": false,
                                                            "filterable": false,
                                                            "valueKey": "value",
                                                            "placeholder": "请选择",
                                                            "modelName": "deliveryFilter.singleTable.isAudit",
                                                            "itemData": [
                                                              {
                                                                "value": "",
                                                                "label": "全部"
                                                              },
                                                              {
                                                                "value": true,
                                                                "label": "已提交"
                                                              },
                                                              {
                                                                "value": false,
                                                                "label": "未提交"
                                                              }
                                                            ],
                                                            "defaultProps": {
                                                              "label": "label",
                                                              "value": "value"
                                                            },
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onChange": {
                                                              "isOn": true,
                                                              "fn": "async function fnName(val){\n\n\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_select_lqc5srad",
                                                          "__description": "请选择",
                                                          "__nodeStyle": {
                                                            "width": "100%"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc5srac",
                                                      "__description": ""
                                                    }
                                                  }
                                                ],
                                                "labelWidth": "80px"
                                              },
                                              "__nodeKey": "nodeKey_dynamicFilter_lqc5sr9y",
                                              "__description": "发料主界面过滤器"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lqc5azod",
                                          "__description": ""
                                        }
                                      },
                                      {
                                        "tag": "item-2",
                                        "isFixed": true,
                                        "showDragButton": true,
                                        "size": "400px",
                                        "paddingSize": "base",
                                        "clearPadding": [
                                          "bottom"
                                        ],
                                        "contentType": "container",
                                        "display": true,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lozthmoi",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "box",
                                            "containerOptions": {
                                              "__nodeId": "box_lozthpqo",
                                              "__nodeName": "box",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "shadow": false,
                                                "border": true,
                                                "background": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "clearBorder": [],
                                                "height": "100%",
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lozthqrg",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "tableAsync",
                                                    "elementOptions": {
                                                      "__nodeId": "tableAsync_lozthqrh",
                                                      "__nodeName": "tableAsync",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "requestFn": "queryDeliveryOrders",
                                                        "columnConfigs": [
                                                          {
                                                            "attr": {
                                                              "prop": "id",
                                                              "label": "选择",
                                                              "type": "selection"
                                                            },
                                                            "id": "0_item_config_lu9m3ln5"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orgId",
                                                              "label": "序号",
                                                              "type": "index"
                                                            },
                                                            "id": "1_item_config_lu9m3ln6"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "printTimes",
                                                              "label": "打印/导出",
                                                              "scopedSlot": "printTimes"
                                                            },
                                                            "id": "2_item_config_lu9m3ln7"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isAudit",
                                                              "label": "提交状态",
                                                              "scopedSlot": "isAudit"
                                                            },
                                                            "id": "3_item_config_lu9m3ln8"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orgName",
                                                              "label": "组织机构"
                                                            },
                                                            "id": "4_item_config_lu9m3ln9"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderCode",
                                                              "label": "单据编号",
                                                              "scopedSlot": "orderCode"
                                                            },
                                                            "id": "5_item_config_lu9m3lna"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "exitTime",
                                                              "label": "出库时间"
                                                            },
                                                            "id": "6_item_config_lu9m3lnb"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "labourName",
                                                              "label": "用料单位"
                                                            },
                                                            "id": "7_item_config_lu9m3lnc"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "teamName",
                                                              "label": "队伍名称"
                                                            },
                                                            "id": "8_item_config_lu9m3lnd"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "ghFullName",
                                                              "label": "使用部位"
                                                            },
                                                            "id": "9_item_config_lu9m3lne"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "ghName",
                                                              "label": "使用部位"
                                                            },
                                                            "id": "10_item_config_lu9m3lnf"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "maker",
                                                              "label": "制单人"
                                                            },
                                                            "id": "11_item_config_lu9m3lng"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "makerDate",
                                                              "label": "制单日期"
                                                            },
                                                            "id": "12_item_config_lu9m3lnh"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auditor",
                                                              "label": "提交人"
                                                            },
                                                            "id": "13_item_config_lu9m3lni"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auditDate",
                                                              "label": "提交时间"
                                                            },
                                                            "id": "14_item_config_lu9m3lnj"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "remark",
                                                              "label": "单据备注"
                                                            },
                                                            "id": "15_item_config_lu9m3lnk"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "labourId",
                                                              "label": "附件管理",
                                                              "scopedSlot": "labourId"
                                                            },
                                                            "id": "16_item_config_lu9m3lnl"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "recordedDate",
                                                              "label": null
                                                            },
                                                            "id": "17_item_config_lu9m3lnm"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "plateNumber",
                                                              "label": "车牌号"
                                                            },
                                                            "id": "18_item_config_lu9m3lnn"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "serviceType",
                                                              "label": "业务类型 或者0代表调入 1代表收料"
                                                            },
                                                            "id": "19_item_config_lu9m3lno"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderDate",
                                                              "label": "单据日期"
                                                            },
                                                            "id": "20_item_config_lu9m3lnp"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderOrigin",
                                                              "label": "单据来源 或者0代表磅单1代表pda"
                                                            },
                                                            "id": "21_item_config_lu9m3lnq"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderType",
                                                              "label": "类型默认值（0）1冲红2补录3退料4普通"
                                                            },
                                                            "id": "22_item_config_lu9m3lnr"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "ghId",
                                                              "label": "工号主键"
                                                            },
                                                            "id": "23_item_config_lu9m3lns"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "originalOrderCode",
                                                              "label": "原单据编号"
                                                            },
                                                            "id": "24_item_config_lu9m3lnt"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "recoveryName",
                                                              "label": "回收单位名称"
                                                            },
                                                            "id": "25_item_config_lu9m3lnu"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "methodHandle",
                                                              "label": "废材处理方式"
                                                            },
                                                            "id": "26_item_config_lu9m3lnv"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isRed",
                                                              "label": "是否冲红（0）"
                                                            },
                                                            "id": "27_item_config_lu9m3lnw"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isApproved",
                                                              "label": "审批状态"
                                                            },
                                                            "id": "28_item_config_lu9m3lnx"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "scrapReason",
                                                              "label": "报废原因"
                                                            },
                                                            "id": "29_item_config_lu9m3lny"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isToProduction",
                                                              "label": "是否为生产组织发料单"
                                                            },
                                                            "id": "30_item_config_lu9m3lnz"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "supplementReason",
                                                              "label": "补录原因"
                                                            },
                                                            "id": "31_item_config_lu9m3lo0"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "deliveryType",
                                                              "label": null
                                                            },
                                                            "id": "32_item_config_lu9m3lo1"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "ghFullId",
                                                              "label": "工号主键链"
                                                            },
                                                            "id": "33_item_config_lu9m3lo2"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isRds",
                                                              "label": "是否是直进直出"
                                                            },
                                                            "id": "34_item_config_lu9m3lo3"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "rdsId",
                                                              "label": null
                                                            },
                                                            "id": "35_item_config_lu9m3lo4"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isRemoved",
                                                              "label": null
                                                            },
                                                            "id": "36_item_config_lu9m3lo5"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "updatedAt",
                                                              "label": null
                                                            },
                                                            "id": "37_item_config_lu9m3lo6"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "deductType",
                                                              "label": "代扣款类型 0不扣款 1  代购扣款"
                                                            },
                                                            "id": "38_item_config_lu9m3lo7"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "affirm",
                                                              "label": "半成品过磅复称标记"
                                                            },
                                                            "id": "39_item_config_lu9m3lo8"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "originalOrderId",
                                                              "label": "原单据Id"
                                                            },
                                                            "id": "40_item_config_lu9m3lo9"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "gqName",
                                                              "label": "工区名称"
                                                            },
                                                            "id": "41_item_config_lu9m3loa"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "createdAt",
                                                              "label": null
                                                            },
                                                            "id": "42_item_config_lu9m3lob"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "gqId",
                                                              "label": "工区id"
                                                            },
                                                            "id": "43_item_config_lu9m3loc"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isVoid",
                                                              "label": "是否作废"
                                                            },
                                                            "id": "44_item_config_lu9m3lod"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "teamLeader",
                                                              "label": "队长姓名"
                                                            },
                                                            "id": "45_item_config_lu9m3loe"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "teamId",
                                                              "label": "队伍id"
                                                            },
                                                            "id": "46_item_config_lu9m3lof"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "oriSemiId",
                                                              "label": "原过磅复称orderId"
                                                            },
                                                            "id": "47_item_config_lu9m3log"
                                                          }
                                                        ],
                                                        "columnSlots": [
                                                          {
                                                            "code": "printTimes",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpflkgmn",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "buttonGroup",
                                                                "elementOptions": {
                                                                  "__nodeId": "buttonGroup_lpflkgmi",
                                                                  "__nodeName": "buttonGroup",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "buttonGroupOptions": [
                                                                      {
                                                                        "tooltipOption": {
                                                                          "effect": "dark",
                                                                          "content": "打印数据",
                                                                          "placement": "top"
                                                                        },
                                                                        "btnType": "button",
                                                                        "buttonOptions": {
                                                                          "__nodeId": "button_lpflkgml",
                                                                          "__nodeName": "button",
                                                                          "__nodeType": "columnNode",
                                                                          "__nodeOptions": {
                                                                            "size": "small",
                                                                            "type": "success",
                                                                            "icon": "Printer",
                                                                            "plain": true,
                                                                            "circle": true
                                                                          },
                                                                          "__nodeEvent": {
                                                                            "onClick": {
                                                                              "isOn": true,
                                                                              "fn": "async function fnName(row){\n                                                                                this.$sharedFns.printDelivery(row, 'print');\n                                                                              }"
                                                                            }
                                                                          },
                                                                          "__nodeKey": "nodeKey_button_lpflkgml"
                                                                        }
                                                                      },
                                                                      {
                                                                        "tooltipOption": {
                                                                          "effect": "dark",
                                                                          "content": "导出数据",
                                                                          "placement": "top"
                                                                        },
                                                                        "btnType": "button",
                                                                        "buttonOptions": {
                                                                          "__nodeId": "button_lpflkgmm",
                                                                          "__nodeName": "button",
                                                                          "__nodeType": "columnNode",
                                                                          "__nodeEvent": {
                                                                            "onClick": {
                                                                              "isOn": true,
                                                                              "fn": "async function fnName(row){\n\n                                                                                this.$sharedFns.printDelivery(row, 'excel');\n\n                                                                              }"
                                                                            }
                                                                          },
                                                                          "__nodeOptions": {
                                                                            "size": "small",
                                                                            "type": "success",
                                                                            "plain": true,
                                                                            "circle": true,
                                                                            "iconFont": "icon cs-common excel"
                                                                          },
                                                                          "__nodeKey": "nodeKey_button_lpflkgmm"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "__nodeEvent": {},
                                                                  "__nodeKey": "nodeKey_buttonGroup_lpflkgmi",
                                                                  "__description": ""
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpflkgmn",
                                                              "__description": ""
                                                            },
                                                            "propName": "打印/导出"
                                                          },
                                                          {
                                                            "code": "isAudit",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpflkh9l",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "tag",
                                                                "elementOptions": {
                                                                  "__nodeId": "tag_lpflkh9k",
                                                                  "__nodeName": "tag",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "content": "标签",
                                                                    "closable": false,
                                                                    "hit": false,
                                                                    "round": false,
                                                                    "effect": "light",
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "size": "small"
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onValueRender": {
                                                                      "isOn": true,
                                                                      "fn": "function onValueRenderFn(row) {\n\n                                                                        if (row.isAudit) {\n                                                                          return { content: '已提交', type: 'success'  }\n                                                                        } else {\n                                                                          return { content: '未提交', type: 'danger' }\n                                                                        }\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_tag_lpflkh9k",
                                                                  "__description": "标签"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpflkh9l",
                                                              "__description": ""
                                                            },
                                                            "propName": "提交状态"
                                                          },
                                                          {
                                                            "code": "orderCode",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpflkhwj",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "button",
                                                                "elementOptions": {
                                                                  "__nodeId": "button_lpflkhwi",
                                                                  "__nodeName": "button",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "size": "default",
                                                                    "plain": true,
                                                                    "content": "按钮",
                                                                    "type": "primary",
                                                                    "text": true,
                                                                    "link": false,
                                                                    "round": false,
                                                                    "circle": false,
                                                                    "loading": false,
                                                                    "disabled": false,
                                                                    "display": true,
                                                                    "permissionSetting": ""
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onValueRender": {
                                                                      "isOn": true,
                                                                      "fn": "function onValueRenderFn(row){\n\n                                                                        return {content: row.orderCode}\n\n                                                                      }"
                                                                    },
                                                                    "onClick": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function fnName(row){\n                                                                        localStorage.setItem('route','delivery')\n                                                                        const { deliveryFormModel, previewSrcList, gpyPreviewList } = this.$dataModels\n                                                                        gpyPreviewList.items.length = 0\n                                                                        deliveryFormModel.gpyPhotos.length = 0\n                                                                        const { orgId, id } = row\n                                                                        // 获取发料单据详情\n                                                                        const res = await this.$requestFns.getqDelivery({ orgId, id });\n                                                                        console.log(res);\n\n                                                                        Object.assign(deliveryFormModel.qDelivery, res.data.qDelivery)\n                                                                        deliveryFormModel.photos = []\n                                                                        deliveryFormModel.qDeliveryMoreOrders = res.data.qDeliveryMoreOrders || []\n                                                                        deliveryFormModel.qDeliveryMoreMaterials = res.data.qDeliveryMoreMaterials || []\n                                                                        deliveryFormModel.qDeliveryGpys = res.data.qDeliveryGpys||[]\n                                                                        let keys = []\n                                                                        let ghyPhotoList = []\n                                                                        res.data.qDeliveryGpys.forEach(p => {\n                                                                          p.gpyPhotoUrl ? ghyPhotoList.push(p.gpyPhotoUrl) : ''\n                                                                        })\n                                                                        res.data.qDeliveryPhotos.forEach(p => {\n                                                                          p.photoUrl ? keys.push(p.photoUrl) : ''\n                                                                        })\n                                                                        if (ghyPhotoList.length) {\n                                                                          const gpyps = await this.$sharedFns.downloadFile({ keys: ghyPhotoList });\n                                                                          res.data.qDeliveryGpys.forEach(t => {\n                                                                            deliveryFormModel.gpyPhotos.push(Object.assign(t, { gpyPhotoUrl: gpyps[t.gpyPhotoUrl] }))\n                                                                            gpyPreviewList.items.push(t.gpyPhotoUrl)\n                                                                          })\n                                                                        }\n                                                                        console.log(deliveryFormModel.gpyPhotos,'deliveryFormModel.gpyPhotos')\n                                                                        debugger\n                                                                        if (keys.length) {\n                                                                          const ps = await this.$sharedFns.downloadFile({ keys: keys });\n                                                                          res.data.qDeliveryPhotos.forEach(t => {\n                                                                            deliveryFormModel.photos.push(Object.assign(t, { _photoUrl: ps[t.photoUrl] }))\n                                                                            previewSrcList.items.push(ps[t.photoUrl])\n                                                                          })\n                                                                        }\n\n                                                                        this.$globalVars.$router.push({\n                                                                          name: 'deliveryDetail',\n                                                                          query: row\n                                                                        })\n\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_button_lpflkhwi",
                                                                  "__description": "按钮"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpflkhwj",
                                                              "__description": ""
                                                            },
                                                            "propName": "单据编号"
                                                          },
                                                          {
                                                            "code": "labourId",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpflkijh",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "uploadComp",
                                                                "elementOptions": {
                                                                  "__nodeId": "uploadComp_lpflkijg",
                                                                  "__nodeName": "uploadComp",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeEvent": {},
                                                                  "__nodeOptions": {
                                                                    "moduleCode": "delivery",
                                                                    "orderId": 0,
                                                                    "uploadAttach": true,
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "size": "small"
                                                                  },
                                                                  "__nodeKey": "nodeKey_uploadComp_lpflkijg",
                                                                  "__description": ""
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpflkijh",
                                                              "__description": ""
                                                            },
                                                            "propName": "附件管理"
                                                          }
                                                        ],
                                                        "columnHeaderSlots": [],
                                                        "showSummary": false,
                                                        "pagination": {
                                                          "currentSize": 10,
                                                          "pageSizes": [
                                                            10,
                                                            20,
                                                            30,
                                                            50
                                                          ],
                                                          "layout": "sizes,prev,pager,next,total"
                                                        },
                                                        "tableCodeRemark": "",
                                                        "tableCode": "qDeliveryOrderTable",
                                                        "isCustom": true
                                                      },
                                                      "__nodeEvent": {
                                                        "onMounted": {
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn(){\n\n\n                                                            this.$currentInstance.exposed.methods.loadData();\n\n                                                            this.$sharedFns.changeBtnState('delivery');\n                                                          }"
                                                        },
                                                        "onRowClick": {
                                                          "isOn": true,
                                                          "fn": "async function fnRowClick(row, column){\n\n                                                            this.$currentInstance.exposed.model.currentRow.value = row;\n\n                                                            this.$exposeds.get('tableReport_lozuudpx').methods.loadData();\n                                                            this.$sharedFns.changeBtnState('delivery');\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_tableAsync_lozthqrh",
                                                      "__description": "发料主界面主表"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lozthqrg",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeKey": "nodeKey_box_lozthpqo",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lozthmoi",
                                          "__description": ""
                                        },
                                        "dragButtonPosition": "bottom"
                                      },
                                      {
                                        "tag": "item-3",
                                        "isFixed": false,
                                        "showDragButton": false,
                                        "size": "",
                                        "paddingSize": "base",
                                        "clearPadding": [],
                                        "contentType": "container",
                                        "display": true,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lozthob9",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "box",
                                            "containerOptions": {
                                              "__nodeId": "box_lozthqyu",
                                              "__nodeName": "box",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "shadow": false,
                                                "border": true,
                                                "background": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "clearBorder": [],
                                                "height": "100%",
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lozuudpw",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "tableReport",
                                                    "elementOptions": {
                                                      "__nodeId": "tableReport_lozuudpx",
                                                      "__nodeName": "tableReport",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {
                                                        "onLoadData": {
                                                          "isOn": true,
                                                          "fn": "async function fnLoadData(params) {\n                                                            this.$currentInstance.exposed.model.tableLoading.value = true;\n\n                                                            let { id, orgId } = this.$exposeds.get('tableAsync_lozthqrh').model.currentRow.value;\n\n                                                            const data = await this.$requestFns.queryDeliveryOrderItems({\n                                                              id: id,\n                                                              orgId: orgId,\n                                                              orderId: id,\n                                                              condtionItems: [\n                                                                {\n                                                                  fieldName: 'isRemoved',\n                                                                  op: 'eq',\n                                                                  fieldValue: false\n                                                                }\n                                                              ]\n                                                            });\n\n                                                            if (!data.error) {\n                                                              this.$currentInstance.exposed.model.tableData.value = data.data.qDeliveryMoreMaterials;\n                                                            } else {\n                                                              this.$currentInstance.exposed.model.tableData.value = []\n                                                            }\n                                                            this.$currentInstance.exposed.model.tableLoading.value = false;\n\n                                                          }"
                                                        },
                                                        "onMounted": {
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn(){\n\n                                                            this.$currentInstance.exposed.model.elementOption.value.columnConfigs[8].display = false\n\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeOptions": {
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "requestFn": "",
                                                        "columnConfigs": [
                                                          {
                                                            "attr": {
                                                              "prop": "orderId",
                                                              "label": "序号",
                                                              "type": "index"
                                                            },
                                                            "id": "0_item_config_ltls3a26"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialName",
                                                              "label": "物资名称"
                                                            },
                                                            "id": "1_item_config_ltls3a27"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialModel",
                                                              "label": "规格型号"
                                                            },
                                                            "id": "2_item_config_ltls3a28"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialUnit",
                                                              "label": "计量单位"
                                                            },
                                                            "id": "3_item_config_ltls3a29"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "quantity",
                                                              "label": "库存数量"
                                                            },
                                                            "id": "4_item_config_ltls3a2a"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "netQuantity",
                                                              "label": "发料数量"
                                                            },
                                                            "id": "5_item_config_ltls3a2b"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "itemBarCode",
                                                              "label": "物资条码"
                                                            },
                                                            "id": "6_item_config_ltls3a2c"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "remark",
                                                              "label": "明细备注"
                                                            },
                                                            "id": "7_item_config_ltls3a2d"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "id",
                                                              "label": "操作"
                                                            },
                                                            "id": "8_item_config_ltls3a2e"
                                                          }
                                                        ],
                                                        "columnSlots": [],
                                                        "columnHeaderSlots": [],
                                                        "showSummary": false,
                                                        "pagination": {
                                                          "currentSize": 10,
                                                          "pageSizes": [
                                                            10,
                                                            20,
                                                            30,
                                                            50
                                                          ],
                                                          "layout": "sizes,prev,pager,next,total"
                                                        },
                                                        "tableCodeRemark": "",
                                                        "tableCode": "qDeliveryOrderItemTable",
                                                        "isCustom": true
                                                      },
                                                      "__nodeKey": "nodeKey_tableReport_lozuudpx",
                                                      "__description": "发料主界面从表"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lozuudpw",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeKey": "nodeKey_box_lozthqyu",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lozthob9",
                                          "__description": ""
                                        },
                                        "dragButtonPosition": "top"
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {},
                                  "__nodeKey": "nodeKey_flexBox_lozthmog",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "receiveDelivery",
                                "label": "直进直出",
                                "lazy": true,
                                "disabled": false,
                                "contentType": "flexBox",
                                "paddingSize": "default",
                                "defaultSlot": {
                                  "__nodeId": "flexBox_lozti6dz",
                                  "__nodeName": "flexBox",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "isRow": false,
                                    "itemNum": 3,
                                    "width": "100%",
                                    "height": "100%",
                                    "itemConfig": [
                                      {
                                        "tag": "item-1",
                                        "isFixed": true,
                                        "showDragButton": false,
                                        "size": "",
                                        "paddingSize": "base",
                                        "clearPadding": [
                                          "bottom"
                                        ],
                                        "contentType": "container",
                                        "isHidden": false,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lqc6c6pg",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "dynamicFilter",
                                            "containerOptions": {
                                              "__nodeId": "dynamicFilter_lqc6cr3g",
                                              "__nodeName": "dynamicFilter",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "divider": true,
                                                "border": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "toolMaxWidth": "",
                                                "filterCode": "rdsOrderFilter",
                                                "display": true,
                                                "permissionSetting": "",
                                                "filterGutter": 6,
                                                "defaultSlot": {
                                                  "__nodeId": "flexLine_lqc6cr3h",
                                                  "__nodeName": "flexLine",
                                                  "__nodeType": "baseNode",
                                                  "__nodeStyle": {},
                                                  "__nodeEvent": {},
                                                  "__nodeOptions": {
                                                    "leftWidth": "50%",
                                                    "background": false,
                                                    "leftPadding": true,
                                                    "rightPadding": true,
                                                    "paddingSize": "",
                                                    "leftClearPadding": [],
                                                    "rightClearPadding": [],
                                                    "__activeSlot": "defaultSlot",
                                                    "defaultSlot": [
                                                      {
                                                        "__nodeId": "elementRender_loztiin7",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_loztiin8",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": false,
                                                              "content": "添加",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common add"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName() {\n                                                                  localStorage.setItem('route', 'receiveDelivery')\n                                                                  this.$assemCore.setForm('rdsFormModel');\n                                                                  const { lastProject } = this.$globalVars.$context\n                                                                  const { dicData, rdsFormModel } = this.$dataModels\n\n                                                                  rdsFormModel.qReceiveMoreMaterials = []\n                                                                  rdsFormModel.qDeliveryMoreMaterials = []\n\n                                                                  rdsFormModel.qDeliveryPhotos = []\n                                                                  rdsFormModel.qReceive.serviceType = rdsFormModel.qDelivery.serviceType = 10\n                                                                  rdsFormModel.qReceive.orderType = rdsFormModel.qDelivery.orderType = 4\n                                                                  rdsFormModel.qReceive.orderOrigin = rdsFormModel.qDelivery.orderOrigin = 2\n                                                                  for (const key in rdsFormModel.qReceiveToDelivery) {\n                                                                    if (['serviceType', 'orderType', 'orderOrigin', 'isRds'].includes(key)) {\n                                                                    } else {\n                                                                      rdsFormModel.qReceiveToDelivery[key] = null\n                                                                    }\n                                                                  }\n                                                                  for (const key in rdsFormModel.qReceive) {\n                                                                    if (['serviceType', 'orderType', 'orderOrigin', 'isRds'].includes(key)) {\n                                                                    } else {\n                                                                      rdsFormModel.qReceive[key] = null\n                                                                    }\n                                                                  }\n                                                                  for (const key in rdsFormModel.qDelivery) {\n                                                                    if (['serviceType', 'orderType', 'orderOrigin', 'isRds'].includes(key)) {\n\n                                                                    } else {\n                                                                      rdsFormModel.qDelivery[key] = null\n                                                                    }\n                                                                  }\n                                                                  //  获取税率\n                                                                  const taxRate = await this.$requestFns.getDictionaryData({ dictType: 'taxRate' });\n                                                                  dicData.taxRate = taxRate.data.map(t => {\n                                                                    t.value = parseFloat(t.name)\n                                                                    t.label = t.name\n                                                                    return t\n                                                                  })\n                                                                  // 获取存放地\n                                                                  const storagePlace = await this.$requestFns.getDictionaryData({ dictType: 'storageLocation', orgId: lastProject.id });\n                                                                  dicData.storagePlace = storagePlace.data.map(t => {\n                                                                    t.value = t.fullName\n                                                                    return t\n                                                                  })\n                                                                  rdsFormModel.qReceivePhotos = [] = await this.$sharedFns.getPhotoConfig('mq2ReceiveToDeliveryKey', 5)\n                                                                  this.$globalVars.$router.push({\n                                                                    name: 'rdsEdit',\n                                                                    query: {}\n                                                                  })\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_loztiin8",
                                                            "__description": "直添加"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_loztiin7",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_loztiiy9",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_loztiiya",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "修改",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "icon": "Edit"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName() {\n                                                                  localStorage.setItem('route', 'receiveDelivery')\n\n                                                                  const { id, orgId } = this.$exposeds.get('tableAsync_lozti7x5').model.currentRow.value\n                                                                  const { rdsFormModel, childOrgList, dicData } = this.$dataModels\n                                                                  const { lastProject } = this.$globalVars.$context\n                                                                  debugger\n                                                                  childOrgList.items = []\n                                                                  rdsFormModel.deleteItems = []\n                                                                  rdsFormModel.deletePhotos = []\n                                                                  rdsFormModel.qReceiveMoreMaterials = []\n                                                                  rdsFormModel.qDeliveryMoreMaterials = []\n                                                                  rdsFormModel.qReceivePhotos = []\n                                                                  // 获取单据详情\n\n                                                                  const res = await this.$requestFns.getRdsOrderDetail({id,orgId})\n                                                                  Object.assign(rdsFormModel.qReceive, res.data.qReceives)\n                                                                  Object.assign(rdsFormModel.qReceiveToDelivery, res.data.qReceiveToDeliverys)\n                                                                  Object.assign(rdsFormModel.qDelivery, res.data.deliveryS[0])\n                                                                  rdsFormModel.qReceiveMoreMaterials = res.data.qReceiveMoreMaterials\n                                                                  rdsFormModel.qDeliveryMoreMaterials = res.data.deliveryS[0].qDeliveryMoreMaterials\n                                                                  rdsFormModel.photos = res.data.qReceivePhotos\n                                                                  rdsFormModel.qDeliveryPhotos = res.data.qDeliveryPhotos\n                                                                  this.$dataModels.rdsFormModel.qReceiveGpys = res.data.qReceiveGpys\n                                                                  this.$sharedFns.resetSortCode('rds');\n                                                                  // 处理照片\n                                                                  await this.$sharedFns.handlePhotoData('rds');\n                                                                  //  获取税率\n                                                                  const taxRate = await this.$requestFns.getDictionaryData({ dictType: 'taxRate' });\n                                                                  dicData.taxRate = taxRate.data.map(t => {\n                                                                    t.value = parseFloat(t.name)\n                                                                    t.label = t.name\n                                                                    return t\n                                                                  })\n                                                                  // 获取存放地\n                                                                  const storagePlace = await this.$requestFns.getDictionaryData({ dictType: 'storageLocation', orgId: lastProject.id });\n                                                                  dicData.storagePlace = storagePlace.data.map(t => {\n                                                                    t.value = t.fullName\n                                                                    return t\n                                                                  })\n\n                                                                  this.$globalVars.$router.push({\n                                                                    name: 'rdsEdit',\n                                                                    query: {\n                                                                      id,\n                                                                      orgId\n                                                                    }\n                                                                  })\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_loztiiya",
                                                            "__description": "直修改"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_loztiiy9",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_loztij9b",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_loztij9c",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "提交",
                                                              "type": "primary",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common tijiao"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "type": "system",
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n                                                                  const { id, orgId } = this.$exposeds.get('tableAsync_lozti7x5').model.currentRow.value;\n                                                                  const { userId, userName, lastProject } = this.$globalVars.$context\n\n                                                                  const obj = {\n                                                                    id: id,\n                                                                    userName: userName,\n                                                                    orgId: orgId,\n                                                                    lastProjectId: lastProject.id\n                                                                  }\n\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  await this.$requestFns.auditRds(obj).then(data => {\n                                                                    if (data.data.success) {\n                                                                      this.$vueGlobal.$message.success(\"单据提交成功！\")\n                                                                      this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n                                                                    } else {\n                                                                      this.$vueGlobal.$message.error('失败！' + data.data.message)\n                                                                    }\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      loading: false\n                                                                    };\n                                                                  })\n                                                                    .catch(err => {\n                                                                      this.$vueGlobal.$message.error('提交失败！' + err)\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        loading: false\n                                                                      };\n                                                                    })\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_loztij9c",
                                                            "__description": "直提交",
                                                            "__nodeStyle": {
                                                              "marginRight": "50px"
                                                            }
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_loztij9b",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_loztijkd",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_loztijke",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "撤销提交",
                                                              "type": "warning",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common chexiao"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n                                                                  const { id, orgId } = this.$exposeds.get('tableAsync_lozti7x5').model.currentRow.value;\n                                                                  const { userId, userName, lastProject } = this.$globalVars.$context\n\n                                                                  const obj = {\n                                                                    id: id,\n                                                                    userName: userName,\n                                                                    orgId: orgId,\n                                                                    userId: userId\n                                                                  }\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  await this.$requestFns.unAuditRds(obj).then(data => {\n                                                                    if (data.data.success) {\n                                                                      this.$vueGlobal.$message.success(data.data.message)\n                                                                      this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n                                                                    } else {\n                                                                      this.$vueGlobal.$message.error(data.data.message)\n                                                                    }\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      loading: false\n                                                                    };\n                                                                  }).catch(err => {\n                                                                    this.$vueGlobal.$message.error('撤销提交失败！' + err)\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      loading: false\n                                                                    };\n                                                                  })\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_loztijke",
                                                            "__description": "直撤销提交"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_loztijkd",
                                                        "__description": ""
                                                      },
                                                      {
                                                        "__nodeId": "elementRender_loztijvf",
                                                        "__nodeName": "elementRender",
                                                        "__nodeType": "renderNode",
                                                        "__nodeOptions": {
                                                          "renderType": "button",
                                                          "elementOptions": {
                                                            "__nodeId": "button_loztijvg",
                                                            "__nodeName": "button",
                                                            "__nodeType": "baseNode",
                                                            "__nodeOptions": {
                                                              "modelName": "",
                                                              "size": "default",
                                                              "plain": true,
                                                              "content": "删除",
                                                              "type": "danger",
                                                              "text": false,
                                                              "link": false,
                                                              "round": false,
                                                              "circle": false,
                                                              "loading": false,
                                                              "disabled": false,
                                                              "display": true,
                                                              "permissionSetting": "",
                                                              "iconFont": "icon cs-common delete"
                                                            },
                                                            "__nodeEvent": {
                                                              "onClick": {
                                                                "isOn": true,
                                                                "fn": "async function fnName(){\n                                                                  const { id, orgId } = this.$exposeds.get('tableAsync_lozti7x5').model.currentRow.value;\n                                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                                    loading: true\n                                                                  };\n                                                                  await this.$requestFns.deleteRds({orgId: orgId, id:id}).then(data => {\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      loading: false\n                                                                    };\n                                                                    if (data.data === 0 || data.data.success) {\n                                                                      this.$vueGlobal.$message.success('删除数据成功！')\n                                                                      this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n                                                                    } else {\n                                                                      this.$vueGlobal.$message.error(data.data.message)\n                                                                    }\n                                                                  })\n                                                                    .catch(err => {\n                                                                      this.$vueGlobal.$message.error('删除数据失败！' + err)\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        loading: false\n                                                                      };\n                                                                    })\n                                                                }"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_button_loztijvg",
                                                            "__description": "直删除"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_elementRender_loztijvf",
                                                        "__description": ""
                                                      }
                                                    ],
                                                    "rightSlot": [],
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeKey": "nodeKey_flexLine_lqc6cr3h",
                                                  "__description": ""
                                                },
                                                "toolSlot": [
                                                  {
                                                    "__nodeId": "elementRender_loztiic4",
                                                    "__nodeName": "elementRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "button",
                                                      "elementOptions": {
                                                        "__nodeId": "button_loztiic5",
                                                        "__nodeName": "button",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "modelName": "",
                                                          "size": "default",
                                                          "plain": true,
                                                          "content": "查询",
                                                          "type": "info",
                                                          "text": false,
                                                          "link": false,
                                                          "round": false,
                                                          "circle": false,
                                                          "loading": false,
                                                          "disabled": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "iconFont": "icon cs-common search"
                                                        },
                                                        "__nodeEvent": {
                                                          "onClick": {
                                                            "isOn": true,
                                                            "fn": "async function fnName(){\n\n\n                                                              this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n\n                                                            }"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_button_loztiic5",
                                                        "__description": "查询"
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_elementRender_loztiic4",
                                                    "__description": ""
                                                  },
                                                  {
                                                    "__nodeId": "elementRender_ltd8fpwd",
                                                    "__nodeName": "elementRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "printExportConfig",
                                                      "elementOptions": {
                                                        "__nodeId": "printExportConfig_ltd8fpwe",
                                                        "__nodeName": "printExportConfig",
                                                        "__nodeType": "baseNode",
                                                        "__nodeEvent": {},
                                                        "__nodeOptions": {
                                                          "exportParams": {},
                                                          "printParams": {},
                                                          "permissionSetting": "",
                                                          "display": true
                                                        },
                                                        "__nodeKey": "nodeKey_printExportConfig_ltd8fpwe",
                                                        "__description": ""
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_elementRender_ltd8fpwd",
                                                    "__description": ""
                                                  }
                                                ],
                                                "filterItems": [
                                                  {
                                                    "name": "orgId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0bz",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "searchTreeSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "searchTreeSelect_lqc6e0c0",
                                                          "__nodeName": "searchTreeSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入检索内容",
                                                            "requestFn": "getOrgList",
                                                            "moreEnable": true,
                                                            "reloadEnable": true,
                                                            "defaultProps": {
                                                              "label": "name",
                                                              "value": "id"
                                                            },
                                                            "currentSize": 20,
                                                            "modelName": "receiveDeliveryFilter.singleTable.orgId",
                                                            "defaultText": "根节点",
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "300px",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n                                                                const rootNode = { name: this.$globalVars.$context.orgShortName, id: this.$globalVars.$context.orgId };\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.orgId = this.$globalVars.$context.orgId;\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  rootNode: rootNode,\n                                                                  defaultText: this.$globalVars.$context.orgName\n                                                                };\n\n\n                                                              }"
                                                            },
                                                            "onChange": {
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_searchTreeSelect_lqc6e0c0",
                                                          "__description": "请选择"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0bz",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "orderDate",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0c1",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "datePicker",
                                                        "elementOptions": {
                                                          "__nodeId": "datePicker_lqc6e0c2",
                                                          "__nodeName": "datePicker",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "size": "default",
                                                            "editable": true,
                                                            "clearable": true,
                                                            "type": "month",
                                                            "prefixIcon": "Calendar",
                                                            "clearIcon": "CircleClose",
                                                            "placeholder": "请选择日期",
                                                            "modelName": "receiveDeliveryFilter.singleTable.orderDate",
                                                            "shortcuts": [],
                                                            "format": "YYYY-MM",
                                                            "valueFormat": "YYYY-MM",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                const { receiveDeliveryFilter } = this.$dataModels;\n                                                                const { formatDate } = this.$utils;\n                                                                if (!receiveDeliveryFilter.singleTable.orderDate && !receiveDeliveryFilter.singleTable.isClear){\n\n                                                                  receiveDeliveryFilter.singleTable.orderDate = formatDate('YYYY-MM');\n                                                                }\n\n                                                              }"
                                                            },
                                                            "onChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(val){\n                                                                if(!val){\n                                                                  this.$dataModels.receiveDeliveryFilter.singleTable.isClear=true\n                                                                }\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_datePicker_lqc6e0c2",
                                                          "__description": "请选择日期",
                                                          "__nodeStyle": {
                                                            "width": "100%"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0c1",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "orderTime",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0c3",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "datePickerRange",
                                                        "elementOptions": {
                                                          "__nodeId": "datePickerRange_lqc6e0c4",
                                                          "__nodeName": "datePickerRange",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "clearable": false,
                                                            "defaultValue": [],
                                                            "modelName": "receiveDeliveryFilter.singleTable.orderTime",
                                                            "accountDay": 31,
                                                            "selectBarItems": [
                                                              "day",
                                                              "week",
                                                              "month",
                                                              "quarter",
                                                              "year",
                                                              "all"
                                                            ],
                                                            "defaultPicked": "month",
                                                            "type": "datetimerange",
                                                            "size": "default",
                                                            "valueFormat": "YYYY-MM-DD HH:mm:ss",
                                                            "placeholder": "请选择日期",
                                                            "startPlaceholder": "请选择开始时间",
                                                            "endPlaceholder": "请选择结束时间",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onChange": {
                                                              "isOn": true,
                                                              "fn": "async function fnName(val){\n\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_datePickerRange_lqc6e0c4",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0c3",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "supplierId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0c5",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "basisCommonSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "basisCommonSelect_lqc6e0c6",
                                                          "__nodeName": "basisCommonSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn() {\n\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  clearable: true,\n                                                                  defaultText: this.$dataModels.receiveDeliveryFilter.singleTable.supplierName || '',\n                                                                  parameter: {\n                                                                    url: '/mquantity/suppliers-data',\n                                                                    fieldName: 'supplierName',\n                                                                    orgId: this.$globalVars.$context.orgId,\n                                                                    condtionItems: [\n                                                                      { fieldName: 'orderOrigin', op: 'in', fieldValue: [2] }\n                                                                    ]\n                                                                  }\n                                                                };\n\n                                                              }"
                                                            },
                                                            "onSelectionChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnSelectionChange(item){\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.supplierName = item.supplierName\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnClear(){\n\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.supplierName = ''\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeOptions": {
                                                            "defaultText": "",
                                                            "limit": 10,
                                                            "defaultProps": {
                                                              "label": "supplierName",
                                                              "subLabel": "subLabel",
                                                              "nextLabel": "nextLabel",
                                                              "value": "supplierId"
                                                            },
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "240px",
                                                            "clearable": false,
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入关键字搜索",
                                                            "disabled": false,
                                                            "searchEnable": true,
                                                            "parameter": {
                                                              "url": "",
                                                              "basisDataType": "supplier",
                                                              "orgId": 0,
                                                              "fieldName": "",
                                                              "condtionItems": [],
                                                              "queryDataJson": {}
                                                            },
                                                            "addButton": false,
                                                            "downloadIcon": false,
                                                            "size": "default",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "modelName": "receiveDeliveryFilter.singleTable.supplierId"
                                                          },
                                                          "__nodeKey": "nodeKey_basisCommonSelect_lqc6e0c6",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0c5",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "settlementId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0c7",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "basisCommonSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "basisCommonSelect_lqc6e0c8",
                                                          "__nodeName": "basisCommonSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  clearable: true,\n                                                                  defaultText: this.$dataModels.receiveDeliveryFilter.singleTable.settlementName  || '',\n                                                                  parameter: {\n                                                                    url: '/mq3-mquantity/query-settlement-data',\n                                                                    fieldName: 'settlementName',\n                                                                    orgId: this.$globalVars.$context.orgId,\n                                                                    condtionItems: [\n                                                                      { fieldName: 'orderOrigin', op: 'in', fieldValue: [2] }\n                                                                    ]\n                                                                  }\n                                                                };\n\n                                                              }"
                                                            },
                                                            "onSelectionChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnSelectionChange(item){\n\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.settlementName = item.settlementName\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnClear() {\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.settlementName = ''\n\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeOptions": {
                                                            "defaultText": "",
                                                            "limit": 10,
                                                            "defaultProps": {
                                                              "label": "settlementName",
                                                              "subLabel": "subLabel",
                                                              "nextLabel": "nextLabel",
                                                              "value": "settlementId"
                                                            },
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "240px",
                                                            "clearable": false,
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入关键字搜索",
                                                            "disabled": false,
                                                            "searchEnable": true,
                                                            "parameter": {
                                                              "url": "",
                                                              "basisDataType": "supplier",
                                                              "orgId": 0,
                                                              "fieldName": "",
                                                              "condtionItems": [],
                                                              "queryDataJson": {}
                                                            },
                                                            "addButton": false,
                                                            "downloadIcon": false,
                                                            "size": "default",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "modelName": "receiveDeliveryFilter.singleTable.settlementId"
                                                          },
                                                          "__nodeKey": "nodeKey_basisCommonSelect_lqc6e0c8",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0c7",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "labourId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0c9",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "basisCommonSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "basisCommonSelect_lqc6e0ca",
                                                          "__nodeName": "basisCommonSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  clearable: true,\n                                                                  defaultText: this.$dataModels.receiveDeliveryFilter.singleTable.teamName  || '',\n                                                                  parameter: {\n                                                                    url: '/mq3-mquantity/labours-data',\n                                                                    fieldName: 'labourName',\n                                                                    orgId: this.$globalVars.$context.orgId,\n                                                                    condtionItems: [\n                                                                      {\n                                                                        fieldName: 'orderOrigin',\n                                                                        op: 'in',\n                                                                        fieldValue: [2]\n                                                                      }\n                                                                    ]\n                                                                  }\n                                                                };\n\n\n                                                              }"
                                                            },
                                                            "onSelectionChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnSelectionChange(item){\n\n                                                                if(item.labourId !== item.teamId){\n                                                                  this.$dataModels.receiveDeliveryFilter.singleTable.teamId = item.teamId\n                                                                }\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.teamName = item.teamName\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onFnClear(){\n\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.teamName = ''\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeOptions": {
                                                            "defaultText": "",
                                                            "limit": 10,
                                                            "defaultProps": {
                                                              "label": "teamName",
                                                              "subLabel": "labourName",
                                                              "nextLabel": "nextLabel",
                                                              "value": "labourId"
                                                            },
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "240px",
                                                            "clearable": true,
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入关键字搜索",
                                                            "disabled": false,
                                                            "searchEnable": true,
                                                            "parameter": {
                                                              "url": "",
                                                              "basisDataType": "supplier",
                                                              "orgId": 0,
                                                              "fieldName": "",
                                                              "condtionItems": [],
                                                              "queryDataJson": {}
                                                            },
                                                            "addButton": false,
                                                            "downloadIcon": false,
                                                            "size": "default",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "modelName": "receiveDeliveryFilter.singleTable.labourId"
                                                          },
                                                          "__nodeKey": "nodeKey_basisCommonSelect_lqc6e0ca",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0c9",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "ghId",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0cb",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "searchTreeSelect",
                                                        "elementOptions": {
                                                          "__nodeId": "searchTreeSelect_lqc6e0cc",
                                                          "__nodeName": "searchTreeSelect",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "placeholder": "请选择",
                                                            "searchPlaceholder": "请输入检索内容",
                                                            "requestFn": "getGhList",
                                                            "moreEnable": true,
                                                            "reloadEnable": true,
                                                            "defaultProps": {
                                                              "label": "name",
                                                              "value": "id"
                                                            },
                                                            "currentSize": 20,
                                                            "modelName": "receiveDeliveryFilter.singleTable.ghId",
                                                            "defaultText": "根节点",
                                                            "width": "100%",
                                                            "dropdownHeight": "300px",
                                                            "dropdownWidth": "300px",
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "clearable": true
                                                          },
                                                          "__nodeEvent": {
                                                            "onMounted": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function onMountedFn(){\n\n                                                                const rootNode = { name: this.$globalVars.$context.orgShortName, id: this.$globalVars.$context.orgId };\n                                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                                  rootNode: rootNode,\n                                                                  defaultText: this.$dataModels.receiveDeliveryFilter.singleTable.ghName || '',\n                                                                  clearable: true,\n                                                                  currentSize: 10,\n                                                                  searchEnable: false,\n                                                                  placeholder: '请选择'\n                                                                };\n\n                                                              }"
                                                            },
                                                            "onChange": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(item){\n\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.ghName = item.name\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            },
                                                            "onClear": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n\n                                                                this.$dataModels.receiveDeliveryFilter.singleTable.ghName = ''\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_searchTreeSelect_lqc6e0cc",
                                                          "__description": "请选择"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0cb",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "orderCode",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0cd",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "input",
                                                        "elementOptions": {
                                                          "__nodeId": "input_lqc6e0ce",
                                                          "__nodeName": "input",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "plain": false,
                                                            "clearable": true,
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "type": "text",
                                                            "placeholder": "请输入",
                                                            "modelName": "receiveDeliveryFilter.singleTable.orderCode",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onClear": {
                                                              "isOn": true,
                                                              "fn": "async function fnInputFocus(){\n\n                                                                this.$exposeds.get('tableAsync_lozti7x5').methods.loadData();\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_input_lqc6e0ce",
                                                          "__description": "请输入"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0cd",
                                                      "__description": ""
                                                    }
                                                  },
                                                  {
                                                    "name": "isAudit",
                                                    "defaultSlot": {
                                                      "__nodeId": "elementRender_lqc6e0cf",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "select",
                                                        "elementOptions": {
                                                          "__nodeId": "select_lqc6e0cg",
                                                          "__nodeName": "select",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "multiple": false,
                                                            "disabled": false,
                                                            "size": "default",
                                                            "clearable": false,
                                                            "collapseTags": false,
                                                            "collapseTagsTooltip": false,
                                                            "multipleLimit": 0,
                                                            "clearIcon": "CircleClose",
                                                            "fitInputWidth": false,
                                                            "filterable": false,
                                                            "valueKey": "value",
                                                            "placeholder": "请选择",
                                                            "modelName": "receiveDeliveryFilter.singleTable.isAudit",
                                                            "itemData": [
                                                              {
                                                                "value": "",
                                                                "label": "全部"
                                                              },
                                                              {
                                                                "value": true,
                                                                "label": "已提交"
                                                              },
                                                              {
                                                                "value": false,
                                                                "label": "未提交"
                                                              }
                                                            ],
                                                            "defaultProps": {
                                                              "label": "label",
                                                              "value": "value"
                                                            },
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {
                                                            "onChange": {
                                                              "isOn": true,
                                                              "fn": "async function fnName(val){\n\n\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_select_lqc6e0cg",
                                                          "__description": "请选择",
                                                          "__nodeStyle": {
                                                            "width": "100%"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lqc6e0cf",
                                                      "__description": ""
                                                    }
                                                  }
                                                ],
                                                "labelWidth": "80px"
                                              },
                                              "__nodeKey": "nodeKey_dynamicFilter_lqc6cr3g",
                                              "__description": "直收直发主界面过滤器"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lqc6c6pg",
                                          "__description": ""
                                        }
                                      },
                                      {
                                        "tag": "item-2",
                                        "isFixed": true,
                                        "showDragButton": true,
                                        "size": "400px",
                                        "paddingSize": "base",
                                        "clearPadding": [
                                          "bottom"
                                        ],
                                        "contentType": "container",
                                        "display": true,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lozti6e1",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "box",
                                            "containerOptions": {
                                              "__nodeId": "box_lozti7m3",
                                              "__nodeName": "box",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "shadow": false,
                                                "border": true,
                                                "background": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "clearBorder": [],
                                                "height": "100%",
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lozti7m4",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "tableAsync",
                                                    "elementOptions": {
                                                      "__nodeId": "tableAsync_lozti7x5",
                                                      "__nodeName": "tableAsync",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "requestFn": "queryRdsOrderData",
                                                        "columnConfigs": [
                                                          {
                                                            "attr": {
                                                              "prop": "id",
                                                              "label": "序号",
                                                              "type": "index"
                                                            },
                                                            "id": "0_item_config_lu9nzylj"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "labourId",
                                                              "label": "打印/导出",
                                                              "scopedSlot": "labourId"
                                                            },
                                                            "id": "1_item_config_lu9nzylk"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "isAudit",
                                                              "label": "提交状态",
                                                              "scopedSlot": "isAudit"
                                                            },
                                                            "id": "2_item_config_lu9nzyll"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orgName",
                                                              "label": "组织机构"
                                                            },
                                                            "id": "3_item_config_lu9nzylm"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderCode",
                                                              "label": "单据编号",
                                                              "scopedSlot": "orderCode"
                                                            },
                                                            "id": "4_item_config_lu9nzyln"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "orderTime",
                                                              "label": "入库时间"
                                                            },
                                                            "id": "5_item_config_lu9nzylo"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "supplierName",
                                                              "label": "供应单位"
                                                            },
                                                            "id": "6_item_config_lu9nzylp"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "settlementName",
                                                              "label": "结算单位"
                                                            },
                                                            "id": "7_item_config_lu9nzylq"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "labourName",
                                                              "label": "用料单位"
                                                            },
                                                            "id": "8_item_config_lu9nzylr"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "teamName",
                                                              "label": "队伍名称"
                                                            },
                                                            "id": "9_item_config_lu9nzyls"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "ghName",
                                                              "label": "使用部位"
                                                            },
                                                            "id": "10_item_config_lu9nzylt"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "ghFullName",
                                                              "label": "使用部位"
                                                            },
                                                            "id": "11_item_config_lu9nzylu"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "maker",
                                                              "label": "制单人"
                                                            },
                                                            "id": "12_item_config_lu9nzylv"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "makerDate",
                                                              "label": "制单日期"
                                                            },
                                                            "id": "13_item_config_lu9nzylw"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auditor",
                                                              "label": "提交人"
                                                            },
                                                            "id": "14_item_config_lu9nzylx"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "auditDate",
                                                              "label": "提交时间"
                                                            },
                                                            "id": "15_item_config_lu9nzyly"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "remark",
                                                              "label": "单据备注"
                                                            },
                                                            "id": "16_item_config_lu9nzylz"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "tenant",
                                                              "label": "附件管理",
                                                              "scopedSlot": "tenant"
                                                            },
                                                            "id": "17_item_config_lu9nzym0"
                                                          }
                                                        ],
                                                        "columnSlots": [
                                                          {
                                                            "code": "labourId",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpjsvhb4",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "buttonGroup",
                                                                "elementOptions": {
                                                                  "__nodeId": "buttonGroup_lpjsvhaz",
                                                                  "__nodeName": "buttonGroup",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "buttonGroupOptions": [
                                                                      {
                                                                        "tooltipOption": {
                                                                          "effect": "dark",
                                                                          "content": "打印数据",
                                                                          "placement": "top"
                                                                        },
                                                                        "btnType": "button",
                                                                        "buttonOptions": {
                                                                          "__nodeId": "button_lpjsvhb2",
                                                                          "__nodeName": "button",
                                                                          "__nodeType": "columnNode",
                                                                          "__nodeOptions": {
                                                                            "size": "small",
                                                                            "type": "success",
                                                                            "icon": "Printer",
                                                                            "plain": true,
                                                                            "circle": true
                                                                          },
                                                                          "__nodeEvent": {
                                                                            "onClick": {
                                                                              "isOn": true,
                                                                              "fn": "async function fnName(row){\n\n\n                                                                                this.$sharedFns.receiveToDeliveryPrint(row, 'print');\n\n\n                                                                              }"
                                                                            }
                                                                          },
                                                                          "__nodeKey": "nodeKey_button_lpjsvhb2"
                                                                        }
                                                                      },
                                                                      {
                                                                        "tooltipOption": {
                                                                          "effect": "dark",
                                                                          "content": "导出数据",
                                                                          "placement": "top"
                                                                        },
                                                                        "btnType": "button",
                                                                        "buttonOptions": {
                                                                          "__nodeId": "button_lpjsvhb3",
                                                                          "__nodeName": "button",
                                                                          "__nodeType": "columnNode",
                                                                          "__nodeEvent": {
                                                                            "onClick": {
                                                                              "isOn": true,
                                                                              "fn": "async function fnName(row){\n\n\n                                                                                this.$sharedFns.receiveToDeliveryPrint(row, 'excel');\n\n\n                                                                              }"
                                                                            }
                                                                          },
                                                                          "__nodeOptions": {
                                                                            "size": "small",
                                                                            "type": "success",
                                                                            "plain": true,
                                                                            "circle": true,
                                                                            "iconFont": "icon cs-common excel"
                                                                          },
                                                                          "__nodeKey": "nodeKey_button_lpjsvhb3"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "__nodeEvent": {},
                                                                  "__nodeKey": "nodeKey_buttonGroup_lpjsvhaz",
                                                                  "__description": ""
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpjsvhb4",
                                                              "__description": ""
                                                            },
                                                            "propName": "打印/导出"
                                                          },
                                                          {
                                                            "code": "isAudit",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpjsvhrd",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "tag",
                                                                "elementOptions": {
                                                                  "__nodeId": "tag_lpjsvhrc",
                                                                  "__nodeName": "tag",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "content": "标签",
                                                                    "closable": false,
                                                                    "hit": false,
                                                                    "round": false,
                                                                    "effect": "light",
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "size": "small"
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onValueRender": {
                                                                      "isOn": true,
                                                                      "fn": "function onValueRenderFn(row){\n\n                                                                        if (row.isAudit) {\n                                                                          return { content: '已提交', type: 'success' }\n                                                                        } else {\n                                                                          return { content: '未提交', type: 'danger' }\n                                                                        }\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_tag_lpjsvhrc",
                                                                  "__description": "标签"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpjsvhrd",
                                                              "__description": ""
                                                            },
                                                            "propName": "提交状态"
                                                          },
                                                          {
                                                            "code": "orderCode",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpjsvi7m",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "button",
                                                                "elementOptions": {
                                                                  "__nodeId": "button_lpjsvi7l",
                                                                  "__nodeName": "button",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "size": "default",
                                                                    "plain": true,
                                                                    "content": "按钮",
                                                                    "type": "primary",
                                                                    "text": false,
                                                                    "link": true,
                                                                    "round": false,
                                                                    "circle": false,
                                                                    "loading": false,
                                                                    "disabled": false,
                                                                    "display": true,
                                                                    "permissionSetting": ""
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onValueRender": {
                                                                      "isOn": true,
                                                                      "fn": "function onValueRenderFn(row){\n                                                                        return {content:row.orderCode}\n                                                                      }"
                                                                    },
                                                                    "onClick": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function fnName(row){\n\n                                                                        localStorage.setItem('route', 'receiveDelivery')\n\n\n                                                                        const { rdsFormModel, previewSrcList, gpyPreviewList } = this.$dataModels\n                                                                        previewSrcList.items = []\n                                                                        gpyPreviewList.items.length = 0\n                                                                        this.$dataModels.rdsFormModel.gpyPhotos.length = 0\n                                                                        const { orgId, id } = row\n\n                                                                        const res = await this.$requestFns.getRdsOrderItems({ orgId, id });\n\n                                                                        const {\n                                                                          qReceiveToDeliverys,\n                                                                          qReceives,\n                                                                          qReceiveMoreMaterials,\n                                                                          qReceivePhotos,\n                                                                          deliveryS,\n                                                                          qReceiveGpys\n                                                                        } = res.data\n\n                                                                        Object.assign(this.$dataModels.rdsFormModel.qReceiveToDelivery, qReceiveToDeliverys)\n                                                                        Object.assign(this.$dataModels.rdsFormModel.qReceive, qReceives)\n                                                                        Object.assign(this.$dataModels.rdsFormModel.qDelivery, deliveryS[0])\n                                                                        Object.assign(this.$dataModels.rdsFormModel.qReceiveMoreMaterials, qReceiveMoreMaterials)\n\n                                                                        rdsFormModel.photos = []\n                                                                        rdsFormModel.materials = res.data.qReceiveMoreMaterials\n                                                                        rdsFormModel.qReceiveGpys = qReceiveGpys\n\n                                                                        console.log(qReceivePhotos);\n\n                                                                        let keys = []\n                                                                        res.data.qReceivePhotos.forEach(p => {\n                                                                          p.photoUrl ? keys.push(p.photoUrl) : ''\n                                                                        })\n                                                                        let ghyPhotoList = []\n                                                                        qReceiveGpys.forEach(p => {\n                                                                          p.gpyPhotoUrl ? ghyPhotoList.push(p.gpyPhotoUrl) : ''\n                                                                        })\n                                                                        if (ghyPhotoList.length) {\n                                                                          const gpyps = await this.$sharedFns.downloadFile({ keys: ghyPhotoList });\n                                                                          qReceiveGpys.forEach(t => {\n                                                                            rdsFormModel.gpyPhotos.push(Object.assign(t, { gpyPhotoUrl: gpyps[t.gpyPhotoUrl] }))\n                                                                            gpyPreviewList.items.push(t.gpyPhotoUrl)\n                                                                          })\n                                                                        }\n                                                                        if (keys.length) {\n                                                                          const ps = await this.$sharedFns.downloadFile({ keys: keys });\n                                                                          res.data.qReceivePhotos.forEach(t => {\n                                                                            rdsFormModel.photos.push(Object.assign(t, { _photoUrl: ps[t.photoUrl] }))\n                                                                            previewSrcList.items.push(ps[t.photoUrl])\n                                                                          })\n                                                                        }\n                                                                        console.log(rdsFormModel.photos);\n                                                                        debugger\n                                                                        this.$globalVars.$router.push({\n                                                                          name: 'rdsDetail',\n                                                                          query: row\n                                                                        })\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_button_lpjsvi7l",
                                                                  "__description": "按钮"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpjsvi7m",
                                                              "__description": ""
                                                            },
                                                            "propName": "单据编号"
                                                          },
                                                          {
                                                            "code": "tenant",
                                                            "columRender": {
                                                              "__nodeId": "columRender_lpjsvinv",
                                                              "__nodeName": "columRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "uploadComp",
                                                                "elementOptions": {
                                                                  "__nodeId": "uploadComp_lpjsvinu",
                                                                  "__nodeName": "uploadComp",
                                                                  "__nodeType": "columnNode",
                                                                  "__nodeEvent": {},
                                                                  "__nodeOptions": {
                                                                    "content": "附件管理",
                                                                    "moduleCode": "receiveDelivery",
                                                                    "orderId": 0,
                                                                    "uploadAttach": true,
                                                                    "plain": true,
                                                                    "link": true,
                                                                    "disabled": false,
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "type": "primary",
                                                                    "size": "small"
                                                                  },
                                                                  "__nodeKey": "nodeKey_uploadComp_lpjsvinu",
                                                                  "__description": "",
                                                                  "__nodeStyle": {
                                                                    "borderWidth": "0px"
                                                                  }
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_columRender_lpjsvinv",
                                                              "__description": ""
                                                            },
                                                            "propName": "附件管理"
                                                          }
                                                        ],
                                                        "columnHeaderSlots": [],
                                                        "showSummary": false,
                                                        "pagination": {
                                                          "currentSize": 10,
                                                          "pageSizes": [
                                                            10,
                                                            20,
                                                            30,
                                                            50
                                                          ],
                                                          "layout": "sizes,prev,pager,next,total"
                                                        },
                                                        "tableCodeRemark": "",
                                                        "tableCode": "qRdsOrderTable",
                                                        "isCustom": true
                                                      },
                                                      "__nodeEvent": {
                                                        "onMounted": {
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn() {\n                                                            this.$currentInstance.exposed.methods.loadData();\n                                                            this.$sharedFns.changeBtnState('receiveDelivery');\n                                                          }"
                                                        },
                                                        "onRowClick": {
                                                          "isOn": true,
                                                          "fn": "async function fnRowClick(row, column){\n                                                            this.$currentInstance.exposed.model.currentRow.value = row;\n                                                            this.$exposeds.get('tableReport_lozuueqo').methods.loadData(row);\n                                                            this.$sharedFns.changeBtnState('receiveDelivery');\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_tableAsync_lozti7x5",
                                                      "__description": "直进直出主界面主表"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lozti7m4",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeKey": "nodeKey_box_lozti7m3",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lozti6e1",
                                          "__description": ""
                                        },
                                        "dragButtonPosition": "bottom"
                                      },
                                      {
                                        "tag": "item-3",
                                        "isFixed": false,
                                        "showDragButton": false,
                                        "size": "",
                                        "paddingSize": "base",
                                        "clearPadding": [],
                                        "contentType": "container",
                                        "display": true,
                                        "permissionSetting": "",
                                        "defaultSlot": {
                                          "__nodeId": "containerRender_lozti7b2",
                                          "__nodeName": "containerRender",
                                          "__nodeType": "renderNode",
                                          "__nodeEvent": {},
                                          "__nodeOptions": {
                                            "renderType": "box",
                                            "containerOptions": {
                                              "__nodeId": "box_lozti886",
                                              "__nodeName": "box",
                                              "__nodeType": "baseNode",
                                              "__nodeEvent": {},
                                              "__nodeOptions": {
                                                "shadow": false,
                                                "border": true,
                                                "background": true,
                                                "paddingSize": "small",
                                                "clearPadding": [],
                                                "clearBorder": [],
                                                "height": "100%",
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lozuueqn",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "tableReport",
                                                    "elementOptions": {
                                                      "__nodeId": "tableReport_lozuueqo",
                                                      "__nodeName": "tableReport",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {
                                                        "onLoadData": {
                                                          "isOn": true,
                                                          "fn": "async function fnLoadData(params) {\n                                                            this.$currentInstance.exposed.model.tableLoading.value = true;\n                                                            const { id, orgId } = this.$exposeds.get('tableAsync_lozti7x5').model.currentRow.value;\n\n\n                                                            const data = await this.$requestFns.getRdsOrderItems({\n                                                              id: id,\n                                                              orgId: orgId\n                                                            });\n\n                                                            if (!data.error) {\n                                                              this.$currentInstance.exposed.model.tableData.value = data.data.qReceiveMoreMaterials;\n                                                            } else {\n                                                              this.$currentInstance.exposed.model.tableData.value = []\n                                                            }\n                                                            this.$currentInstance.exposed.model.tableLoading.value = false;\n\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeOptions": {
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "requestFn": "",
                                                        "columnConfigs": [
                                                          {
                                                            "attr": {
                                                              "prop": "orgId",
                                                              "label": "序号",
                                                              "type": "index"
                                                            },
                                                            "id": "0_item_config_ltlohxva"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialName",
                                                              "label": "物资名称"
                                                            },
                                                            "id": "1_item_config_ltlohxvb"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialModel",
                                                              "label": "规格型号"
                                                            },
                                                            "id": "2_item_config_ltlohxvc"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "materialUnit",
                                                              "label": "计量单位"
                                                            },
                                                            "id": "3_item_config_ltlohxvd"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "netQuantity",
                                                              "label": "收/发料量"
                                                            },
                                                            "id": "4_item_config_ltlohxve"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxRate",
                                                              "label": "税率(%)"
                                                            },
                                                            "id": "5_item_config_ltlohxvf"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "taxIncludedPrice",
                                                              "label": "含税单价(元)"
                                                            },
                                                            "id": "6_item_config_ltlohxvg"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "freight",
                                                              "label": "运费(元)"
                                                            },
                                                            "id": "7_item_config_ltlohxvh"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "storagePlace",
                                                              "label": "存放地"
                                                            },
                                                            "id": "8_item_config_ltlohxvi"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "testReportNo",
                                                              "label": "实验报告号"
                                                            },
                                                            "id": "9_item_config_ltlohxvj"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "skillCardNo",
                                                              "label": "技证号"
                                                            },
                                                            "id": "10_item_config_ltlohxvk"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "batchNo",
                                                              "label": "炉批号"
                                                            },
                                                            "id": "11_item_config_ltlohxvl"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "acceptanceRecord",
                                                              "label": "验收情况记录"
                                                            },
                                                            "id": "12_item_config_ltlohxvm"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "manufacturer",
                                                              "label": "生产厂商"
                                                            },
                                                            "id": "13_item_config_ltlohxvn"
                                                          },
                                                          {
                                                            "attr": {
                                                              "prop": "remark",
                                                              "label": "明细备注"
                                                            },
                                                            "id": "14_item_config_ltlohxvo"
                                                          }
                                                        ],
                                                        "columnSlots": [],
                                                        "columnHeaderSlots": [],
                                                        "showSummary": false,
                                                        "pagination": {
                                                          "currentSize": 20,
                                                          "pageSizes": [
                                                            10,
                                                            20,
                                                            30,
                                                            50
                                                          ],
                                                          "layout": "sizes, prev, pager, next, total"
                                                        },
                                                        "tableCodeRemark": "",
                                                        "tableCode": "qRdsOrderItemTable",
                                                        "isCustom": true
                                                      },
                                                      "__nodeKey": "nodeKey_tableReport_lozuueqo",
                                                      "__description": "直进直出主界面从表"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lozuueqn",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeKey": "nodeKey_box_lozti886",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_containerRender_lozti7b2",
                                          "__description": ""
                                        }
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {},
                                  "__nodeKey": "nodeKey_flexBox_lozti6dz",
                                  "__description": ""
                                }
                              }
                            ]
                          },
                          "__nodeEvent": {
                            "onTabClick": {
                              "isOn": true,
                              "fn": "async function fnName(){\n\n                                console.log(this.$currentInstance.exposed.model.activeName.value);\n\n                              }"
                            },
                            "onMounted": {
                              "type": "system",
                              "isOn": true,
                              "fn": "async function onMountedFn(){\n                                const res = localStorage.getItem('route')\n                                this.$exposeds.get('tabpanel_lopncx3b').model.activeName.value = res || 'receive'\n                                localStorage.setItem('route', 'receive')\n                                this.$sharedFns.getConfig();\n\n                              }"
                            }
                          },
                          "__nodeKey": "nodeKey_tabpanel_lopncx3b",
                          "__description": ""
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lopncx39",
                      "__description": ""
                    }
                  }
                ]
              },
              "__nodeEvent": {
                "onMounted": {
                  "type": "system",
                  "isOn": false,
                  "fn": "async function onMountedFn(){\n\n                    const res = localStorage.getItem('route')\n                    console.log(res);\n                    console.log(\"====================上次路径==================\");\n                    this.$exposeds.get('tabpanel_lopncx3b').model.activeName.value = res || 'receive'\n                    localStorage.setItem('route', 'receive')\n                  }"
                }
              },
              "__nodeKey": "nodeKey_flexBox_lopncx38",
              "__description": ""
            }
          },
          "__nodeKey": "nodeKey_plane_lopncx2n",
          "__description": ""
        },
        "dialogOptions": [],
        "drawerOptions": []
      },
      "__nodeKey": "nodeKey_views_lopncx2m",
      "__description": ""
    },
    "receiveEdit": {
      "__nodeId": "views_lrt7yw7x",
      "__nodeName": "views",
      "__nodeType": "baseNode",
      "__nodeEvent": {},
      "__nodeOptions": {
        "planeOptions": {
          "__nodeId": "plane_lrt7yw7y",
          "__nodeName": "plane",
          "__nodeType": "baseNode",
          "__nodeEvent": {},
          "__nodeOptions": {
            "isShowNav": true,
            "navigationOptions": {
              "__nodeId": "navigationBar_lrt7yw7z",
              "__nodeName": "navigationBar",
              "__nodeType": "baseNode",
              "__nodeEvent": {
                "onValueRender": {
                  "type": "system",
                  "isOn": true,
                  "fn": "function onValueRenderFn(row) {\n\n                    const { query } = this.$globalVars.$router.currentRoute\n\n\n                    this.$currentInstance.exposed.model.elementOption.value = {\n                      routers: [\n                        {\n                          \"title\": query.id ? \"编辑\" : \"添加\"\n                        }\n                      ]\n                    };\n\n                  }"
                }
              },
              "__nodeOptions": {
                "defaultSlot": [
                  {
                    "__nodeId": "elementRender_lrt7yw80",
                    "__nodeName": "elementRender",
                    "__nodeType": "renderNode",
                    "__nodeOptions": {
                      "renderType": "button",
                      "elementOptions": {
                        "__nodeId": "button_lrt7yw81",
                        "__nodeName": "button",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "size": "default",
                          "plain": false,
                          "content": "关闭",
                          "type": "primary",
                          "text": true,
                          "link": false,
                          "round": false,
                          "circle": false,
                          "loading": false,
                          "disabled": false
                        },
                        "__nodeEvent": {
                          "onMounted": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          },
                          "onClick": {
                            "isOn": true,
                            "fn": "async function(){\n                              this.$globalVars.$router.push({path:\"/\"})\n\n                            }"
                          },
                          "onChange": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          }
                        },
                        "__nodeKey": "nodeKey_button_lrt7yw81",
                        "__description": "关闭"
                      }
                    },
                    "__nodeKey": "nodeKey_elementRender_lrt7yw80",
                    "__description": ""
                  }
                ],
                "display": true,
                "isSysRouter": true,
                "permissionSetting": "",
                "routers": [
                  {
                    "title": "编辑"
                  }
                ]
              },
              "__nodeKey": "nodeKey_navigationBar_lrt7yw7z",
              "__description": ""
            },
            "flexBoxOptions": {
              "__nodeId": "flexBox_lrt8ic25",
              "__nodeName": "flexBox",
              "__nodeType": "baseNode",
              "__nodeOptions": {
                "display": true,
                "permissionSetting": "",
                "isRow": false,
                "itemNum": 5,
                "width": "100%",
                "height": "100%",
                "itemConfig": [
                  {
                    "tag": "item-1",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "contentType": "container",
                    "paddingSize": "large",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrt8ic26",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrt8ic3j",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrt8ic3k",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "form",
                                "elementOptions": {
                                  "__nodeId": "form_lrt8ic3q",
                                  "__nodeName": "form",
                                  "__nodeType": "baseNode",
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n                                        const validatePlateNumber = (rule, value, callback) => {\n\n                                          if (!value) {\n                                            callback()\n                                            return\n                                          }\n                                          const isValid = this.$sharedFns.isVehicleNumber(value);\n                                          if (this.$dataModels.deliveryFormModel.qDelivery.plateNumber) {\n                                            if (isValid) {\n                                              callback()\n                                            } else {\n                                              callback(new Error('请输入正确的车牌号码！'))\n                                            }\n                                          } else {\n                                            callback()\n                                          }\n                                        }\n                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                          rules: {\n                                            \"orgId\": [\n                                              {\n                                                \"required\": true,\n                                                \"message\": \"请选择组织机构\",\n                                                \"trigger\": \"blur\"\n                                              }\n                                            ],\n                                            \"exitTime\": [\n                                              {\n                                                \"required\": true,\n                                                \"message\": \"请选择入账时间\",\n                                                \"trigger\": \"change\"\n                                              }\n                                            ],\n                                            plateNumber: [\n                                              { validator: validatePlateNumber, trigger: 'blur' }\n                                            ],\n                                            \"supplierId\": [\n                                              {\n                                                \"required\": true,\n                                                \"message\": \"请选择供应单位\",\n                                                \"trigger\": \"change\"\n                                              }\n                                            ]\n                                          }\n                                        }\n\n                                      }"
                                    }
                                  },
                                  "__nodeOptions": {
                                    "modelName": "receiveFormModel.qReceive",
                                    "rules": {},
                                    "labelWidth": "80px",
                                    "size": "default",
                                    "disabled": false,
                                    "statusIcon": false,
                                    "inlineMessage": false,
                                    "labelPosition": "right",
                                    "showMessage": true,
                                    "display": true,
                                    "permissionSetting": "",
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lrt8ic3r",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lrt8ic3u",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic56",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic57",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic58",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "radioGroup",
                                                            "elementOptions": {
                                                              "__nodeId": "radioGroup_lrt8ic59",
                                                              "__nodeName": "radioGroup",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "disabled": false,
                                                                "size": "default",
                                                                "type": "button",
                                                                "modelName": "receiveFormModel.qReceive.serviceType",
                                                                "itemData": [
                                                                  {
                                                                    "label": "收料",
                                                                    "value": 10
                                                                  },
                                                                  {
                                                                    "label": "调入",
                                                                    "value": 20
                                                                  },
                                                                  {
                                                                    "label": "退收料",
                                                                    "value": -11
                                                                  },
                                                                  {
                                                                    "label": "退调入",
                                                                    "value": -21
                                                                  }
                                                                ],
                                                                "defaultProps": {
                                                                  "label": "label",
                                                                  "value": "value"
                                                                },
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(val){\n\n\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('receive');\n                                                                    receiveFormModel.qReceive.orderCode = orderCode\n\n                                                                    this.$sharedFns.setNodeOptions(\n                                                                      ['formItem_lrt8ic4r', 'label', val < 0 ? '退货时间' : '入库时间']\n                                                                    );\n\n                                                                    receiveFormModel.qReceive.supplierId = null //供应商\n                                                                    receiveFormModel.qReceive.supplierName = ''\n                                                                    receiveFormModel.qReceive.oriSupplierId = ''\n                                                                    receiveFormModel.qReceive.settlementId = 0   //结算单位\n                                                                    receiveFormModel.qReceive.settlementName = ''\n                                                                    receiveFormModel.qReceive.freight = 0 //运费\n                                                                    this.$sharedFns.setNodeOptions([\n                                                                      ['searchSelect_ltb89pbx', 'defaultText', ''],\n                                                                      ['searchSelect_ltb89pbx', 'disabled', true],\n                                                                    ]);\n                                                                    receiveFormModel.qReceivePhotos = []\n                                                                    const { itemConfig } = this.$exposeds.get('flexBox_lrt8ic25').model.elementOption.value\n                                                                    receiveFormModel.qReceivePhotos = []\n                                                                    if (val<0) {\n                                                                      itemConfig.forEach(box => {\n                                                                        if(box.tag=='item-2'){\n                                                                          box.isHidden=true\n                                                                        }\n                                                                        if (box.tag == 'item-3') {\n                                                                          box.isHidden = false\n                                                                        }\n                                                                      })\n                                                                      receiveFormModel.qReceive.priceType = ''   //价格类型\n                                                                      receiveFormModel.qReceive.taxRate = null   //税率\n                                                                      receiveFormModel.qReceive.purchaseMethod = ''  //采购方式\n                                                                      receiveFormModel.qReceive.purchaseMethodFullName = ''\n\n\n\n                                                                      //  this.$exposeds.get('searchSelect_lrycwdi8').methods.reload();\n\n                                                                    } else {\n                                                                      itemConfig.forEach(box => {\n                                                                        if (box.tag == 'item-2') {\n                                                                          box.isHidden = false\n                                                                        }\n                                                                        if (box.tag == 'item-3') {\n                                                                          box.isHidden = true\n                                                                        }\n                                                                      })\n                                                                    }\n                                                                    if (val==10) {\n                                                                      // 收料供应商\n                                                                      this.$sharedFns.setNodeOptions(\n                                                                        ['basisCommonSelect_lrt8ic5r', 'defaultText', ''],\n                                                                        ['searchSelect_lrycwdi8', 'defaultText', '']\n                                                                      );\n                                                                    } else if (val==20){\n                                                                      // 调入供应商\n                                                                      this.$sharedFns.setNodeOptions(\n                                                                        ['searchTreeSelect_lrvy0nem', 'defaultText', ''],\n                                                                        ['searchSelect_lrycwdi8', 'defaultText', '']\n                                                                      )\n                                                                    } else {\n                                                                      // 退货供应商\n                                                                      if (this.$exposeds.get('searchSelect_lrycwdi8')) {\n                                                                        setTimeout(() => {\n                                                                          this.$exposeds.get('searchSelect_lrycwdi8').methods.reload();\n                                                                        }, 100)\n                                                                      }\n                                                                      // 清空默认选项\n                                                                      this.$sharedFns.setNodeOptions(\n                                                                        [\n                                                                          ['searchSelect_lrycwdi8', 'defaultText', '']\n                                                                        ]\n                                                                      )\n                                                                      this.$exposeds.get('form_lrt8ic3q').methods.clearValidate();\n                                                                    }\n\n                                                                    receiveFormModel.qReceivePhotos = await this.$sharedFns.getPhotoConfig(val > 0 ? 'mq2ReceiveKey' : 'mq2ReceiveReturnKey', val > 0 ?5:4);\n                                                                    this.$exposeds.get('listOnly_lsu1bn0e').model.listData.value = receiveFormModel.qReceivePhotos\n\n                                                                    this.$sharedFns.resetEditPageBtnState('receive');\n                                                                  }"
                                                                },
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    if (query.id) {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: true\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false\n                                                                      }\n                                                                    }\n                                                                  }"
                                                                },
                                                                "": {
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(val){\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('receive');\n                                                                    receiveFormModel.qReceive.orderCode = orderCode\n\n                                                                    this.$exposeds.get('formItem_lrt8ic4r').model.elementOption.value = {\n                                                                      label: val<0?'退货时间':'入库时间'\n                                                                    }\n\n                                                                    await this.$sharedFns.resetEditPageBtnState('receive');\n\n\n                                                                    if (val<0) {\n                                                                      receiveFormModel.qReceive.supplierId = null\n                                                                      receiveFormModel.qReceive.supplierName = ''\n                                                                      receiveFormModel.qReceive.oriSupplierId = ''\n                                                                      receiveFormModel.qReceive.priceType = ''\n                                                                      this.$exposeds.get('searchSelect_lrycwdi8').model.elementOption.value = {\n                                                                        defaultText: ''\n                                                                      };\n\n                                                                      //  this.$exposeds.get('searchSelect_lrycwdi8').methods.reload();\n\n                                                                      const columns = this.$exposeds.get('tableEdit_lru2vhub').model.elementOption.value.columnConfigs\n                                                                      columns.forEach(t => {\n                                                                        if (['taxRate', 'taxFreePrice', 'priceType','taxIncludedPrice'].includes(t.dataKey)) {\n                                                                          //  t.display = false\n                                                                          t.hidden=true\n                                                                        }\n                                                                        if (t.dataKey =='roughQuantity'){\n                                                                          t.hidden = false\n                                                                        }\n                                                                      })\n                                                                      this.$exposeds.get('tableEdit_lru2vhub').model.elementOption.value= {\n                                                                        columnConfigs: columns,\n                                                                        isDeep: true\n                                                                      }\n                                                                    } else {\n                                                                      const columns = this.$exposeds.get('tableEdit_lru2vhub').model.elementOption.value.columnConfigs\n                                                                      columns.forEach(t => {\n                                                                        if (['taxRate', 'taxFreePrice', 'priceType', 'taxIncludedPrice'].includes(t.dataKey)) {\n                                                                          //  t.display = false\n                                                                          t.hidden = false\n                                                                        }\n                                                                        if (t.dataKey == 'roughQuantity') {\n                                                                          t.hidden = true\n                                                                        }\n                                                                      })\n                                                                      this.$exposeds.get('tableEdit_lru2vhub').model.elementOption.value = {\n                                                                        columnConfigs: columns,\n                                                                        isDeep: true\n                                                                      }\n                                                                    }\n                                                                    this.$sharedFns.resetEditPageBtnState('receive');\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_radioGroup_lrt8ic59",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic58",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "0px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic57",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic56",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic3u",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic3x",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic4o",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic4p",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "组织机构",
                                                        "prop": "orgId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic5a",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "organizationTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "organizationTreeSelect_lrt8ic5b",
                                                              "__nodeName": "organizationTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    if (!query.id) {\n                                                                      const { orgId, orgShortName } = this.$globalVars.$context\n                                                                      receiveFormModel.qReceive.orgId = orgId\n                                                                      receiveFormModel.qReceive.orgName = orgShortName\n                                                                      const rootNode = { shortName: orgShortName, id: orgId }\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        rootId: orgId,\n                                                                        rootName: orgShortName,\n                                                                        defaultText: orgShortName\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: true,\n                                                                        defaultText: receiveFormModel.qReceive.orgName\n                                                                      }\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnOrgTreeChange(item, props){\n                                                                    const { receiveFormModel} = this.$dataModels\n                                                                    receiveFormModel.qReceive.orgId = item.id\n                                                                    receiveFormModel.qReceive.orgName = item.shortName || item.name\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('receive');\n                                                                    receiveFormModel.qReceive.orderCode = orderCode\n\n                                                                    debugger\n                                                                    if (receiveFormModel.qReceive.serviceType < 0) {\n                                                                      receiveFormModel.qReceive.supplierId = 0\n                                                                      receiveFormModel.qReceive.supplierName = ''\n\n                                                                      if (this.$exposeds.get('searchSelect_lrycwdi8')) {\n                                                                        setTimeout(() => {\n                                                                          this.$exposeds.get('searchSelect_lrycwdi8').methods.reload();\n                                                                        }, 100)\n                                                                      }\n                                                                      // 清空默认选项\n                                                                      this.$sharedFns.setNodeOptions(\n                                                                        [\n                                                                          ['searchSelect_lrycwdi8', 'defaultText', '']\n                                                                        ]\n                                                                      )\n                                                                      this.$exposeds.get('form_lrt8ic3q').methods.clearValidate();\n                                                                    }\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "type": "select",
                                                                "modelName": "receiveFormModel.qReceive.orgId",
                                                                "defaultText": "",
                                                                "disabled": false,
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "searchEnable": false,
                                                                "clearable": false,
                                                                "reloadEnable": true,
                                                                "isUseCurrentOrg": true,
                                                                "rootId": "",
                                                                "rootName": "",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeKey": "nodeKey_organizationTreeSelect_lrt8ic5b",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic5a",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic4p",
                                                      "__description": "组织机构"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic4o",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic3x",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic40",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic4q",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic4r",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {
                                                        "onMounted": {
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn(){\n                                                            const { serviceType} = this.$dataModels.receiveFormModel.qReceive\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              label: serviceType > 0 ? '入库时间' : '退货时间'\n                                                            }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeOptions": {
                                                        "label": "入库时间",
                                                        "prop": "exitTime",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic5c",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "datePicker",
                                                            "elementOptions": {
                                                              "__nodeId": "datePicker_lrt8ic5d",
                                                              "__nodeName": "datePicker",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "size": "default",
                                                                "editable": false,
                                                                "clearable": false,
                                                                "type": "datetime",
                                                                "prefixIcon": "Calendar",
                                                                "clearIcon": "CircleClose",
                                                                "placeholder": "请选择日期",
                                                                "modelName": "receiveFormModel.qReceive.exitTime",
                                                                "shortcuts": [],
                                                                "format": "YYYY-MM-DD HH:mm:ss",
                                                                "valueFormat": "YYYY-MM-DD HH:mm:ss",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { globalConfig, receiveFormModel } = this.$dataModels\n                                                                    if (!query.id) {\n                                                                      const { getAccountMonth, formatDate } = this.$utils\n                                                                      receiveFormModel.qReceive.orderDate = getAccountMonth(globalConfig.accountDay, new Date())\n                                                                      receiveFormModel.qReceive.recordedDate =  formatDate('YYYY-MM-DD', new Date())\n                                                                      receiveFormModel.qReceive.exitTime = formatDate('YYYY-MM-DD HH:mm:ss', new Date())\n                                                                      const orderCode = await  this.$sharedFns.createOrderCode('receive');\n                                                                      receiveFormModel.qReceive.orderCode = orderCode\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {disabled: true};\n\n                                                                      await this.$sharedFns.createOrderCode('receive');\n\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(val) {\n                                                                    const { formatDate, getAccountMonth } = this.$utils\n                                                                    const { receiveFormModel, globalConfig } = this.$dataModels\n                                                                    receiveFormModel.qReceive.recordedDate =  formatDate('YYYY-MM-DD', val)\n                                                                    receiveFormModel.qReceive.exitTime = formatDate('YYYY-MM-DD HH:mm:ss', val)\n                                                                    // const configRes = await this.$sharedFns.getConfigData({ paramsKey: 'accountDay' });\n                                                                    receiveFormModel.qReceive.orderDate = getAccountMonth(globalConfig.accountDay, val)\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('receive');\n                                                                    receiveFormModel.qReceive.orderCode = orderCode\n\n                                                                  }"
                                                                },
                                                                "onDisabledDate": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "function onDisabledDate(date) {\n\n                                                                    if (this.$dataModels.receiveFormModel.qReceive.serviceType > 0) {\n                                                                      return false\n                                                                    } else {\n                                                                      if (date > new Date()) {\n                                                                        return true\n                                                                      }\n                                                                    }\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_datePicker_lrt8ic5d",
                                                              "__description": "请选择日期",
                                                              "__nodeStyle": {
                                                                "width": "100%"
                                                              }
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic5c",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic4r",
                                                      "__description": "入库时间"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic4q",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic40",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic43",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic4s",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic4t",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "原单据编号",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic5e",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lrt8ic5f",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "receiveFormModel.qReceive.originalOrderCode",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lrt8ic5f",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic5e",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic4t",
                                                      "__description": "原单据编号"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic4s",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic43",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic46",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic4u",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic4v",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "供应方式",
                                                        "prop": "purchaseMethod",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic5o",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "dictionarySelect",
                                                            "elementOptions": {
                                                              "__nodeId": "dictionarySelect_lrt8ic5p",
                                                              "__nodeName": "dictionarySelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    if (!query.id) {\n                                                                      const { orgId} = this.$globalVars.$context\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: '',\n                                                                        // orgId: orgId\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: this.$dataModels.receiveFormModel.qReceive.purchaseMethod\n                                                                      }\n                                                                    }\n\n\n                                                                  }"
                                                                },
                                                                "onSelectionChange": {
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item,props){\n                                                                    this.$dataModels.receiveFormModel.qReceive.purchaseMethodFullName = item.fullName\n                                                                    this.$dataModels.receiveFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                                      t.purchaseMethodFullName = item.fullName\n                                                                      t.purchaseMethod = item.name\n                                                                      // if (item.name == '甲供') {\n                                                                      //   t.taxRate = null\n                                                                      //   t.taxFreePrice = null\n                                                                      //   t.taxIncludedPrice = null\n                                                                      // }\n                                                                    })\n                                                                    // if (item.name == '甲供') {\n                                                                    //    const columns = this.$exposeds.get('tableEdit_lru2vhub').model.elementOption.value.columnConfigs\n                                                                    //    columns.forEach(t => {\n                                                                    //       if (['taxRate', 'taxFreePrice', 'priceType','taxIncludedPrice'].includes(t.dataKey)) {\n                                                                    //         //  t.display = false\n                                                                    //         t.hidden=true\n                                                                    //       }\n                                                                    //   })\n                                                                    //\n                                                                    //   this.$exposeds.get('tableEdit_lru2vhub').model.elementOption.value= {\n                                                                    //     columnConfigs: columns,\n                                                                    //     isDeep: true\n                                                                    //   }\n                                                                    // }\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(props){\n                                                                    this.$dataModels.receiveFormModel.qReceive.purchaseMethodFullName = ''\n                                                                    this.$dataModels.receiveFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                                      t.purchaseMethodFullName = ''\n                                                                      t.purchaseMethod = ''\n                                                                    })\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 20,
                                                                "defaultProps": {
                                                                  "label": "name",
                                                                  "subLabel": "fullName",
                                                                  "value": "name"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "size": "default",
                                                                "code": "PurchaseMethod",
                                                                "orgId": 0,
                                                                "isLeaf": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": "receiveFormModel.qReceive.purchaseMethod"
                                                              },
                                                              "__nodeKey": "nodeKey_dictionarySelect_lrt8ic5p",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic5o",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic4v",
                                                      "__description": "供应方式"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic4u",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic46",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic49",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic4w",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic4x",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "供应单位",
                                                        "prop": "supplierId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic5q",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "basisCommonSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "basisCommonSelect_lrt8ic5r",
                                                              "__nodeName": "basisCommonSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    const { lastProject } = this.$globalVars.$context\n                                                                    if (!query.id) {\n                                                                      receiveFormModel.qReceive.supplierName = ''\n                                                                      receiveFormModel.qReceive.supplierId = null\n                                                                      receiveFormModel.qReceive.oriSupplierId = ''\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        defaultText: '',\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId }\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        // disabled: true,\n                                                                        defaultText: receiveFormModel.qReceive.supplierName,\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId }\n                                                                      };\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onSelectionChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnSelectionChange(item){\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.supplierName\n                                                                    }\n                                                                    receiveFormModel.qReceive.supplierName = item.supplierName\n                                                                    receiveFormModel.qReceive.supplierId = item.id\n                                                                    receiveFormModel.qReceive.oriSupplierId = item.oriSupplierId\n                                                                    receiveFormModel.qReceive.settlementName = ''\n                                                                    receiveFormModel.qReceive.settlementId = 0\n                                                                    this.$sharedFns.setNodeOptions([\n                                                                      ['searchSelect_ltb89pbx','defaultText',''],\n                                                                      ['searchSelect_ltb89pbx', 'disabled',true],\n                                                                    ]);\n\n                                                                    if (item.id) {\n                                                                      const { lastProject } = this.$globalVars.$context\n                                                                      //结算单位\n                                                                      // this.$exposeds.get('basisCommonSelect_lrt8ic5t').model.elementOption.value = {\n                                                                      //   disabled: false,\n                                                                      //   defaultText: '',\n                                                                      //   orgId: lastProject.id,\n                                                                      //   parameter: {\n                                                                      //     orgId: this.$globalVars.$context.orgId,\n                                                                      //     queryDataJson: {\n                                                                      //       supplierId: receiveFormModel.qReceive.supplierId\n                                                                      //     }\n                                                                      //   }\n                                                                      // };\n\n\n                                                                      this.$exposeds.get('searchSelect_ltb89pbx').model.elementOption.value = {\n                                                                        disabled: false\n                                                                      };\n                                                                      //\n                                                                      this.$exposeds.get('searchSelect_ltb89pbx').methods.reload();\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnClear(){\n                                                                    const { receiveFormModel} = this.$dataModels\n                                                                    receiveFormModel.qReceive.supplierId = receiveFormModel.qReceive.settlementId = null\n                                                                    receiveFormModel.qReceive.supplierName = receiveFormModel.qReceive.oriSupplierId =  receiveFormModel.qReceive.settlementName = ''\n                                                                    // this.$exposeds.get('basisCommonSelect_lrt8ic5t').model.elementOption.value = {\n                                                                    // \tdefaultText: null,\n                                                                    // \tdisabled: true\n                                                                    // };\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    };\n                                                                    // 重置结算单位信息\n                                                                    receiveFormModel.qReceive.settlementName = ''\n                                                                    receiveFormModel.qReceive.settlementId = 0\n                                                                    this.$sharedFns.setNodeOptions([\n                                                                      ['searchSelect_ltb89pbx', 'defaultText', ''],\n                                                                      ['searchSelect_ltb89pbx', 'disabled', true],\n                                                                    ]);\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 10,
                                                                "defaultProps": {
                                                                  "label": "supplierName",
                                                                  "subLabel": "supplierOrgCode",
                                                                  "value": "id"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "parameter": {
                                                                  "url": "/shared-data/c-suppliers-valid-params",
                                                                  "basisDataType": "supplier",
                                                                  "orgId": 0,
                                                                  "fieldName": "supplierName",
                                                                  "condtionItems": [],
                                                                  "queryDataJson": {}
                                                                },
                                                                "addButton": false,
                                                                "downloadIcon": true,
                                                                "size": "default",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": "receiveFormModel.qReceive.supplierId"
                                                              },
                                                              "__nodeKey": "nodeKey_basisCommonSelect_lrt8ic5r",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic5q",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic4x",
                                                      "__description": "供应单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic4w",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic49",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrvy0neg",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": false,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lsvikxak",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lsvikxal",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "供应单位",
                                                        "prop": "supplierId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrvy0nel",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchTreeSelect_lrvy0nem",
                                                              "__nodeName": "searchTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "moreEnable": true,
                                                                "reloadEnable": true,
                                                                "defaultProps": {
                                                                  "label": "shortName",
                                                                  "value": "id"
                                                                },
                                                                "currentSize": 20,
                                                                "modelName": "receiveFormModel.qReceive.supplierId",
                                                                "defaultText": "",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "clearable": true
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { receiveFormModel, treeListCopy } = this.$dataModels\n                                                                    if (query.id) {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText:receiveFormModel.qReceive.supplierName,\n                                                                        disabled: true,\n                                                                        rootNode: { name:'',id:null}\n                                                                      }\n                                                                    } else {\n                                                                      receiveFormModel.qReceive.supplierName = ''\n                                                                      receiveFormModel.qReceive.supplierId = null\n                                                                      receiveFormModel.qReceive.oriSupplierId = ''\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: '',\n                                                                        disabled: false,\n                                                                        rootNode: { name: '', id: null }\n                                                                      }\n                                                                    }\n\n                                                                    // this.$currentInstance.exposed.methods.reload();\n\n                                                                    // Object.assign(treeListCopy.singleTable, { serviceName: 'node-mb2-shared-data-service', path: '/shared-data/g-childs-org-filter-out-production', parentId: -1 })\n                                                                    //\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item) {\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.shortName\n                                                                    }\n                                                                    receiveFormModel.qReceive.supplierName = item.shortName\n                                                                    receiveFormModel.qReceive.supplierId = item.id\n                                                                    receiveFormModel.qReceive.oriSupplierId = ''\n\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item) {\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    }\n                                                                    receiveFormModel.qReceive.supplierName = ''\n                                                                    receiveFormModel.qReceive.supplierId = null\n                                                                    receiveFormModel.qReceive.oriSupplierId = ''\n\n                                                                  }"
                                                                },
                                                                "onLoadData": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnLoadData(params,resolve){\n\n                                                                    let parentId = -1\n                                                                    // let parentId = 10001\n                                                                    let { limit, offset } = params\n\n                                                                    if (params.parentId) {\n                                                                      parentId = params.parentId\n                                                                    }\n                                                                    // const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?serviceName=node-mb2-shared-data-service&path=/shared-data/g-childs-org-filter-out-production&parentId=${parentId}&limit=${limit}&offset=${offset}`, {})\n                                                                    const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?parentId=${parentId}&limit=${limit}&offset=${offset}&serviceName=node-mi-external-service&path=/organizations-parent`,{})\n\n                                                                    resolve(result)\n                                                                  }"
                                                                },
                                                                "onReload": {
                                                                  "type": "system",
                                                                  "isOn": false,
                                                                  "fn": "async function fnName(){\n\n                                                                    console.log('reload----');\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchTreeSelect_lrvy0nem",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_elementRender_lrvy0nel",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lsvikxal",
                                                      "__description": "供应单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lsvikxak",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrvy0neg",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrx82mxn",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": false,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrx82mxo",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrycwdi6",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "供应单位",
                                                        "prop": "supplierId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrycwdi7",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchSelect_lrycwdi8",
                                                              "__nodeName": "searchSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "modelName": "receiveFormModel.qReceive.supplierId",
                                                                "defaultText": "",
                                                                "size": "default",
                                                                "disabled": false,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "defaultProps": {
                                                                  "label": "supplierName",
                                                                  "value": "supplierId"
                                                                },
                                                                "limit": 10,
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "searchEnable": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "clearable": true,
                                                                "filterName": "supplierName",
                                                                "requestFn": "queryReturnSuppliers"
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    if (query.id) {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText:receiveFormModel.qReceive.supplierName,\n                                                                        disabled: true\n                                                                      }\n                                                                    } else {\n                                                                      receiveFormModel.qReceive.supplierName = ''\n                                                                      receiveFormModel.qReceive.supplierId = null\n                                                                      receiveFormModel.qReceive.oriSupplierId = ''\n                                                                    }\n                                                                    this.$exposeds.get('searchSelect_lrycwdi8').methods.reload();\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item){\n                                                                    this.$dataModels.receiveFormModel.qReceive.supplierName = item.supplierName\n                                                                    this.$dataModels.receiveFormModel.qReceive.supplierId = item.supplierId\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.supplierName\n                                                                    };\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(){\n                                                                    this.$dataModels.receiveFormModel.qReceive.supplierName = ''\n                                                                    this.$dataModels.receiveFormModel.qReceive.supplierId = 0\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    };\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchSelect_lrycwdi8",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrycwdi7",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrycwdi6",
                                                      "__description": "供应单位(退)"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrx82mxo",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrx82mxn",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic4c",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic5g",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic5h",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "结算单位",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ltb89pbw",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchSelect_ltb89pbx",
                                                              "__nodeName": "searchSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "modelName": "receiveFormModel.qReceive.settlementId",
                                                                "defaultText": "",
                                                                "size": "default",
                                                                "disabled": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "defaultProps": {
                                                                  "label": "supplierName",
                                                                  "value": "id"
                                                                },
                                                                "limit": 10,
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "searchEnable": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "filterName": "supplierName",
                                                                "clearable": true
                                                              },
                                                              "__nodeEvent": {
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnClear() {\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    receiveFormModel.qReceive.settlementId = null\n                                                                    receiveFormModel.qReceive.settlementName = ''\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnSelectionChange(item) {\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.supplierName\n                                                                    }\n                                                                    receiveFormModel.qReceive.settlementName = item.supplierName\n                                                                    receiveFormModel.qReceive.settlementId = item.id\n                                                                  }"
                                                                },
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { receiveFormModel } = this.$dataModels\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    if (!query.id) {\n                                                                      const { lastProject } = this.$globalVars.$context\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: true,\n                                                                        defaultText: '',\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        defaultText: receiveFormModel.qReceive.settlementName\n                                                                      }\n                                                                      this.$currentInstance.exposed.methods.reload();\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onLoadData": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(params, filter, resolve){\n\n                                                                    const { lastProject } = this.$globalVars.$context\n                                                                    const {  supplierId} = this.$dataModels.receiveFormModel.qReceive\n                                                                    const res = await this.$requestFns.queryThirdSuppliers({\n                                                                      supplierName: filter,\n                                                                      orgId: lastProject.id ,\n                                                                      supplierId\n                                                                    });\n                                                                    resolve(res.data.rows)\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchSelect_ltb89pbx",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ltb89pbw",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic5h",
                                                      "__description": "结算单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic5g",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic4c",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic4f",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic5i",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic5j",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "车牌号码",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic5u",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lrt8ic5v",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "receiveFormModel.qReceive.plateNumber",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lrt8ic5v",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic5u",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic5j",
                                                      "__description": "车牌号码"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic5i",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic4f",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lrt8ic4i",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lrt8ic5k",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lrt8ic5l",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "税率",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lrt8ic5w",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "dictionarySelect",
                                                            "elementOptions": {
                                                              "__nodeId": "dictionarySelect_lrt8ic5x",
                                                              "__nodeName": "dictionarySelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onSelectionChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item,props){\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    receiveFormModel.qReceive.taxRate = item.name ? Number(item.name.replace('%', '')) : 0\n\n                                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                                    if (receiveFormModel.qReceiveMoreMaterials.length > 0) {\n                                                                      this.$vueGlobal.$confirm('修改税率是否需要更新已选材税率，如果无需更新已选材税率，点击取消即可。','提示',{\n                                                                        type: 'warning',\n                                                                        confirmButtonText: '确定',\n                                                                        cancelButtonText: '取消',\n                                                                        showConfirmButton: true,\n                                                                        showCancelButton: true,\n                                                                        showClose: true,\n                                                                      }).then(() => {\n                                                                        receiveFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                                          t.taxRate = item.name ? Number(item.name.replace('%','')) : 0\n                                                                          debugger\n                                                                          if (t.taxFreePrice && !t.taxIncludedPrice && t.taxRate) {\n                                                                            t.taxIncludedPrice = Number(new Decimal(t.taxIncludedPrice).mul(1 + (t.taxRate * 0.01)).toFixed(priceSettings))\n\n                                                                          }\n                                                                          if (t.taxIncludedPrice && t.taxRate) {\n                                                                            debugger\n                                                                            t.taxFreePrice = Number(new Decimal(t.taxIncludedPrice).div(1 + (t.taxRate * 0.01)).toFixed(priceSettings))\n                                                                          }\n\n                                                                          if (!t.taxRate && t.taxFreePrice){\n                                                                            t.taxIncludedPrice = t.taxFreePrice\n                                                                          }\n                                                                          if (!t.taxRate && t.taxIncludedPrice) {\n                                                                            t.taxFreePrice = t.taxIncludedPrice\n                                                                          }\n                                                                          if (t.netQuantity){\n                                                                            t.taxIncludedSum = Number(new Decimal(t.taxIncludedPrice).mul(t.netQuantity).toFixed(priceSettings))\n                                                                            t.taxFreeSum = Number((t.taxFreePrice * t.netQuantity).toFixed(priceSettings))\n                                                                          }\n                                                                        })\n                                                                      })\n                                                                        .catch(() => {\n\n                                                                        })\n\n\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onMounted": {
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: '13%'\n                                                                    };\n                                                                    const { receiveFormModel } = this.$dataModels\n                                                                    receiveFormModel.qReceive.taxRate = 13\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 20,
                                                                "defaultProps": {
                                                                  "label": "name",
                                                                  "value": "name"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": false,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "size": "default",
                                                                "code": "taxRate",
                                                                "orgId": 0,
                                                                "isLeaf": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": ""
                                                              },
                                                              "__nodeKey": "nodeKey_dictionarySelect_lrt8ic5x",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lrt8ic5w",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lrt8ic5l",
                                                      "__description": "税率"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lrt8ic5k",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrt8ic4i",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ltcx6zc5",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ltcx6zc6",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ltcx6zc7",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "运费(元)",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ltfln9n7",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_ltfln9n8",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "receiveFormModel.qReceive.freight",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onBlur": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnInputBlur(){\n                                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                                    if (isNaN(parseInt(this.$dataModels.receiveFormModel.qReceive.freight))){\n                                                                      this.$dataModels.receiveFormModel.qReceive.freight = 0\n                                                                      return\n                                                                    }\n                                                                    this.$dataModels.receiveFormModel.qReceive.freight = parseFloat(this.$dataModels.receiveFormModel.qReceive.freight)\n\n                                                                    this.$dataModels.receiveFormModel.qReceive.freight = Number(new Decimal(this.$dataModels.receiveFormModel.qReceive.freight ).toFixed(priceSettings))\n\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_input_ltfln9n8",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ltfln9n7",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ltcx6zc7",
                                                      "__description": "运费"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ltcx6zc6",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ltcx6zc5",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ltl81akg",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ltl81akh",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ltl81aki",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "批号设置",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ltl81akj",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_ltl81akk",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "receiveFormModel.qReceive.batchNo",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onBlur": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnInputBlur(){\n                                                                    const { receiveFormModel} = this.$dataModels\n                                                                    if (receiveFormModel.qReceiveMoreMaterials.length > 0 ) {\n                                                                      if (receiveFormModel.qReceive.batchNo.length > 0) {\n                                                                        this.$vueGlobal.$confirm('修改批号是否需要更新已选材炉批号，如果无需更新已选材炉批号，点击取消即可。', '提示', {\n                                                                          type: 'warning',\n                                                                          confirmButtonText: '确定',\n                                                                          cancelButtonText: '取消',\n                                                                          showConfirmButton: true,\n                                                                          showCancelButton: true,\n                                                                          showClose: true,\n                                                                        }).then(() => {\n                                                                          receiveFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                                            t.batchNo = receiveFormModel.qReceive.batchNo\n                                                                          })\n                                                                        })\n                                                                          .catch(() => {\n\n                                                                          })\n\n                                                                      }\n\n\n                                                                    }\n\n\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_input_ltl81akk",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ltl81akj",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ltl81aki",
                                                      "__description": "批号设置"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ltl81akh",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ltl81akg",
                                              "__description": ""
                                            }
                                          ],
                                          "defaultExpand": false,
                                          "divider": false,
                                          "title": "更多信息"
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lrt8ic3r",
                                        "__description": ""
                                      },
                                      {
                                        "__nodeId": "gridBox_lryqkb3h",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lryqkb3k",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryqkb3l",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryqkb3m",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "单据备注",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryqkb3n",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lryqkb3o",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "textarea",
                                                                "placeholder": "请输入",
                                                                "modelName": "receiveFormModel.qReceive.remark",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "rows": 2
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lryqkb3o",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryqkb3n",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryqkb3m",
                                                      "__description": "单据备注"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryqkb3l",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryqkb3k",
                                              "__description": ""
                                            }
                                          ],
                                          "display": true,
                                          "permissionSetting": "",
                                          "divider": true,
                                          "title": "更多信息",
                                          "disableFold": false,
                                          "contentPosition": "left",
                                          "defaultExpand": false
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lryqkb3h",
                                        "__description": ""
                                      }
                                    ],
                                    "validateOnRuleChange": false
                                  },
                                  "__nodeKey": "nodeKey_form_lrt8ic3q",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrt8ic3k",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrt8ic3l",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "20%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [
                                  "left"
                                ],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [
                                  {
                                    "__nodeId": "elementRender_lrt8ic3m",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "rawHtml",
                                      "elementOptions": {
                                        "__nodeId": "rawHtml_lrt8ic3n",
                                        "__nodeName": "rawHtml",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "content": "<span style=\"color:var(--el-color-danger);\">No.</span>",
                                          "display": true,
                                          "permissionSetting": "",
                                          "modelName": ""
                                        },
                                        "__nodeEvent": {},
                                        "__nodeKey": "nodeKey_rawHtml_lrt8ic3n",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lrt8ic3m",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lrt8ic3o",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "rawHtml",
                                      "elementOptions": {
                                        "__nodeId": "rawHtml_lrt8ic3p",
                                        "__nodeName": "rawHtml",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "content": "<span style=\"\">rawTxt渲染文本</span>",
                                          "display": true,
                                          "permissionSetting": "",
                                          "modelName": "receiveFormModel.qReceive.orderCode"
                                        },
                                        "__nodeEvent": {},
                                        "__nodeKey": "nodeKey_rawHtml_lrt8ic3p",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lrt8ic3o",
                                    "__description": ""
                                  }
                                ],
                                "rightSlot": [
                                  {
                                    "__nodeId": "elementRender_luaj1zmx",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "tag",
                                      "elementOptions": {
                                        "__nodeId": "tag_luaj1zmy",
                                        "__nodeName": "tag",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "content": "材料信息+单价+生产厂商+炉批号+存放地+物资备注对账时作为材料合并规则，请谨慎填写",
                                          "closable": false,
                                          "hit": false,
                                          "round": false,
                                          "effect": "light",
                                          "display": true,
                                          "permissionSetting": "",
                                          "type": "success",
                                          "size": "default"
                                        },
                                        "__nodeEvent": {},
                                        "__nodeKey": "nodeKey_tag_luaj1zmy",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_luaj1zmx",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lru2vi0c",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lru2vi0d",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "常用库",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              const { receiveConfig,receiveFormModel} = this.$dataModels\n\n                                              const { fullId } = this.$globalVars.$context\n\n                                              const res = await this.$requestFns.queryReceiveConfig({ fullId: fullId });\n                                              if (res.data) {\n                                                Object.assign(receiveConfig.singleTable, res.data.data)\n                                              }\n                                              const {\n                                                contractReceive, // 合同验收是否勾选\n                                                contractReceiveControl,\n                                                planReceive, // 总控验收是否勾选\n                                                planReceiveControl // 强卡还是若卡\n                                              } = receiveConfig.singleTable\n                                              if (contractReceive && !receiveFormModel.qReceive.supplierId) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: '因开启了合同卡验收，请先选择供应单位'\n                                                })\n                                                return\n                                              }\n                                              this.$exposeds.get('dialog_lrulovzs').model.dialogShow.value = true\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lru2vi0d",
                                        "__description": "常用材料库"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lru2vi0c",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lru2vi0e",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lru2vi0f",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "采购计划",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              const { receiveConfig, receiveFormModel } = this.$dataModels\n                                              debugger\n                                              const { fullId } = this.$globalVars.$context\n\n                                              const res = await this.$requestFns.queryReceiveConfig({ fullId: fullId });\n                                              if (res.data) {\n                                                Object.assign(receiveConfig.singleTable, res.data.data)\n                                              }\n                                              const {\n                                                contractReceive, // 合同验收是否勾选\n                                                contractReceiveControl,\n                                                planReceive, // 总控验收是否勾选\n                                                planReceiveControl // 强卡还是若卡\n                                              } = receiveConfig.singleTable\n                                              if (contractReceive && !receiveFormModel.qReceive.supplierId) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: '因开启了合同卡验收，请先选择供应单位'\n                                                })\n                                                return\n                                              }\n                                              this.$exposeds.get('dialog_lrvsj0ao').model.dialogShow.value = true\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lru2vi0f",
                                        "__description": "采购计划",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lru2vi0e",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lr924zdi",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lr924zdj",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "采购合同",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName() {\n                                              const { receiveConfig, receiveFormModel } = this.$dataModels\n                                              const { fullId } = this.$globalVars.$context\n\n                                              const res = await this.$requestFns.queryReceiveConfig({ fullId: fullId });\n                                              if (res.data) {\n                                                Object.assign(receiveConfig.singleTable, res.data.data)\n                                              }\n                                              const {\n                                                contractReceive, // 合同验收是否勾选\n                                                contractReceiveControl,\n                                                planReceive, // 总控验收是否勾选\n                                                planReceiveControl // 强卡还是若卡\n                                              } = receiveConfig.singleTable\n                                              if (contractReceive && !receiveFormModel.qReceive.supplierId) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: '因开启了合同卡验收，请先选择供应单位'\n                                                })\n                                                return\n                                              }\n                                              this.$dataModels.receiveFormModel.materialItems = [];\n                                              this.$exposeds.get('dialog_lr92jvpi').model.dialogShow.value = true;\n\n\n\n                                            }"
                                          },
                                          "onMounted": {
                                            "isOn": true,
                                            "fn": "async function onMountedFn(){\n                                              this.$currentInstance.exposed.model.elementOption.value = {\n                                                display: this.$dataModels.globalConfig.singleTable.mq2ReceiveMaterialPurchaseContract\n                                              };\n\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lr924zdj",
                                        "__description": "直采购合同",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lr924zdi",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lr63laaa",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lr63laab",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "总控计划",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              const { receiveConfig, receiveFormModel } = this.$dataModels\n                                              const { fullId } = this.$globalVars.$context\n\n                                              const res = await this.$requestFns.queryReceiveConfig({ fullId: fullId });\n                                              if (res.data) {\n                                                Object.assign(receiveConfig.singleTable, res.data.data)\n                                              }\n                                              const {\n                                                contractReceive, // 合同验收是否勾选\n                                                contractReceiveControl,\n                                                planReceive, // 总控验收是否勾选\n                                                planReceiveControl // 强卡还是若卡\n                                              } = receiveConfig.singleTable\n                                              if (contractReceive && !receiveFormModel.qReceive.supplierId) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: '因开启了合同卡验收，请先选择供应单位'\n                                                })\n                                                return\n                                              }\n                                              this.$dataModels.receiveFormModel.materialItems = [];\n                                              this.$exposeds.get('dialog_lr63lbx1').model.dialogShow.value = true;\n                                              // this.$exposeds.get('tableReport_lr73d5h8').model.selectRows.value = []\n\n                                            }"
                                          },
                                          "onMounted": {
                                            "isOn": false,
                                            "fn": "async function onMountedFn(){\n                                              // 屏蔽总控计划选材\n                                              console.log(this.$dataModels.globalConfig.singleTable.mq2ReceiveMaterialGhPlan);\n\n                                              const flag = this.$dataModels.receiveFormModel.qReceive.serviceType > 0 ? true : false\n                                              this.$currentInstance.exposed.model.elementOption.value = {\n                                                display: flag && this.$dataModels.globalConfig.singleTable.mq2ReceiveMaterialGhPlan\n                                              };\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lr63laab",
                                        "__description": "总控计划",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lr63laaa",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lru2vi0g",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lru2vi0h",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "选材",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              const { receiveFormModel, inventoryFilterModel } = this.$dataModels\n                                              const { orgId, supplierId, exitTime,serviceType  } = receiveFormModel.qReceive\n                                              if (!supplierId) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: '请先选择供应单位'\n                                                })\n                                                return\n\n                                              }\n                                              if (!exitTime) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: '请先选择退货时间'\n                                                })\n                                                return\n                                              }\n                                              inventoryFilterModel.returnReceive.supplierId = supplierId\n                                              inventoryFilterModel.returnReceive.orgId = orgId\n                                              inventoryFilterModel.returnReceive.exitTime = exitTime\n                                              inventoryFilterModel.returnReceive.serviceType=Math.abs(serviceType)>=20? 20 : 10\n                                              this.$exposeds.get('dialog_lrx5ijry').model.dialogShow.value = true\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lru2vi0h",
                                        "__description": "库存选材"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lru2vi0g",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lru2vi0i",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lru2vi0j",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": false,
                                          "content": "保存",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common baocun"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              this.$currentInstance.exposed.model.elementOption.value = { \tloading: true };\n                                              const { userName } = this.$globalVars.$context\n                                              const { formatDate } = this.$utils\n                                              const { receiveFormModel, orderCodeCondtion, currentReceiveRow } = this.$dataModels\n                                              console.log(receiveFormModel.qReceiveMoreMaterials);\n                                              debugger\n                                              // 校验表单\n                                              const validRes = await this.$exposeds.get('form_lrt8ic3q').methods.validateForm();\n                                              if (!validRes) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { \tloading: false };\n                                                return\n                                              }\n                                              //校验照片\n                                              const checkPhotos = await this.$sharedFns.validPhotosData('receive');\n                                              if (!checkPhotos) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              // 校验材料信息\n                                              const checkMaterials = await this.$sharedFns.checkMaterials('receive');\n                                              if (!checkMaterials) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              let isBreak = false\n                                              if (receiveFormModel.qReceive.serviceType > 0) {\n                                                // 验收业务卡控逻辑\n                                                Object.assign(currentReceiveRow.singleTable, receiveFormModel.qReceive)\n                                                isBreak = await this.$sharedFns.receiveControl();\n                                              }\n                                              if (isBreak) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              if (receiveFormModel.qReceive.serviceType > 0) {\n                                                this.$exposeds.get('button_lru2vi0d').model.elementOption.value = { disabled: true }; // 选材按钮禁用\n                                                this.$exposeds.get('button_lru2vi0f').model.elementOption.value = { disabled: true }; // 选材按钮禁用\n                                              } else {\n                                                this.$exposeds.get('button_lru2vi0h').model.elementOption.value = { disabled: true }; // 选材按钮禁用\n                                              }\n                                              receiveFormModel.orderCodeCondtion = orderCodeCondtion.singleTable\n                                              receiveFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                t.purchaseMethodFullName = receiveFormModel.qReceive.purchaseMethodFullName\n                                                t.purchaseMethod = receiveFormModel.qReceive.purchaseMethod\n                                                t.serviceType = receiveFormModel.qReceive.serviceType\n                                                t.orderType = receiveFormModel.qReceive.orderType\n                                                if (receiveFormModel.qReceive.serviceTye < 0) {\n                                                }\n                                              })\n                                              console.log(receiveFormModel.qReceiveMoreMaterials);\n                                              debugger\n                                              receiveFormModel.qReceivePhotos = receiveFormModel.qReceivePhotos.reduce((arr, p) => {\n                                                arr.push(...p.photoList)\n                                                return arr\n                                              }, [])\n                                              let saveRes = false\n                                              let auditRes = false\n                                              // 保存\n                                              if (!receiveFormModel.qReceive.id) {\n                                                // 添加\n                                                receiveFormModel.qReceive.maker = userName\n                                                receiveFormModel.qReceive.makerDate = formatDate('YYYY-MM-DD',new Date())\n                                                saveRes = await this.$requestFns.saveReceiveOrder({});\n                                              } else {\n                                                // 修改\n                                                saveRes = await this.$requestFns.updateReceiveOrder({});\n                                              }\n                                              if (!saveRes.data.success) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: saveRes.data.message\n                                                })\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                if (receiveFormModel.qReceive.serviceType > 0) {\n                                                  this.$exposeds.get('button_lru2vi0d').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                                  this.$exposeds.get('button_lru2vi0f').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                                } else {\n                                                  this.$exposeds.get('button_lru2vi0h').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                                }\n                                                return\n                                              }\n                                              // 提交\n                                              if (saveRes.data.success) {\n                                                auditRes =  await this.$requestFns.auditReceveOrder({\n                                                  id: saveRes.data.qReceive.id,\n                                                  orgId: saveRes.data.qReceive.orgId,\n                                                  userName\n                                                });\n                                              }\n                                              if (auditRes.data == 0 || auditRes.data.success) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'success',\n                                                  message: '单据保存并提交成功'\n                                                })\n                                              } else {\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: auditRes.data.message\n                                                })\n                                              }\n                                              this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                              if (receiveFormModel.qReceive.serviceType > 0) {\n                                                this.$exposeds.get('button_lru2vi0d').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                                this.$exposeds.get('button_lru2vi0f').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                              } else {\n                                                this.$exposeds.get('button_lru2vi0h').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                              }\n                                              currentReceiveRow.singleTable = {}\n                                              this.$globalVars.$router.push({\n                                                name: 'master',\n                                                query: {}\n                                              })\n                                            }"
                                          },
                                          "": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              this.$currentInstance.exposed.model.elementOption.value = { \tloading: true };\n                                              const { userName } = this.$globalVars.$context\n                                              const { formatDate } = this.$utils\n                                              const { receiveFormModel, orderCodeCondtion } = this.$dataModels\n                                              if (receiveFormModel.qReceive.serviceType>0) {\n                                                this.$exposeds.get('button_lru2vi0d').model.elementOption.value = { disabled: true}; // 选材按钮禁用\n                                                this.$exposeds.get('button_lru2vi0f').model.elementOption.value = { disabled: true }; // 选材按钮禁用\n                                              } else {\n                                                this.$exposeds.get('button_lru2vi0h').model.elementOption.value = { disabled: true }; // 选材按钮禁用\n                                              }\n                                              // 校验表单\n                                              const validRes = this.$exposeds.get('form_lrt8ic3q').methods.validateForm();\n                                              if (!validRes) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { \tloading: false };\n                                              }\n                                              //校验照\n                                              const checkPhotos = await this.$sharedFns.validPhotosData('receive');\n\n                                              if (!checkPhotos) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              // 校验材料信息\n                                              const checkMaterials = await this.$sharedFns.checkMaterials('receive');\n                                              if (!checkMaterials) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              let isBreak = false\n                                              if (receiveFormModel.qReceive.serviceType > 0) {\n                                                // 验收业务卡控逻辑\n                                                isBreak = await this.$sharedFns.receiveControl();\n                                              }\n                                              if (isBreak) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              receiveFormModel.orderCodeCondtion = orderCodeCondtion.singleTable\n                                              receiveFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                t.purchaseMethodFullName = receiveFormModel.qReceive.purchaseMethodFullName\n                                                t.purchaseMethod = receiveFormModel.qReceive.purchaseMethod\n                                                t.serviceType = receiveFormModel.qReceive.serviceType\n                                                t.orderType = receiveFormModel.qReceive.orderType\n                                                if (receiveFormModel.qReceive.serviceTye < 0) {\n\n                                                }\n                                              })\n                                              let saveRes = false\n                                              let auditRes = false\n\n                                              // 保存\n                                              if (!receiveFormModel.qReceive.id) {\n                                                // 添加\n                                                receiveFormModel.qReceive.maker = userName\n                                                receiveFormModel.qReceive.makerDate = formatDate('YYYY-MM-DD',new Date())\n                                                saveRes = await this.$requestFns.saveReceiveOrder({});\n                                              } else {\n                                                // 修改\n                                                saveRes = await this.$requestFns.updateReceiveOrder({});\n                                              }\n                                              if (!saveRes.data.success) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: saveRes.data.message\n                                                })\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              // 提交\n                                              if (saveRes.data.success) {\n                                                auditRes =  await this.$requestFns.auditReceveOrder({\n                                                  id: saveRes.data.qReceive.id,\n                                                  orgId: saveRes.data.qReceive.orgId,\n                                                  userName\n                                                });\n                                              }\n                                              if (auditRes.data == 0 || auditRes.data.success) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'success',\n                                                  message: '单据保存并提交成功'\n                                                })\n                                              } else {\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: auditRes.data.message\n                                                })\n                                              }\n                                              this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                              if (receiveFormModel.qReceive.serviceType > 0) {\n                                                this.$exposeds.get('button_lru2vi0d').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                                this.$exposeds.get('button_lru2vi0f').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                              } else {\n                                                this.$exposeds.get('button_lru2vi0h').model.elementOption.value = { disabled: false }; // 选材按钮禁用\n                                              }\n                                              this.$globalVars.$router.push({\n                                                name: 'master',\n                                                query: {}\n                                              })\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lru2vi0j",
                                        "__description": "保存",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lru2vi0i",
                                    "__description": ""
                                  }
                                ],
                                "display": true,
                                "permissionSetting": "",
                                "rightSpaceSize": 0
                              },
                              "__nodeKey": "nodeKey_flexLine_lrt8ic3l",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrt8ic3j",
                          "__description": "",
                          "__nodeEvent": {
                            "onMounted": {
                              "type": "system",
                              "isOn": true,
                              "fn": "async function onMountedFn(){\n                                this.$sharedFns.resetEditPageBtnState('receive');\n                              }"
                            }
                          }
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrt8ic26",
                      "__description": ""
                    },
                    "clearPadding": [
                      "bottom"
                    ]
                  },
                  {
                    "tag": "item-2",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "400px",
                    "paddingSize": "large",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrt8ic27",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrt8ic2c",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "物资明细",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrt8ic2d",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableEdit",
                                "elementOptions": {
                                  "__nodeId": "tableEdit_lru2vhub",
                                  "__nodeName": "tableEdit",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "modelName": "receiveFormModel.qReceiveMoreMaterials",
                                    "columnConfigs": [
                                      {
                                        "dataKey": "rowIndex",
                                        "title": "序号",
                                        "align": "center",
                                        "width": 60,
                                        "fixed": "left",
                                        "id": "0_item_config_luaj1znj"
                                      },
                                      {
                                        "dataKey": "materialName",
                                        "title": "物资名称",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "1_item_config_luaj1znk"
                                      },
                                      {
                                        "dataKey": "materialModel",
                                        "title": "规格型号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "2_item_config_luaj1znl"
                                      },
                                      {
                                        "dataKey": "materialUnit",
                                        "title": "计量单位",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "3_item_config_luaj1znm"
                                      },
                                      {
                                        "dataKey": "roughQuantity",
                                        "title": "库存量",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": true,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "4_item_config_luaj1znn"
                                      },
                                      {
                                        "dataKey": "netQuantity",
                                        "title": "收料量",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhwh",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_lru2vhwg",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "netQuantity",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const quantitySettings = this.$dataModels.globalConfig.singleTable.quantitySettings || 4\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                    if (!Number(row.netQuantity) || row.netQuantity < 0) {\n                                                      row.netQuantity = 0\n                                                    } else {\n                                                      row.netQuantity = Number(Number(row.netQuantity).toFixed(quantitySettings || 2))\n                                                    }\n                                                    row.taxIncludedSum = Number(new Decimal(row.taxIncludedPrice).mul(row.netQuantity).toFixed(priceSettings))\n                                                    row.taxFreeSum = Number(new Decimal(row.taxFreePrice).mul(row.netQuantity).toFixed(priceSettings))\n\n\n                                                  }"
                                                },
                                                "onValueRender": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "function onValueRenderFn(row){\n\n                                                    //return\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_lru2vhwg",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhwh",
                                          "__description": ""
                                        },
                                        "id": "5_item_config_luaj1zno"
                                      },
                                      {
                                        "dataKey": "warnText",
                                        "title": "验收预警",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ltbed4pp",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "tag",
                                            "elementOptions": {
                                              "__nodeId": "tag_ltbed4po",
                                              "__nodeName": "tag",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "content": "标签",
                                                "closable": false,
                                                "hit": false,
                                                "round": false,
                                                "effect": "light",
                                                "display": true,
                                                "permissionSetting": "",
                                                "size": "small"
                                              },
                                              "__nodeEvent": {
                                                "onValueRender": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "function onValueRenderFn(row) {\n                                                    const { validText } = this.$dataModels\n                                                    console.log(row);\n                                                    if (!validText.materialIds.includes(row.materialId)) {\n                                                      return { content: '正常', type: 'success' }\n                                                    }\n                                                    let { netQuantity, allQuantity, calcPlanQuantity } = row\n                                                    netQuantity = (netQuantity - 0) || 0\n                                                    allQuantity = (allQuantity - 0) || 0\n                                                    calcPlanQuantity = (calcPlanQuantity - 0) || 0\n                                                    debugger\n                                                    let f = new Decimal(new Decimal(netQuantity || 0).add(new Decimal(allQuantity || 0)).toFixed(2)).gt(new Decimal(calcPlanQuantity || 0))\n                                                    if (f) {\n                                                      let rate = 0\n                                                      let more = Number(new Decimal(new Decimal(netQuantity || 0).add(new Decimal(allQuantity || 0)).sub(new Decimal(calcPlanQuantity))).toFixed(2))\n                                                      if (calcPlanQuantity == 0) {\n                                                        rate = 100\n                                                      } else {\n                                                        rate = Number((more / calcPlanQuantity * 100).toFixed(2))\n                                                      }\n                                                      return { content: `已超${validText.singleTable.validText}${rate}%`, type: 'danger' }\n                                                    }\n                                                    let f1 = new Decimal(netQuantity || 0).add(new Decimal(allQuantity || 0)).gte(new Decimal(row.calcPlanQuantity || 0).mul(0.8))\n                                                    const f2 = new Decimal(netQuantity || 0).add(new Decimal(allQuantity || 0)).lte(new Decimal(calcPlanQuantity))\n                                                    if (f1 && f2) {\n                                                      let rate = 0\n                                                      if (calcPlanQuantity == 0) {\n                                                        rate = 100\n                                                      } else {\n                                                        rate = Number(((netQuantity + allQuantity) / calcPlanQuantity * 100).toFixed(2))\n                                                      }\n                                                      return { content: `已达${validText.singleTable.validText}${rate}%`, type: 'warning' }\n                                                    }\n                                                    return { content: '正常', type: 'success' }\n\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_tag_ltbed4po",
                                              "__description": "标签"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ltbed4pp",
                                          "__description": ""
                                        },
                                        "id": "6_item_config_luaj1znp"
                                      },
                                      {
                                        "dataKey": "taxRate",
                                        "title": "税率(%)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 130,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhvl",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "select",
                                            "elementOptions": {
                                              "__nodeId": "select_lru2vhvk",
                                              "__nodeName": "select",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "multiple": false,
                                                "disabled": false,
                                                "size": "small",
                                                "clearable": false,
                                                "collapseTags": false,
                                                "collapseTagsTooltip": false,
                                                "multipleLimit": 0,
                                                "clearIcon": "CircleClose",
                                                "fitInputWidth": false,
                                                "filterable": false,
                                                "valueKey": "value",
                                                "placeholder": "请选择",
                                                "modelName": "taxRate",
                                                "itemData": [],
                                                "defaultProps": {
                                                  "label": "name",
                                                  "value": "value"
                                                },
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {
                                                "onMounted": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function onMountedFn(){\n\n                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                      defaultProps: {\"label\":\"name\",\"value\":\"value\"}\n                                                    };\n                                                    this.$currentInstance.exposed.model.itemData.value = this.$dataModels.dicData.taxRate\n\n                                                    if ([20,-21].includes(this.$dataModels.receiveFormModel.qReceive.serviceType)) {\n                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                        disabled: true\n                                                      };\n                                                    } else {\n                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                        disabled: false\n                                                      };\n                                                    }\n\n                                                  }"
                                                },
                                                "onChange": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(val,row){\n                                                    const { configData } = this.$dataModels\n                                                    const priceSettings = configData.priceDecimalDigit || 8\n                                                    if (!isNaN(parseFloat(row.taxFreePrice)) && (parseFloat(row.taxFreePrice) >= 0)) {\n                                                      row.taxIncludedPrice = Number(\n                                                        new Decimal(row.taxFreePrice * (parseFloat(val) / 100 + 1)).toFixed(priceSettings)\n                                                      )\n                                                    } else {\n                                                      if (!isNaN(parseFloat(row.taxIncludedPrice)) && (parseFloat(row.taxIncludedPrice) > 0)) {\n                                                        row.taxFreePrice = Number(\n                                                          new Decimal(row.taxIncludedPrice / (1 + parseFloat(val) / 100)).toFixed(priceSettings)\n                                                        )\n                                                      }\n                                                    }\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_select_lru2vhvk",
                                              "__description": "请选择"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhvl",
                                          "__description": ""
                                        },
                                        "id": "7_item_config_luaj1znq"
                                      },
                                      {
                                        "dataKey": "taxFreePrice",
                                        "title": "不含税单价(元)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhxd",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_lru2vhxc",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "taxFreePrice",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                    if (!Number(row.taxFreePrice)) {\n                                                      row.taxFreePrice = 0\n                                                      row.taxIncludedPrice = 0\n                                                      row.taxIncludedSum = 0\n                                                      row.taxFreeSum = 0\n                                                    } else {\n                                                      // row.taxFreePrice = Number(Number(row.taxFreePrice).toFixed(priceSettings))\n                                                      row.taxFreePrice = Number(new Decimal(row.taxFreePrice).toFixed(priceSettings))\n                                                      row.taxFreeSum = Number((row.taxFreePrice * row.netQuantity).toFixed(priceSettings))\n\n                                                      if (!row.taxRate) {\n                                                        row.taxIncludedPrice = row.taxFreePrice\n                                                        row.taxIncludedSum = row.taxFreeSum\n                                                      } else {\n                                                        const taxRatePrice = 1 + (row.taxRate * 0.01)\n                                                        row.taxIncludedPrice = Number(new Decimal(row.taxFreePrice).mul(taxRatePrice).toFixed(priceSettings))\n                                                        row.taxIncludedSum = Number(new Decimal(row.taxIncludedPrice).mul(row.netQuantity).toFixed(priceSettings))\n                                                      }\n                                                    }\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_lru2vhxc",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "width": "100%"
                                              }
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhxd",
                                          "__description": ""
                                        },
                                        "id": "8_item_config_luaj1znr"
                                      },
                                      {
                                        "dataKey": "taxIncludedPrice",
                                        "title": "含税单价(元)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhwx",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_lru2vhww",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "taxIncludedPrice",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row) {\n                                                    // 含税单价\n\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                    if (!Number(row.taxIncludedPrice)) {\n                                                      row.taxIncludedPrice = 0\n                                                      row.taxIncludedSum = 0\n                                                      row.taxFreePrice = 0\n                                                      row.taxFreeSum =  0\n                                                    } else {\n                                                      row.taxIncludedPrice = Number(new Decimal(row.taxIncludedPrice).toFixed(priceSettings))\n                                                      row.taxIncludedSum = Number(new Decimal(row.taxIncludedPrice).mul(row.netQuantity).toFixed(priceSettings))\n\n                                                      if (!row.taxRate) {\n                                                        row.taxFreePrice = row.taxIncludedPrice\n                                                        row.taxFreeSum = row.taxIncludedSum\n                                                      } else {\n                                                        const taxRatePrice = 1 + (row.taxRate * 0.01)\n                                                        row.taxFreePrice = Number(new Decimal(row.taxIncludedPrice).div(taxRatePrice).toFixed(priceSettings))\n                                                        row.taxFreeSum = Number(new Decimal(row.taxFreePrice).mul(row.netQuantity).toFixed(priceSettings))\n\n                                                      }\n                                                    }\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_lru2vhww",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhwx",
                                          "__description": ""
                                        },
                                        "id": "9_item_config_luaj1zns"
                                      },
                                      {
                                        "dataKey": "freight",
                                        "title": "运费(元)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ltjncpyn",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ltjncpym",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "freight",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnInputBlur(row){\n                                                    console.log(row);\n                                                    debugger\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                    if (isNaN(parseInt(row.freight))) {\n                                                      row.freight = 0\n                                                      return\n                                                    }\n                                                    row.freight = parseFloat(row.freight)\n\n                                                    row.freight = Number(new Decimal(row.freight).toFixed(priceSettings))\n\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_input_ltjncpym",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ltjncpyn",
                                          "__description": ""
                                        },
                                        "id": "10_item_config_luaj1znt"
                                      },
                                      {
                                        "dataKey": "storagePlace",
                                        "title": "存放地",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhw1",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "select",
                                            "elementOptions": {
                                              "__nodeId": "select_lru2vhw0",
                                              "__nodeName": "select",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "multiple": false,
                                                "disabled": false,
                                                "size": "small",
                                                "clearable": true,
                                                "collapseTags": false,
                                                "collapseTagsTooltip": false,
                                                "multipleLimit": 0,
                                                "clearIcon": "CircleClose",
                                                "fitInputWidth": false,
                                                "filterable": false,
                                                "valueKey": "value",
                                                "placeholder": "请选择",
                                                "modelName": "storagePlace",
                                                "itemData": [],
                                                "defaultProps": {
                                                  "label": "fullName",
                                                  "value": "value"
                                                },
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {
                                                "onMounted": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function onMountedFn(){\n                                                    this.$currentInstance.exposed.model.itemData.value = this.$dataModels.dicData.storagePlace\n\n                                                  }"
                                                },
                                                "onChange": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(val,row){\n                                                    const { storagePlace } = this.$dataModels.dicData\n                                                    const  { id,name,fullName} = storagePlace.find(s => s.value ==val)\n                                                    row.stockbinId = id\n                                                    row.stockbinFullName = fullName\n                                                    row.oriStockbinId = row.oriDicId\n                                                    row.storagePlace = name\n                                                  }"
                                                },
                                                "onClear": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(val, row) {\n                                                    row.stockbinId = 0\n                                                    row.stockbinFullName = ''\n                                                    row.oriStockbinId =null\n                                                    row.storagePlace = ''\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_select_lru2vhw0",
                                              "__description": "请选择"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhw1",
                                          "__description": ""
                                        },
                                        "id": "11_item_config_luaj1znu"
                                      },
                                      {
                                        "dataKey": "batchNo",
                                        "title": "炉批号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": false,
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lt74im4y",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lt74im4x",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "batchNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lt74im4x",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lt74im4y",
                                          "__description": ""
                                        },
                                        "id": "12_item_config_luaj1znv"
                                      },
                                      {
                                        "dataKey": "testReportNo",
                                        "title": "实验报告号",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": false,
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhxt",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lru2vhxs",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "testReportNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lru2vhxs",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhxt",
                                          "__description": ""
                                        },
                                        "id": "13_item_config_luaj1znw"
                                      },
                                      {
                                        "dataKey": "skillCardNo",
                                        "title": "技证号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhy9",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lru2vhy8",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "skillCardNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lru2vhy8",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhy9",
                                          "__description": ""
                                        },
                                        "id": "14_item_config_luaj1znx"
                                      },
                                      {
                                        "dataKey": "acceptanceRecord",
                                        "title": "验收情况记录",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ltjncpyp",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ltjncpyo",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "acceptanceRecord",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_ltjncpyo",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ltjncpyp",
                                          "__description": ""
                                        },
                                        "id": "15_item_config_luaj1zny"
                                      },
                                      {
                                        "dataKey": "manufacturer",
                                        "title": "生产厂商",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lt74im5h",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lt74im5g",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "manufacturer",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lt74im5g",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lt74im5h",
                                          "__description": ""
                                        },
                                        "id": "16_item_config_luaj1znz"
                                      },
                                      {
                                        "dataKey": "remark",
                                        "title": "物资备注",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 300,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhyp",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lru2vhyo",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "remark",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lru2vhyo",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhyp",
                                          "__description": ""
                                        },
                                        "id": "17_item_config_luaj1zo0"
                                      },
                                      {
                                        "dataKey": "detailRemark",
                                        "title": "明细备注",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_luaj1zlw",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_luaj1zlv",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "detailRemark",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_luaj1zlv",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_luaj1zlw",
                                          "__description": ""
                                        },
                                        "id": "18_item_config_luaj1zo1"
                                      },
                                      {
                                        "dataKey": "code",
                                        "title": "操作",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "right",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhz5",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "button",
                                            "elementOptions": {
                                              "__nodeId": "button_lru2vhz4",
                                              "__nodeName": "button",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "size": "small",
                                                "plain": true,
                                                "content": "删除",
                                                "type": "danger",
                                                "text": false,
                                                "link": true,
                                                "round": false,
                                                "circle": false,
                                                "loading": false,
                                                "disabled": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "icon": "Delete"
                                              },
                                              "__nodeEvent": {
                                                "onClick": {
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const { receiveFormModel } = this.$dataModels\n                                                    if (row.id) {\n                                                      receiveFormModel.deleteItems.push({ id:row.id,orgId:row.orgId,order:row.orderId, isRemoved:true})\n                                                    }\n                                                    receiveFormModel.qReceiveMoreMaterials.splice(row.sortCode, 1)\n                                                    this.$sharedFns.resetSortCode('receive');\n\n                                                    this.$sharedFns.resetEditPageBtnState('receive');\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_button_lru2vhz4",
                                              "__description": "按钮"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhz5",
                                          "__description": ""
                                        },
                                        "id": "19_item_config_luaj1zo2"
                                      }
                                    ],
                                    "mapConfig": {
                                      "addSource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "id",
                                          "isReplace": false,
                                          "defaultVal": null,
                                          "selprop": "",
                                          "defaultValType": "null"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "id",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "auxiliaryUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "firstAuxiliaryUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "oriMaterialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "oriMaterialId",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "isRemoved",
                                          "isReplace": false,
                                          "defaultVal": false,
                                          "selprop": "",
                                          "defaultValType": "boolean"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "netQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "roughQuantity",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "itemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "receivePrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "sortCode",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxFreePrice",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "taxFreePrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxRate",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "taxRate",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxIncludedPrice",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "taxIncludedPrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "freight",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "trunItemBarCode",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "manufacturer",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "batchNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "batchNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "skillCardNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "testReportNo",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "storagePlace",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "stockbinId",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "stockbinFullName",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "oriStockbinId",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "remark",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "priceType",
                                          "isReplace": false,
                                          "defaultVal": "合同价",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "allQuantity",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "allQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "calcPlanQuantity",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "calcPlanQuantity",
                                          "defaultValType": "number"
                                        }
                                      ],
                                      "planAddSource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "id",
                                          "isReplace": false,
                                          "defaultVal": null,
                                          "selprop": "",
                                          "defaultValType": "null"
                                        },
                                        {
                                          "prop": "oriPlanId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "id",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "surplusQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orderId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxFreePrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxRate",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "taxRate",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxIncludedPrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "freight",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "auxiliaryUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "auxiliaryUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "oriMaterialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "oriMaterialId",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "surplusQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "receivePrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "priceType",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "priceType",
                                          "defaultValType": "string"
                                        }
                                      ],
                                      "inventoryAddSource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "id",
                                          "isReplace": false,
                                          "defaultVal": null,
                                          "selprop": "",
                                          "defaultValType": "null"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orderId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "typeMark",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "typeMark",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "remark",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "netQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "roughQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "roughQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "priceType",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "priceType",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "taxRate",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "taxRate",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxIncludedPrice",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "taxIncludedPrice",
                                          "defaultValType": "number"
                                        }
                                      ],
                                      "editSource": [
                                        {
                                          "prop": "acceptanceRecord",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "acceptanceRecord",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "accountDate",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "accountDate",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "accountOrderId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "accountOrderId",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "auxiliaryNetQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "auxiliaryNetQuantity",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "auxiliaryUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "auxiliaryUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "batchNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "batchNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "checkState",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "checkState",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "colBigint_20No_01",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "colBigint_20No_01",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "colVarchar_50No_01",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "colVarchar_50No_01",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "colVarchar_50No_02",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "colVarchar_50No_02",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "colVarchar_50No_03",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "colVarchar_50No_03",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "colVarchar_50No_04",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "colVarchar_50No_04",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "conversionRate",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "conversionRate",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "freight",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "freight",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "id",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "id",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "isRed",
                                          "isReplace": true,
                                          "defaultVal": false,
                                          "selprop": "isRed",
                                          "defaultValType": "boolean"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "itemContractCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemContractCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "itemContractId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemContractId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemDataId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemDataId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        }
                                      ]
                                    },
                                    "sumRowConfig": {
                                      "disabled": true,
                                      "sumText": "合计",
                                      "items": {},
                                      "_items": []
                                    },
                                    "notRepeatFiled": [],
                                    "rowsLimit": 10000
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        //  if(window.assemBoxIsEdit){this.$currentInstance.exposed.methods.growData(\"addSource\",[{},{}]);}\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_tableEdit_lru2vhub",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrt8ic2d",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrt8ic2e",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lrt8ic2e",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrt8ic2c",
                          "__description": "物资明细"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrt8ic27",
                      "__description": ""
                    },
                    "dragButtonPosition": "bottom"
                  },
                  {
                    "tag": "item-3",
                    "isFixed": true,
                    "showDragButton": true,
                    "size": "400px",
                    "paddingSize": "large",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lryl4o3x",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lryl4o4d",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "物资明细",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrt8ic22",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableEdit",
                                "elementOptions": {
                                  "__nodeId": "tableEdit_lru2vhud",
                                  "__nodeName": "tableEdit",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "modelName": "receiveFormModel.qReceiveMoreMaterials",
                                    "columnConfigs": [
                                      {
                                        "dataKey": "rowIndex",
                                        "title": "序号",
                                        "align": "center",
                                        "width": 60,
                                        "fixed": "left",
                                        "id": "0_item_config_luaj1zr6"
                                      },
                                      {
                                        "dataKey": "materialName",
                                        "title": "物资名称",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "1_item_config_luaj1zr7"
                                      },
                                      {
                                        "dataKey": "materialModel",
                                        "title": "规格型号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "2_item_config_luaj1zr8"
                                      },
                                      {
                                        "dataKey": "materialUnit",
                                        "title": "计量单位",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "3_item_config_luaj1zr9"
                                      },
                                      {
                                        "dataKey": "roughQuantity",
                                        "title": "库存量",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "4_item_config_luaj1zra"
                                      },
                                      {
                                        "dataKey": "netQuantity",
                                        "title": "退货量",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhwh",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_lru22hww",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "netQuantity",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n\n                                                    const quantitySettings = this.$dataModels.globalConfig.singleTable.quantitySettings || 4\n                                                    const { netQuantity, roughQuantity} = row\n                                                    if (!Number(row.netQuantity)) {\n                                                      row.netQuantity = 0\n                                                    } else {\n                                                      if (netQuantity > roughQuantity || Number(netQuantity) <= 0) {\n                                                        row.netQuantity = roughQuantity\n                                                      }\n                                                      row.netQuantity = Number(Number(row.netQuantity).toFixed(quantitySettings))\n                                                    }\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_lru22hww",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhwh",
                                          "__description": ""
                                        },
                                        "id": "5_item_config_luaj1zrb"
                                      },
                                      {
                                        "dataKey": "itemBarCode",
                                        "title": "物资条码",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 220,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "6_item_config_luaj1zrc"
                                      },
                                      {
                                        "dataKey": "manufacturer",
                                        "title": "生产厂商",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": true,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "7_item_config_luaj1zrd"
                                      },
                                      {
                                        "dataKey": "batchNo",
                                        "title": "炉批号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": true,
                                        "sortable": false,
                                        "width": 100,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "8_item_config_luaj1zre"
                                      },
                                      {
                                        "dataKey": "storagePlace",
                                        "title": "存放地",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": true,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru22hw1",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "select",
                                            "elementOptions": {
                                              "__nodeId": "select_lru2vhw0",
                                              "__nodeName": "select",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "multiple": false,
                                                "disabled": false,
                                                "size": "default",
                                                "clearable": false,
                                                "collapseTags": false,
                                                "collapseTagsTooltip": false,
                                                "multipleLimit": 0,
                                                "clearIcon": "CircleClose",
                                                "fitInputWidth": false,
                                                "filterable": false,
                                                "valueKey": "value",
                                                "placeholder": "请选择",
                                                "modelName": "storagePlace",
                                                "itemData": [],
                                                "defaultProps": {
                                                  "label": "lable",
                                                  "value": "value"
                                                },
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {
                                                "onMounted": {
                                                  "isOn": true,
                                                  "fn": "async function onMountedFn(){\n                                                    this.$currentInstance.exposed.model.itemData.value = this.$dataModels.dicData.storagePlace\n\n                                                  }"
                                                },
                                                "onChange": {
                                                  "isOn": true,
                                                  "fn": "async function fnName(val,row){\n                                                    const { storagePlace } = this.$dataModels.dicData\n                                                    const  { id,name,fullName} = storagePlace.find(s => s.fullName ==val)\n                                                    row.stockbinId = id\n                                                    row.stockbinFullName = fullName\n                                                    row.oriStockbinId = row.oriDicId\n                                                    row.storagePlace = name\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_select_lru2vhw0",
                                              "__description": "请选择"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru22hw1",
                                          "__description": ""
                                        },
                                        "id": "9_item_config_luaj1zrf"
                                      },
                                      {
                                        "dataKey": "testReportNo",
                                        "title": "实验报告号",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": true,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": false,
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lra2vhxt",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lau2vhxs",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "default",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "testReportNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lau2vhxs",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lra2vhxt",
                                          "__description": ""
                                        },
                                        "id": "10_item_config_luaj1zrg"
                                      },
                                      {
                                        "dataKey": "skillCardNo",
                                        "title": "技证号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": true,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lrr2vhy9",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lru2dhy8",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "default",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "skillCardNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lrr2dhy8",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhy9",
                                          "__description": ""
                                        },
                                        "id": "11_item_config_luaj1zrh"
                                      },
                                      {
                                        "dataKey": "detailRemark",
                                        "title": "明细备注",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_luaj1zmc",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_luaj1zmb",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "detailRemark",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_luaj1zmb",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_luaj1zmc",
                                          "__description": ""
                                        },
                                        "id": "12_item_config_luaj1zri"
                                      },
                                      {
                                        "dataKey": "code",
                                        "title": "操作",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "right",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lru2vhz6",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "button",
                                            "elementOptions": {
                                              "__nodeId": "button_lru2vhh4",
                                              "__nodeName": "button",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "size": "small",
                                                "plain": true,
                                                "content": "删除",
                                                "type": "danger",
                                                "text": false,
                                                "link": true,
                                                "round": false,
                                                "circle": false,
                                                "loading": false,
                                                "disabled": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "icon": "Delete"
                                              },
                                              "__nodeEvent": {
                                                "onClick": {
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const { receiveFormModel } = this.$dataModels\n                                                    if (row.id) {\n                                                      receiveFormModel.deleteItems.push({ id:row.id,orgId:row.orgId,order:row.orderId, isRemoved:true})\n                                                    }\n                                                    receiveFormModel.qReceiveMoreMaterials.splice(row.sortCode, 1)\n                                                    this.$sharedFns.resetSortCode('receive');\n\n                                                    this.$sharedFns.resetEditPageBtnState('receive');\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_button_lru2vhh4",
                                              "__description": "按钮"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lru2vhz6",
                                          "__description": ""
                                        },
                                        "id": "13_item_config_luaj1zrj"
                                      }
                                    ],
                                    "mapConfig": {
                                      "inventoryAddSource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "id",
                                          "isReplace": false,
                                          "defaultVal": null,
                                          "selprop": "",
                                          "defaultValType": "null"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orderId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "typeMark",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "typeMark",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "remark",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "remark",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "netQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "roughQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "roughQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "priceType",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "priceType",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "taxRate",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "taxRate",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxIncludedPrice",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "taxIncludedPrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxIncludedSum",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "taxIncludedSum",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxFreePrice",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "taxFreePrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxFreeSum",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "taxFreeSum",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "testReportNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "testReportNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "acceptanceRecord",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "acceptanceRecord",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "skillCardNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "skillCardNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "batchNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "batchNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "manufacturer",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "manufacturer",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "storagePlace",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "storagePlace",
                                          "defaultValType": "string"
                                        }
                                      ]
                                    },
                                    "sumRowConfig": {
                                      "disabled": true,
                                      "sumText": "合计",
                                      "items": {},
                                      "_items": []
                                    },
                                    "notRepeatFiled": [],
                                    "rowsLimit": 10000
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "isOn": false,
                                      "fn": "async function onMountedFn(){\n                                        //  if(window.assemBoxIsEdit){this.$currentInstance.exposed.methods.growData(\"addSource\",[{},{}]);}\n                                        const { query } = this.$globalVars.$router.currentRoute\n                                        if (query.id) {\n                                          const { receiveFormModel } = this.$dataModels\n                                          const res = await this.$requestFns.getReceiveOrderDetail({})\n                                          Object.assign(receiveFormModel.qReceive, res.data.qReceive)\n                                          receiveFormModel.qReceivePhotos = res.data.qReceivePhotos\n\n                                          if (receiveFormModel.qReceive.serviceType<0) {\n                                            const columns = this.$exposeds.get('tableEdit_lru2vhud').model.elementOption.value.columnConfigs\n                                            columns.forEach(t => {\n                                              if (['taxRate', 'taxFreePrice', 'priceType', 'taxIncludedPrice'].includes(t.dataKey)) {\n                                                t.hidden = true\n                                              }\n                                              if (t.dataKey == 'roughQuantity') {\n                                                t.hidden = false\n                                              }\n                                            })\n                                            this.$exposeds.get('tableEdit_lru2vhud').model.elementOption.value = {\n                                              columnConfigs: columns,\n                                              isDeep: true\n                                            }\n\n                                          } else {\n                                            const columns = this.$exposeds.get('tableEdit_lru2vhud').model.elementOption.value.columnConfigs\n                                            columns.forEach(t => {\n                                              if (['taxRate', 'taxFreePrice', 'priceType', 'taxIncludedPrice'].includes(t.dataKey)) {\n                                                //  t.display = false\n                                                t.hidden = false\n                                              }\n                                              if (t.dataKey == 'roughQuantity') {\n                                                t.hidden = true\n                                              }\n                                            })\n                                            this.$exposeds.get('tableEdit_lru2vhud').model.elementOption.value = {\n                                              columnConfigs: columns,\n                                              isDeep: true\n                                            }\n                                          }\n                                          receiveFormModel.qReceiveMoreMaterials = res.data.qReceiveMoreMaterials\n                                          this.$sharedFns.resetSortCode('receive');\n                                        }\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_tableEdit_lru2vhud",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrt8ic22",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lryl4o4f",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lryl4o4f",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lryl4o4d",
                          "__description": "物资明细"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lryl4o3x",
                      "__description": ""
                    },
                    "dragButtonPosition": "bottom"
                  },
                  {
                    "tag": "item-4",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrt8ic2b",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrt8ic2f",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "入库凭证",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrt8ic2g",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lsu1bn0e",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "vertical",
                                    "wrap": false,
                                    "fill": true,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "100%",
                                      "height": "auto",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lsu1bn0f",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lsu1bn0i",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 2,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lsu1bn0n",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "rawHtml",
                                                    "elementOptions": {
                                                      "__nodeId": "rawHtml_lsu1bn0o",
                                                      "__nodeName": "rawHtml",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "content": "<span style=\"\">rawTxt渲染文本</span>",
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "modelName": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n\n                                                            let text = row.cameraPosition + '照片'\n                                                            if (row.isRequired) {\n                                                              text = ` <div style=\"color:var(--el-text-color-secondary)\"><span style=\"color:red\">*</span>${text}</div>`\n                                                            } else {\n                                                              text = ` <div style=\"color:var(--el-text-color-secondary)\">${text}</div>`\n                                                            }\n                                                            return { content: text }\n\n                                                          }"
                                                        },
                                                        "onMounted": {
                                                          "type": "system",
                                                          "isOn": false,
                                                          "fn": "async function onMountedFn(row){\n\n                                                            debugger\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_rawHtml_lsu1bn0o",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lsu1bn0n",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lsu1bn0i",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lsu3baya",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 20,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lsu3bayc",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "upload",
                                                    "elementOptions": {
                                                      "__nodeId": "upload_lsu3bayd",
                                                      "__nodeName": "upload",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {
                                                        "onBeforeRemove": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnName(file, row) {\n                                                            // debugger\n                                                            const { receiveFormModel } = this.$dataModels\n                                                            if (file.id) {\n                                                              receiveFormModel.deletePhotos.push({ id: file.id, orgId: file.orgId, orderId: file.orderId, isRemoved: true })\n                                                            }\n                                                            const idx = row.photoList.findIndex(row => row.key == file.key)\n                                                            //   row.photoList.splice(idx, 1)\n                                                            row.photoList[idx].isRemoved=true\n                                                          }"
                                                        },
                                                        "onChange": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnChange(uploadFile, uploadFiles,row){\n                                                            if (uploadFile) {\n                                                              const  { receiveFormModel } = this.$dataModels\n                                                              row.photoList.push({\n                                                                orgId: receiveFormModel.qReceive.orgId,\n                                                                orderId: receiveFormModel.qReceive.id || 0,\n                                                                photoUrl: uploadFile.savedKey,\n                                                                key: uploadFile.savedKey,\n                                                                cameraPosition: row.cameraPosition,\n                                                                photoType: row.photoType\n                                                              })\n                                                            }\n\n                                                          }"
                                                        },
                                                        "onMounted": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn(row) {\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              limit: row.total\n                                                            }\n\n                                                            // photoList=[{name:'',key:'photoUrl'},{name:'',key:'photoUrl'}]\n                                                            this.$currentInstance.exposed.model.fileList.value = row.photoList\n                                                            // this.$currentInstance.exposed.model.fileList.value = [{ name: '运单', key:'微信图片_20230614165501.jpg'}]\n\n                                                          }"
                                                        },
                                                        "onBeforeUpload": {
                                                          "isOn": true,
                                                          "type": "system",
                                                          "fn": "async function fnOnBeforeUpload(){\n\n\n\n                                                          }"
                                                        },
                                                        "onExceed": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnExceed(uploadFile, uploadFiles){\n\n                                                            this.$vueGlobal.$message({\n                                                              type: 'error',\n                                                              message: '已超出允许上传的最大数量'\n                                                            })\n\n\n                                                          }"
                                                        },
                                                        "onPreview": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnPreview(uploadFile){\n                                                            this.$dataModels.currentPreviewImg.singleTable.src = uploadFile.url\n                                                            this.$exposeds.get('dialog_lt9ufbvc').model.dialogShow.value = true\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeOptions": {
                                                        "uploadParams": {
                                                          "tempFile": false,
                                                          "product": "mquantity",
                                                          "autoGenerated": true,
                                                          "isAllowRepeated": false,
                                                          "singleSignatureURL": "/shared-data/fs/form-signature"
                                                        },
                                                        "downloadParams": {
                                                          "type": "img",
                                                          "product": "mquantity",
                                                          "expires": 15
                                                        },
                                                        "product": "mquantity",
                                                        "moduleName": "",
                                                        "prefix": "",
                                                        "multiple": false,
                                                        "showFileList": true,
                                                        "drag": false,
                                                        "accept": "['.jpg', '.png', '.jpeg', '.gif', '.bmp']",
                                                        "listType": "picture-card",
                                                        "autoUpload": true,
                                                        "disabled": false,
                                                        "limit": 0,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lsu3baye",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "button",
                                                            "elementOptions": {
                                                              "__nodeId": "button_lsu3bayf",
                                                              "__nodeName": "button",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "modelName": "",
                                                                "size": "default",
                                                                "plain": true,
                                                                "content": "",
                                                                "type": "info",
                                                                "text": false,
                                                                "link": true,
                                                                "round": false,
                                                                "circle": false,
                                                                "loading": false,
                                                                "disabled": false,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "tooltip": false,
                                                                "tooltipEffect": "dark",
                                                                "tooltipContent": "显示的内容",
                                                                "tooltipPlacement": "bottom",
                                                                "icon": "Plus"
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_button_lsu3bayf",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lsu3baye",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_upload_lsu3bayd",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lsu3bayc",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lsu3baya",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lsu1bn0f",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n                                        // debugger\n                                        // 当前代码编辑器下有效\n                                        // if(window.assemBoxIsEdit){ this.$currentInstance.exposed.model.listData.value= [{},{}];}\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.receiveFormModel.qReceivePhotos;\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lsu1bn0e",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrt8ic2g",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrt8ic2h",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lrt8ic2h",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrt8ic2f",
                          "__description": "入库凭证"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrt8ic2b",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-5",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "base",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lu0nrlbe",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lu0nrlbf",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "高拍仪",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lu0wim3f",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lu0wim3g",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": true,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lu0wim3h",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lu0wim3k",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu0wim3m",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lu0wim3n",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row){\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              content: row.phoneUrl\n                                                            }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lu0wim3n",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "100%",
                                                        "height": "115%"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu0wim3m",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu0wim3k",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "display": "flex",
                                                "alignItems": "stretch"
                                              }
                                            },
                                            {
                                              "__nodeId": "gridItem_lu0wim3q",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu211a0f",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "button",
                                                    "elementOptions": {
                                                      "__nodeId": "button_lu211a0g",
                                                      "__nodeName": "button",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "size": "default",
                                                        "plain": true,
                                                        "content": "删除",
                                                        "type": "danger",
                                                        "text": false,
                                                        "link": true,
                                                        "round": false,
                                                        "circle": false,
                                                        "loading": false,
                                                        "disabled": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "tooltip": false,
                                                        "tooltipEffect": "dark",
                                                        "tooltipContent": "显示的内容",
                                                        "tooltipPlacement": "bottom",
                                                        "icon": "delete"
                                                      },
                                                      "__nodeEvent": {
                                                        "onClick": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnName(row){\n                                                            console.log(row,'row')\n                                                            let   photoList = this.$exposeds.get('listOnly_lu0wim3g').model.listData.value\n                                                            console.log(photoList,'photoList');\n                                                            photoList.forEach((item,index)=>{\n                                                              if (item.phoneUrl === row.phoneUrl) {\n                                                                photoList.splice(index,1)\n                                                                this.$dataModels.receiveFormModel.qReceiveGpys.splice(index,1)\n                                                              }\n                                                            })\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_button_lu211a0g",
                                                      "__description": "删除",
                                                      "__nodeStyle": {
                                                        "marginTop": "35px"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu211a0f",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu0wim3q",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "display": "flex",
                                                "justifyContent": "flex-end"
                                              }
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lu0wim3h",
                                        "__description": "",
                                        "__nodeEvent": {},
                                        "__nodeStyle": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n                                        if (this.$dataModels.receiveFormModel.qReceiveGpys.length){\n                                          const file = {\n                                            keys: []\n                                          }\n                                          this.$dataModels.receiveFormModel.qReceiveGpys.forEach(item => {\n                                            file.keys.push(item.gpyPhotoUrl)\n                                          })\n                                          const result = await this.$sharedFns.downloadFile(file);\n                                          let arr = []\n                                          for (let key in result) {\n                                            arr.push({ phoneUrl: result[key], orgId: this.$dataModels.receiveFormModel.qReceive.orgId })\n                                          }\n                                          this.$currentInstance.exposed.model.listData.value.push(...arr)\n                                        }\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lu0wim3g",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lu0wim3f",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lu0nrlbh",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [
                                  {
                                    "__nodeId": "elementRender_lu0vtxv0",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lu0vtxv1",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "拍照",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "icon": "FullScreen"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n\n\n\n\n                                              if(this.$exposeds.get('listOnly_lu0wim3g').model.listData.value.length>=this.$dataModels.gpyPhotoList.singleTable.photoNumber){\n\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: '已超出允许上传的最大数量'\n                                                })\n\n\n                                              }else {\n                                                this.$exposeds.get('dialog_lu0nrql5').model.dialogShow.value = true\n                                              }\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lu0vtxv1",
                                        "__description": "拍照"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lu0vtxv0",
                                    "__description": ""
                                  }
                                ],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lu0nrlbh",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lu0nrlbf",
                          "__description": "高拍仪"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lu0nrlbe",
                      "__description": ""
                    }
                  }
                ]
              },
              "__nodeEvent": {
                "onMounted": {
                  "type": "system",
                  "isOn": true,
                  "fn": "async function onMountedFn(){\n                    const { qReceive } = this.$dataModels.receiveFormModel\n                    const { itemConfig } = this.$currentInstance.exposed.model.elementOption.value\n\n                    const data = this.$sharedFns.getPhotoConfig();\n                    console.log(data,'data');\n\n                    itemConfig.forEach(box => {\n                      if (box.tag == 'item-2') {\n                        box.isHidden = qReceive.serviceType < 0 ? true : false\n                      }\n                      if (box.tag == 'item-3') {\n                        box.isHidden = qReceive.serviceType > 0 ? true : false\n                      }\n                      if (box.tag == 'item-5'){\n                        box.isHidden = this.$dataModels.gpyPhotoList.singleTable.isShow?false:true\n                      }\n                    })\n\n                  }"
                }
              },
              "__nodeKey": "nodeKey_flexBox_lrt8ic25",
              "__description": ""
            }
          },
          "__nodeKey": "nodeKey_plane_lrt7yw7y",
          "__description": ""
        },
        "dialogOptions": [
          {
            "__nodeId": "dialog_lrulovzs",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "常用库选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lrulovzt",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrulovzu",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrulovav",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "base",
                              "clearPadding": [
                                "left",
                                "top",
                                "right",
                                "bottom"
                              ],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lrulovaw",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "selectFromComMaterial",
                                  "elementOptions": {
                                    "__nodeId": "selectFromComMaterial_lrulovax",
                                    "__nodeName": "selectFromComMaterial",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {
                                      "onSelectRows": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnName(item){\n                                          const { receiveFormModel } = this.$dataModels\n                                          const { taxRate,batchNo } = receiveFormModel.qReceive\n                                          const arr = []\n                                          item.forEach(t => {\n                                            t.orgId = receiveFormModel.qReceive.orgId\n                                            t.orderId = receiveFormModel.qReceive.id\n                                            t.serviceType = receiveFormModel.qReceive.serviceType\n                                            t.orderType = receiveFormModel.qReceive.orderType\n                                            t.batchNo = batchNo || ''\n                                            if ([20,-21].includes(receiveFormModel.qReceive.serviceType)) {\n                                              t.taxRate = 0\n                                            } else {\n                                              t.taxRate = taxRate || 0\n                                            }\n                                            t.materialId = t.id\n                                            t.taxFreePrice = 0\n                                            t.taxIncludedPrice = 0\n                                            t.netQuantity = 0\n                                            arr.push(t)\n                                          })\n                                          // 验收卡控逻辑\n                                          const newRows = await this.$sharedFns.editReceiveControl(arr);\n\n                                          this.$exposeds.get('tableEdit_lru2vhub').methods.growData('addSource', newRows);\n                                          this.$sharedFns.resetSortCode('receive');\n                                          this.$sharedFns.resetEditPageBtnState('receive');\n\n                                          // this.$exposeds.get('dialog_lrulovzs').model.dialogShow.value = false\n                                        }"
                                      },
                                      "": {
                                        "isOn": true,
                                        "fn": "async function fnName(item){\n                                          const { receiveFormModel } = this.$dataModels\n                                          const { taxRate,priceType } = receiveFormModel.qReceive\n                                          const arr = []\n                                          item.forEach(t => {\n                                            t.taxRate = Number(taxRate)\n                                            t.priceType = priceType\n                                            if (receiveFormModel.qReceiveMoreMaterials.findIndex(q=> q.materialId == t.id)<0) {\n                                              arr.push(t)\n                                            }\n                                          })\n\n                                          this.$exposeds.get('tableEdit_lru2vhub').methods.growData('addSource', arr);\n                                          this.$exposeds.get('dialog_lrulovzs').model.dialogShow.value = false\n                                        }"
                                      },
                                      "onClose": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnOnClose(){\n\n\n                                          this.$exposeds.get('dialog_lrulovzs').model.dialogShow.value = false\n                                        }"
                                      }
                                    },
                                    "__nodeOptions": {
                                      "addButton": false,
                                      "downloadIcon": false,
                                      "display": true,
                                      "permissionSetting": ""
                                    },
                                    "__nodeKey": "nodeKey_selectFromComMaterial_lrulovax",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lrulovaw",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrulovav",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrulovzu",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lrulovzt",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lrulovzs",
            "__description": "常用材料选材",
            "__nodeStyle": {}
          },
          {
            "__nodeId": "dialog_lr63lbx1",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "总控计划选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lr63lbx2",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": true,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "left",
                        "top",
                        "right",
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lr650uod",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lr73cvc1",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "base",
                              "clearPadding": [
                                "left",
                                "top",
                                "right",
                                "bottom"
                              ],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexBox",
                              "defaultSlot": {
                                "__nodeId": "flexBox_lr73cvkk",
                                "__nodeName": "flexBox",
                                "__nodeType": "baseNode",
                                "__nodeOptions": {
                                  "display": true,
                                  "permissionSetting": "",
                                  "isRow": false,
                                  "itemNum": 4,
                                  "width": "100%",
                                  "height": "100%",
                                  "itemConfig": [
                                    {
                                      "tag": "item-1",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "",
                                      "contentType": "container",
                                      "paddingSize": "large",
                                      "isHidden": false,
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lr73cvkl",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lr73cwil",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": true,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "flexLine",
                                              "defaultSlot": {
                                                "__nodeId": "flexLine_lr73cwzl",
                                                "__nodeName": "flexLine",
                                                "__nodeType": "baseNode",
                                                "__nodeStyle": {},
                                                "__nodeEvent": {},
                                                "__nodeOptions": {
                                                  "leftWidth": "85%",
                                                  "background": false,
                                                  "leftPadding": false,
                                                  "rightPadding": false,
                                                  "paddingSize": "",
                                                  "leftClearPadding": [],
                                                  "rightClearPadding": [],
                                                  "__activeSlot": "defaultSlot",
                                                  "defaultSlot": [
                                                    {
                                                      "__nodeId": "elementRender_lr73cx83",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "input",
                                                        "elementOptions": {
                                                          "__nodeId": "input_lr73cx84",
                                                          "__nodeName": "input",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "plain": false,
                                                            "clearable": true,
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "type": "text",
                                                            "placeholder": "请输入物资名称",
                                                            "modelName": "receiveInventory.singleTable.materialName",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_input_lr73cx84",
                                                          "__description": "请输入物资名称",
                                                          "__nodeStyle": {
                                                            "width": "200px"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lr73cx83",
                                                      "__description": ""
                                                    },
                                                    {
                                                      "__nodeId": "elementRender_lr73cxgm",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "input",
                                                        "elementOptions": {
                                                          "__nodeId": "input_lr73cxgn",
                                                          "__nodeName": "input",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "plain": false,
                                                            "clearable": true,
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "type": "text",
                                                            "placeholder": "请输入规格型号",
                                                            "modelName": "receiveInventory.singleTable.materialModel",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_input_lr73cxgn",
                                                          "__description": "请输入规格型号",
                                                          "__nodeStyle": {
                                                            "width": "200px"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lr73cxgm",
                                                      "__description": ""
                                                    },
                                                    {
                                                      "__nodeId": "elementRender_ltgyt7ez",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "button",
                                                        "elementOptions": {
                                                          "__nodeId": "button_ltgyt7f0",
                                                          "__nodeName": "button",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "modelName": "",
                                                            "size": "default",
                                                            "plain": true,
                                                            "content": "查询",
                                                            "type": "info",
                                                            "text": false,
                                                            "link": false,
                                                            "round": false,
                                                            "circle": false,
                                                            "loading": false,
                                                            "disabled": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "tooltip": false,
                                                            "tooltipEffect": "dark",
                                                            "tooltipContent": "显示的内容",
                                                            "tooltipPlacement": "bottom",
                                                            "iconFont": "icon cs-common search"
                                                          },
                                                          "__nodeEvent": {
                                                            "onClick": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName() {\n\n\n                                                                this.$exposeds.get('tableAsync_ltflmpge').methods.loadData();\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_button_ltgyt7f0",
                                                          "__description": "查询"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_ltgyt7ez",
                                                      "__description": ""
                                                    }
                                                  ],
                                                  "rightSlot": [],
                                                  "display": true,
                                                  "permissionSetting": ""
                                                },
                                                "__nodeKey": "nodeKey_flexLine_lr73cwzl",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lr73cwil",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lr73cvkl",
                                        "__description": ""
                                      },
                                      "clearPadding": [
                                        "bottom"
                                      ]
                                    },
                                    {
                                      "tag": "item-2",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "240px",
                                      "paddingSize": "large",
                                      "clearPadding": [
                                        "bottom"
                                      ],
                                      "contentType": "container",
                                      "isHidden": false,
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lr73cvkm",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lr73czl1",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": true,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "element",
                                              "defaultSlot": {
                                                "__nodeId": "elementRender_ltflmpgd",
                                                "__nodeName": "elementRender",
                                                "__nodeType": "renderNode",
                                                "__nodeOptions": {
                                                  "renderType": "tableAsync",
                                                  "elementOptions": {
                                                    "__nodeId": "tableAsync_ltflmpge",
                                                    "__nodeName": "tableAsync",
                                                    "__nodeType": "baseNode",
                                                    "__nodeOptions": {
                                                      "display": true,
                                                      "permissionSetting": "",
                                                      "requestFn": "",
                                                      "columnConfigs": [
                                                        {
                                                          "attr": {
                                                            "prop": "code",
                                                            "type": "selection",
                                                            "label": "编码",
                                                            "width": 60,
                                                            "headerAlign": "center",
                                                            "align": "center"
                                                          },
                                                          "id": "0_item_config_lu0xwr8c"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "code",
                                                            "label": "序号",
                                                            "width": "60",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": "",
                                                            "type": "index"
                                                          },
                                                          "id": "1_item_config_lu0xwr8d"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialName",
                                                            "label": "物资名称",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "2_item_config_lu0xwr8e"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialModel",
                                                            "label": "规格型号",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "3_item_config_lu0xwr8f"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialUnit",
                                                            "label": "计量单位",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "4_item_config_lu0xwr8g"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "quantity",
                                                            "label": "计划量",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "5_item_config_lu0xwr8h"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "alQuantity",
                                                            "label": "已验收量",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "6_item_config_lu0xwr8i"
                                                        }
                                                      ],
                                                      "columnSlots": [],
                                                      "columnHeaderSlots": [],
                                                      "showSummary": false,
                                                      "pagination": {
                                                        "currentSize": 20,
                                                        "pageSizes": [
                                                          10,
                                                          20,
                                                          30,
                                                          50
                                                        ],
                                                        "layout": "sizes, prev, pager, next, total"
                                                      },
                                                      "tableCodeRemark": "",
                                                      "tableCode": "",
                                                      "isCustom": false
                                                    },
                                                    "__nodeEvent": {
                                                      "onLoadData": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function fnLoadData(params) {\n                                                          // 保留其他页数据\n                                                          this.$dataModels.selectRelaObj.otherPageSelect = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n                                                          this.$currentInstance.exposed.model.tableLoading.value = true\n                                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n\n\n                                                          const { orgId,  lastProject } = this.$globalVars.$context\n\n                                                          this.$dataModels.receiveInventory.singleTable.lastOrgId = lastProject.id\n                                                          this.$dataModels.receiveInventory.singleTable.classId = 0\n                                                          this.$dataModels.receiveInventory.singleTable.orgId = orgId\n                                                          await this.$requestFns.queryReceiveGhPlanMaterials(params).then(data => {\n                                                            this.$currentInstance.exposed.model.tableData.value = data.data\n                                                            this.$currentInstance.exposed.model.tableLoading.value = false\n                                                          })\n\n                                                          debugger\n                                                          // 处理勾选\n                                                          this.$currentInstance.exposed.model.tableData.value.rows.forEach(row => {\n                                                            let otherRow = {}\n                                                            let otherRowIndex = -1\n                                                            const exist = this.$dataModels.selectRelaObj.otherPageSelect.forEach((item, i) => {\n                                                              if (row.materialId === item.materialId) {\n                                                                otherRow = item\n                                                                otherRowIndex = i\n                                                              }\n                                                            })\n                                                            // 将本页存在的重新勾选\n                                                            if (otherRow.materialId) {\n                                                              this.$dataModels.selectRelaObj.otherPageSelect.splice(otherRowIndex, 1)\n                                                              ref._.setupState.toggleRowSelection(row)\n                                                            }\n                                                          })\n\n\n                                                        }"
                                                      },
                                                      "onMounted": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function onMountedFn(){\n\n                                                          this.$currentInstance.exposed.methods.loadData();\n\n                                                        }"
                                                      },
                                                      "onRowClick": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function fnRowClick(row, column){\n\n                                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                                          ref._.setupState.toggleRowSelection(row)\n\n                                                        }"
                                                      },
                                                      "onSelectionChange": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function fnSelectionChange(rows){\n\n                                                          if (rows !== null) {\n                                                            this.$dataModels.selectRelaObj.selectRows = []\n                                                            this.$dataModels.selectRelaObj.selectRows = this.$dataModels.selectRelaObj.selectRows.concat(rows)\n                                                            this.$dataModels.selectRelaObj.items = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n\n                                                            this.$exposeds.get('tableOnly_lta3zuw4').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                          }\n\n                                                        }"
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_tableAsync_ltflmpge",
                                                    "__description": ""
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_elementRender_ltflmpgd",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lr73czl1",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lr73cvkm",
                                        "__description": ""
                                      }
                                    },
                                    {
                                      "tag": "item-3",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "240px",
                                      "paddingSize": "large",
                                      "clearPadding": [
                                        "bottom"
                                      ],
                                      "contentType": "container",
                                      "isHidden": false,
                                      "permissionSetting": "",
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lta3yolw",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lta3zp42",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": true,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "element",
                                              "defaultSlot": {
                                                "__nodeId": "elementRender_lta3zp43",
                                                "__nodeName": "elementRender",
                                                "__nodeType": "renderNode",
                                                "__nodeOptions": {
                                                  "renderType": "tableOnly",
                                                  "elementOptions": {
                                                    "__nodeId": "tableOnly_lta3zuw4",
                                                    "__nodeName": "tableOnly",
                                                    "__nodeType": "baseNode",
                                                    "__nodeOptions": {
                                                      "display": true,
                                                      "permissionSetting": "",
                                                      "requestFn": "",
                                                      "columnConfigs": [
                                                        {
                                                          "attr": {
                                                            "prop": "code",
                                                            "type": "index",
                                                            "label": "序号",
                                                            "width": 60,
                                                            "headerAlign": "center",
                                                            "align": "center"
                                                          },
                                                          "id": "0_item_config_ltflnb36"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialName",
                                                            "label": "物资名称",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "1_item_config_ltflnb37"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialModel",
                                                            "label": "规格型号",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "2_item_config_ltflnb38"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialUnit",
                                                            "label": "计量单位",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "3_item_config_ltflnb39"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "quantity",
                                                            "label": "计划量",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "4_item_config_ltflnb3a"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "alQuantity",
                                                            "label": "已验收量",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "5_item_config_ltflnb3b"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "op",
                                                            "label": "操作",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "center",
                                                            "scopedSlot": "op",
                                                            "fixed": "right"
                                                          },
                                                          "id": "6_item_config_ltflnb3c"
                                                        }
                                                      ],
                                                      "columnSlots": [
                                                        {
                                                          "code": "op",
                                                          "columRender": {
                                                            "__nodeId": "columRender_lta40wgj",
                                                            "__nodeName": "columRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "button",
                                                              "elementOptions": {
                                                                "__nodeId": "button_lta40wgi",
                                                                "__nodeName": "button",
                                                                "__nodeType": "columnNode",
                                                                "__nodeOptions": {
                                                                  "modelName": "",
                                                                  "size": "small",
                                                                  "plain": false,
                                                                  "content": "删除",
                                                                  "type": "danger",
                                                                  "text": false,
                                                                  "link": true,
                                                                  "round": false,
                                                                  "circle": false,
                                                                  "loading": false,
                                                                  "disabled": false,
                                                                  "display": true,
                                                                  "permissionSetting": "",
                                                                  "tooltip": false,
                                                                  "tooltipEffect": "dark",
                                                                  "tooltipContent": "显示的内容",
                                                                  "tooltipPlacement": "bottom",
                                                                  "icon": "Delete"
                                                                },
                                                                "__nodeEvent": {
                                                                  "onClick": {
                                                                    "type": "system",
                                                                    "isOn": true,
                                                                    "fn": "async function fnName(row) {\n\n                                                                      let index = this.$dataModels.selectRelaObj.items.indexOf(row)\n\n                                                                      this.$dataModels.selectRelaObj.items.splice(index, 1)\n                                                                      this.$exposeds.get('tableOnly_lta3zuw4').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                                      const ref = this.$exposeds.get('tableAsync_ltflmpge').methods.getNativeRefs();\n                                                                      // 移除上方表格数据,判断存在则只改本页勾选状态。不存在则修改其他页数据\n                                                                      const existData = this.$exposeds.get('tableAsync_ltflmpge').model.tableData.value.rows.filter(item => {\n                                                                        return item.materialId === row.materialId\n                                                                      })\n                                                                      if (existData.length) {\n                                                                        ref._.setupState.toggleRowSelection(existData[0])\n                                                                      } else {\n                                                                        index = this.$dataModels.selectRelaObj.otherPageSelect.indexOf(row)\n                                                                        this.$dataModels.selectRelaObj.otherPageSelect.splice(index, 1)\n                                                                      }\n\n\n                                                                    }"
                                                                  }
                                                                },
                                                                "__nodeKey": "nodeKey_button_lta40wgi",
                                                                "__description": "删除"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_columRender_lta40wgj",
                                                            "__description": ""
                                                          },
                                                          "propName": "操作"
                                                        }
                                                      ],
                                                      "columnHeaderSlots": [],
                                                      "showSummary": false,
                                                      "pagination": {
                                                        "currentSize": 20,
                                                        "pageSizes": [
                                                          10,
                                                          20,
                                                          30,
                                                          50
                                                        ],
                                                        "layout": "sizes, prev, pager, next, total"
                                                      },
                                                      "defaultExpandAll": false,
                                                      "rowKey": "id",
                                                      "lazy": false,
                                                      "treeProps": {
                                                        "hasChildren": "hasChildren",
                                                        "children": "children"
                                                      },
                                                      "expandRowKeys": [],
                                                      "tableCodeRemark": "",
                                                      "tableCode": "",
                                                      "isCustom": false
                                                    },
                                                    "__nodeEvent": {},
                                                    "__nodeKey": "nodeKey_tableOnly_lta3zuw4",
                                                    "__description": ""
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_elementRender_lta3zp43",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lta3zp42",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lta3yolw",
                                        "__description": ""
                                      }
                                    },
                                    {
                                      "tag": "item-4",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "",
                                      "paddingSize": "base",
                                      "clearPadding": [],
                                      "contentType": "container",
                                      "isHidden": false,
                                      "permissionSetting": "",
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lr73d3la",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lr73d3ts",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": false,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [
                                                "bottom"
                                              ],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "flexLine",
                                              "defaultSlot": {
                                                "__nodeId": "flexLine_lr73d42b",
                                                "__nodeName": "flexLine",
                                                "__nodeType": "baseNode",
                                                "__nodeStyle": {},
                                                "__nodeEvent": {},
                                                "__nodeOptions": {
                                                  "leftWidth": "50%",
                                                  "background": false,
                                                  "leftPadding": true,
                                                  "rightPadding": true,
                                                  "paddingSize": "",
                                                  "leftClearPadding": [],
                                                  "rightClearPadding": [],
                                                  "__activeSlot": "defaultSlot",
                                                  "defaultSlot": null,
                                                  "rightSlot": [
                                                    {
                                                      "__nodeId": "elementRender_lr73d4ja",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "button",
                                                        "elementOptions": {
                                                          "__nodeId": "button_lr73d4jb",
                                                          "__nodeName": "button",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "modelName": "",
                                                            "size": "default",
                                                            "plain": false,
                                                            "content": "确定",
                                                            "type": "primary",
                                                            "text": false,
                                                            "link": false,
                                                            "round": false,
                                                            "circle": false,
                                                            "loading": false,
                                                            "disabled": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "icon": "CircleCheckFilled"
                                                          },
                                                          "__nodeEvent": {
                                                            "onClick": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n                                                                const { receiveFormModel } = this.$dataModels\n                                                                const { taxRate, batchNo } = receiveFormModel.qReceive\n                                                                const arr = []\n                                                                if (this.$dataModels.selectRelaObj.items && this.$dataModels.selectRelaObj.items.length > 0) {\n                                                                  this.$dataModels.selectRelaObj.items.forEach(item => {\n                                                                    item.orgId = receiveFormModel.qReceive.orgId\n                                                                    item.id = item.materialId\n                                                                    item.batchNo = batchNo\n                                                                    item.orderId = receiveFormModel.qReceive.id\n                                                                    item.serviceType = receiveFormModel.qReceive.serviceType\n                                                                    item.orderType = receiveFormModel.qReceive.orderType\n                                                                    item.taxFreePrice = 0\n                                                                    item.taxIncludedPrice = 0\n                                                                    if ([20, -21].includes(receiveFormModel.qReceive.serviceType)) {\n                                                                      item.taxRate = 0\n                                                                    } else {\n                                                                      item.taxRate = taxRate || 0\n                                                                    }\n                                                                    item.netQuantity = item.quantity - item.alQuantity > 0 ? item.quantity - item.alQuantity : 0\n\n\n                                                                    // if (receiveFormModel.qReceiveMoreMaterials.findIndex(q => q.materialId == item.materialId) < 0) {\n\n                                                                    arr.push(item)\n\n                                                                  })\n                                                                }\n                                                                console.log(arr);\n                                                                console.log(\"===============================================\");\n                                                                debugger\n                                                                // 验收卡控逻辑\n                                                                const newRows = await this.$sharedFns.editReceiveControl(arr);\n                                                                console.log(newRows);\n                                                                console.log(\"========================================================\");\n                                                                debugger\n                                                                this.$exposeds.get('tableEdit_lru2vhub').methods.growData('addSource', newRows);\n                                                                this.$sharedFns.resetSortCode('receive');\n                                                                this.$sharedFns.resetEditPageBtnState('receive');\n                                                                this.$dataModels.selectRelaObj.items.length = 0\n                                                                this.$assemCore.setForm('selectRelaObj');\n\n                                                                this.$assemCore.setForm('receiveInventory');\n                                                                this.$exposeds.get('dialog_lr63lbx1').model.dialogShow.value = false;\n\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_button_lr73d4jb",
                                                          "__description": "确定"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lr73d4ja",
                                                      "__description": ""
                                                    }
                                                  ],
                                                  "display": true,
                                                  "permissionSetting": ""
                                                },
                                                "__nodeKey": "nodeKey_flexLine_lr73d42b",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lr73d3ts",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lr73d3la",
                                        "__description": ""
                                      }
                                    }
                                  ]
                                },
                                "__nodeEvent": {},
                                "__nodeKey": "nodeKey_flexBox_lr73cvkk",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lr73cvc1",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lr650uod",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lr63lbx2",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lr63lbx1",
            "__description": "总控计划选材",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n\n                  this.$dataModels.selectRelaObj.items.length = 0\n                  this.$assemCore.setForm('selectRelaObj');\n                  this.$assemCore.setForm('receiveInventory');\n\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_lrvsj0ao",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "采购计划选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lrvsj0ap",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 4,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrvsiymy",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrvsiyn1",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lrvsiyn3",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [
                                    {
                                      "__nodeId": "elementRender_lrvsiyn8",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "dictionarySelect",
                                        "elementOptions": {
                                          "__nodeId": "dictionarySelect_lrvsiyn9",
                                          "__nodeName": "dictionarySelect",
                                          "__nodeType": "baseNode",
                                          "__nodeEvent": {
                                            "onSelectionChange": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(item,props){\n\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = true\n                                                this.$exposeds.get('tableAsync_lrvsiyni').methods.loadData(true);\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = false\n\n\n                                              }"
                                            },
                                            "onClear": {
                                              "isOn": true,
                                              "fn": "async function fnName(item, props) {\n\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = true\n                                                this.$exposeds.get('tableAsync_lrvsiyni').methods.loadData(true);\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = false\n\n\n                                              }"
                                            }
                                          },
                                          "__nodeOptions": {
                                            "defaultText": "",
                                            "limit": 20,
                                            "defaultProps": {
                                              "label": "name",
                                              "subLabel": "fullName",
                                              "value": "name"
                                            },
                                            "width": "100%",
                                            "dropdownHeight": "300px",
                                            "dropdownWidth": "240px",
                                            "clearable": true,
                                            "placeholder": "请选择计划类型",
                                            "searchPlaceholder": "请输入关键字搜索",
                                            "disabled": false,
                                            "searchEnable": true,
                                            "size": "default",
                                            "code": "PurchasePlanType",
                                            "orgId": 0,
                                            "isLeaf": true,
                                            "display": true,
                                            "permissionSetting": "",
                                            "modelName": "filterPlanModel.singleTable.purchaseMethod"
                                          },
                                          "__nodeKey": "nodeKey_dictionarySelect_lrvsiyn9",
                                          "__description": ""
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrvsiyn8",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lrvsiyna",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_lrvsiynb",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入单据编号",
                                            "modelName": "filterPlanModel.singleTable.orderCode",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_lrvsiynb",
                                          "__description": "请输入单据编号",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrvsiyna",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lrvsiync",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_lrvsiynd",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入计划名称",
                                            "modelName": "filterPlanModel.singleTable.planName",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_lrvsiynd",
                                          "__description": "请输入计划名称",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrvsiync",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lrvsiyne",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lrvsiynf",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "查询",
                                            "type": "info",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "icon": "Search"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = true\n                                                this.$exposeds.get('tableAsync_lrvsiyni').methods.loadData(true);\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = false\n\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lrvsiynf",
                                          "__description": "查询"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrvsiyne",
                                      "__description": ""
                                    }
                                  ],
                                  "rightSlot": null,
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lrvsiyn3",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrvsiyn1",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrvsiymy",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": true,
                      "showDragButton": true,
                      "size": "300px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrvsiyms",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrvsiyng",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lrvsiynh",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableAsync",
                                  "elementOptions": {
                                    "__nodeId": "tableAsync_lrvsiyni",
                                    "__nodeName": "tableAsync",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "queryPurchasePlanMaterials",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "0_item_config_lu0p6xhd"
                                        },
                                        {
                                          "attr": {
                                            "prop": "purchaseMethod",
                                            "label": "计划类型",
                                            "width": "90",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "purchaseMethod"
                                          },
                                          "id": "1_item_config_lu0p6xhe"
                                        },
                                        {
                                          "attr": {
                                            "prop": "orderCode",
                                            "label": "单据编号",
                                            "width": "200",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "2_item_config_lu0p6xhf"
                                        },
                                        {
                                          "attr": {
                                            "prop": "planName",
                                            "label": "计划名称",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "3_item_config_lu0p6xhg"
                                        },
                                        {
                                          "attr": {
                                            "prop": "maker",
                                            "label": "编制人",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "4_item_config_lu0p6xhh"
                                        },
                                        {
                                          "attr": {
                                            "prop": "makerDate",
                                            "label": "编制时间",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_lu0p6xhi"
                                        },
                                        {
                                          "attr": {
                                            "prop": "submittor",
                                            "label": "提交人",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "6_item_config_lu0p6xhj"
                                        },
                                        {
                                          "attr": {
                                            "prop": "submitDate",
                                            "label": "提交时间",
                                            "width": "150",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "7_item_config_lu0p6xhk"
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "purchaseMethod",
                                          "columRender": {
                                            "__nodeId": "columRender_lrvvq9pq",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "tag",
                                              "elementOptions": {
                                                "__nodeId": "tag_lrvvq9pp",
                                                "__nodeName": "tag",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "content": "标签",
                                                  "closable": false,
                                                  "hit": false,
                                                  "round": false,
                                                  "effect": "light",
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "size": "small"
                                                },
                                                "__nodeEvent": {
                                                  "onValueRender": {
                                                    "isOn": true,
                                                    "fn": "function onValueRenderFn(row){\n                                                      const content = row.purchaseMethod\n                                                      let type = 'primary'\n                                                      switch (content) {\n                                                        case '内部采购':\n                                                          type= 'success'\n                                                          break;\n                                                        case '招标采购':\n                                                          type = ''\n                                                          break;\n                                                        case '战略采购':\n                                                          type = ''\n                                                          break;\n                                                        case '其他采购':\n                                                          type = 'success'\n                                                          break\n                                                        case '电商采购':\n                                                          type = 'danger'\n                                                          break\n                                                        default:\n                                                          type = 'primary'\n                                                          break\n                                                      }\n                                                      return { content, type}\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_tag_lrvvq9pp",
                                                "__description": "标签"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_lrvvq9pq",
                                            "__description": ""
                                          },
                                          "propName": "计划类型"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "isOn": true,
                                        "fn": "async function onMountedFn(){\n                                          const { lastProject } = this.$globalVars.$context\n                                          const { filterPlanModel } = this.$dataModels\n                                          filterPlanModel.singleTable.orgId = [lastProject.id]\n                                          this.$currentInstance.exposed.model.tableLoading.value = true\n                                          this.$currentInstance.exposed.methods.loadData(true);\n                                          this.$currentInstance.exposed.model.tableLoading.value = false\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(row, column){\n                                          debugger\n                                          this.$exposeds.get('tableReport_lrvsiyo2').model.tableLoading.value = true\n\n\n                                          const res = await this.$requestFns.queryurchasePlanItems({ id: row.id, orgId: row.orgId});\n                                          this.$exposeds.get('tableReport_lrvsiyo2').model.tableData.value = res.data\n                                          this.$exposeds.get('tableReport_lrvsiyo2').model.tableLoading.value = false\n\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_tableAsync_lrvsiyni",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lrvsiynh",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrvsiyng",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrvsiyms",
                        "__description": ""
                      },
                      "dragButtonPosition": "bottom"
                    },
                    {
                      "tag": "item-3",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "230px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "top",
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrvsiymt",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "panel",
                          "containerOptions": {
                            "__nodeId": "panel_lrvsiynj",
                            "__nodeName": "panel",
                            "__nodeType": "baseNode",
                            "__nodeOptions": {
                              "showHeader": true,
                              "title": "选择物资信息",
                              "border": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lrvsiynk",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableReport",
                                  "elementOptions": {
                                    "__nodeId": "tableReport_lrvsiyo2",
                                    "__nodeName": "tableReport",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {
                                      "onSelectionChange": {
                                        "isOn": true,
                                        "fn": "async function fnSelectionChange(rows){\n                                          this.$dataModels.selectRows.items = rows\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(row, column){\n\n\n                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                          ref._.setupState.toggleRowSelection(row)\n                                        }"
                                      }
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "selection",
                                            "label": "选择",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "0_item_config_lu0p6xk1"
                                        },
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "label": "序号",
                                            "width": "60",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "",
                                            "type": "index"
                                          },
                                          "id": "1_item_config_lu0p6xk2"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "2_item_config_lu0p6xk3"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "3_item_config_lu0p6xk4"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "4_item_config_lu0p6xk5"
                                        },
                                        {
                                          "attr": {
                                            "prop": "quantity",
                                            "label": "采购数量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_lu0p6xk6"
                                        },
                                        {
                                          "attr": {
                                            "prop": "selQuantity",
                                            "label": "已验收量",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "6_item_config_lu0p6xk7"
                                        }
                                      ],
                                      "columnSlots": [],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeKey": "nodeKey_tableReport_lrvsiyo2",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lrvsiynk",
                                "__description": ""
                              },
                              "toolSlot": {
                                "__nodeId": "flexLine_lrvsiynl",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lrvsiynl",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_panel_lrvsiynj",
                            "__description": "选择物资信息"
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrvsiymt",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-4",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrvsiymu",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrvsiynn",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "base",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lrvsiynp",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_lrvsiyns",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lrvsiynt",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "确定",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "icon": "CircleCheck"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                const { selectRows,receiveFormModel} = this.$dataModels\n                                                const errData = selectRows.items.reduce((arr,row)=>{\n                                                  if (row.surplusQuantity <= 0){\n                                                    arr.push(row.materialName)\n                                                  }\n                                                  return arr\n                                                },[])\n                                                if (errData.length) {\n                                                  this.$vueGlobal.$message({\n                                                    type: 'warning',\n                                                    message: `物资${errData.join()}的剩余采购量不足,请重新选择`\n                                                  })\n                                                  return\n                                                }\n                                                const { orgId, id, taxRate, serviceType, orderType, batchNo} = receiveFormModel.qReceive\n                                                selectRows.items.forEach(t => {\n                                                  t.orgId = orgId\n                                                  t.orderId = id\n                                                  t.serviceType = serviceType\n                                                  t.orderType = orderType\n                                                  t.batchNo = batchNo || ''\n                                                  if ([20,-21].includes(serviceType)) {\n                                                    t.taxRate = 0\n                                                  } else {\n                                                    t.taxRate = taxRate || 0\n                                                  }\n                                                  t.taxFreePrice = 0\n                                                  t.taxIncludedPrice = 0\n                                                  t.oriMaterialId = t.oriMaterialId || ''\n                                                })\n                                                this.$exposeds.get('tableEdit_lru2vhub').methods.growData('planAddSource', selectRows.items);\n                                                this.$sharedFns.resetSortCode('receive');\n                                                this.$sharedFns.resetEditPageBtnState('receive');\n                                                this.$exposeds.get('dialog_lrvsj0ao').model.dialogShow.value   =false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lrvsiynt",
                                          "__description": "确定"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrvsiyns",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lrvsiynp",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrvsiynn",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrvsiymu",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lrvsj0ap",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lrvsj0ao",
            "__description": "采购计划选材",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n                  const { filterPlanModel } = this.$dataModels\n                  filterPlanModel.singleTable.orderCode = ''\n                  filterPlanModel.singleTable.orgId = 0\n                  filterPlanModel.singleTable.planName = ''\n                  filterPlanModel.singleTable.purchaseMethod = ''\n                  this.$dataModels.selectRows.items = []\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_lr92jvpi",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "采购合同选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lqkh5cvd",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 4,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lqkh66x7",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lqkh67ih",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lqkh6ah2",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "80%",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [
                                    {
                                      "__nodeId": "elementRender_lqkh6bnn",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "basisCommonSelect",
                                        "elementOptions": {
                                          "__nodeId": "basisCommonSelect_lqkh6bnq",
                                          "__nodeName": "basisCommonSelect",
                                          "__nodeType": "baseNode",
                                          "__nodeEvent": {
                                            "onMounted": {
                                              "isOn": true,
                                              "fn": "async function onMountedFn(){\n\n                                                const { orgId, userId, tenantId,lastProject } = this.$globalVars.$context\n\n                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                  parameter: {\n                                                    \"url\":\"/ma3-contract/m-contract-supply-data-params\",\n                                                    \"basisDataType\":\"supplier\",\n                                                    \"orgId\": lastProject.id,\n                                                    \"fieldName\":\"supplierName\",\n                                                    \"condtionItems\":[],\n                                                    \"queryDataJson\":{}\n                                                  },\n                                                  defaultProps: {\n                                                    \"label\":\"supplierName\",\n                                                    \"value\": \"supplierId\",\n                                                    \"subLabel\":\"creditCode\",\n                                                    \"nextLabel\":\"nextLabel\"\n                                                  }\n                                                };\n\n\n                                              }"
                                            },
                                            "onSelectionChange": {
                                              "isOn": true,
                                              "fn": "async function onFnSelectionChange(item){\n                                                this.$exposeds.get('tableAsync_lqkh75sq').methods.loadData();\n\n\n                                              }"
                                            },
                                            "onClear": {
                                              "isOn": true,
                                              "fn": "async function onFnClear(){\n\n                                                this.$exposeds.get('tableAsync_lqkh75sq').methods.loadData();\n\n                                              }"
                                            }
                                          },
                                          "__nodeOptions": {
                                            "defaultText": "",
                                            "limit": 10,
                                            "defaultProps": {
                                              "label": "supplierName",
                                              "subLabel": "creditCode",
                                              "nextLabel": "nextLabel",
                                              "value": "supplierId"
                                            },
                                            "width": "100%",
                                            "dropdownHeight": "300px",
                                            "dropdownWidth": "240px",
                                            "clearable": true,
                                            "placeholder": "请选择",
                                            "searchPlaceholder": "请输入关键字搜索",
                                            "disabled": false,
                                            "searchEnable": true,
                                            "parameter": {
                                              "url": "",
                                              "basisDataType": "supplier",
                                              "orgId": 0,
                                              "fieldName": "",
                                              "condtionItems": [],
                                              "queryDataJson": {}
                                            },
                                            "addButton": false,
                                            "downloadIcon": false,
                                            "size": "default",
                                            "display": true,
                                            "permissionSetting": "",
                                            "modelName": "contractModel.singleTable.supplierId"
                                          },
                                          "__nodeKey": "nodeKey_basisCommonSelect_lqkh6bnq",
                                          "__description": "",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lqkh6bnn",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lqkh6c8y",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_lqkh6c8q",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入合同编号",
                                            "modelName": "contractModel.singleTable.contractCode",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_lqkh6c8q",
                                          "__description": "请输入合同编号",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lqkh6c8y",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lqkh6cu9",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_lqkh6cuq",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入物资名称",
                                            "modelName": "contractModel.singleTable.materialName",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_lqkh6cuq",
                                          "__description": "请输入物资名称",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lqkh6cu9",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lqkh6em4",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_lqkh6emq",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入规格型号",
                                            "modelName": "contractModel.singleTable.materialModel",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_lqkh6emq",
                                          "__description": "请输入规格型号",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lqkh6em4",
                                      "__description": ""
                                    }
                                  ],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_lqkh6gdx",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lqkh6gdq",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "查询",
                                            "type": "info",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "iconFont": "icon cs-common search"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n                                                this.$exposeds.get('tableAsync_lqkh75sq').methods.loadData();\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lqkh6gdq",
                                          "__description": "查询"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lqkh6gdx",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lqkh6ah2",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lqkh67ih",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lqkh66x7",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "240px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lqkh6yp9",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lqkh728u",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lqkh728v",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableAsync",
                                  "elementOptions": {
                                    "__nodeId": "tableAsync_lqkh75sq",
                                    "__nodeName": "tableAsync",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "sel",
                                            "label": "选择",
                                            "width": "50",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "",
                                            "type": "selection"
                                          },
                                          "id": "0_item_config_ltjnmgip"
                                        },
                                        {
                                          "attr": {
                                            "prop": "index",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "1_item_config_ltjnmgiq"
                                        },
                                        {
                                          "attr": {
                                            "prop": "contractCode",
                                            "label": "合同编号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "2_item_config_ltjnmgir"
                                        },
                                        {
                                          "attr": {
                                            "prop": "contractName",
                                            "label": "合同名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "3_item_config_ltjnmgis"
                                        },
                                        {
                                          "attr": {
                                            "prop": "supplierName",
                                            "label": "供应单位",
                                            "width": "220",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "4_item_config_ltjnmgit"
                                        },
                                        {
                                          "attr": {
                                            "prop": "purchaseMethod",
                                            "label": "采购方式",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_ltjnmgiu"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": "200",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "6_item_config_ltjnmgiv"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "7_item_config_ltjnmgiw"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "8_item_config_ltjnmgix"
                                        },
                                        {
                                          "attr": {
                                            "prop": "netQuantity",
                                            "label": "数量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "9_item_config_ltjnmgiy"
                                        },
                                        {
                                          "attr": {
                                            "prop": "taxRate",
                                            "label": "税率",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "10_item_config_ltjnmgiz"
                                        },
                                        {
                                          "attr": {
                                            "prop": "taxFreePrice",
                                            "label": "不含税单价",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "11_item_config_ltjnmgj0"
                                        },
                                        {
                                          "attr": {
                                            "prop": "taxIncludedPrice",
                                            "label": "含税单价",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "12_item_config_ltjnmgj1"
                                        }
                                      ],
                                      "columnSlots": [],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {
                                      "onSelectionChange": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnSelectionChange(rows){\n                                          if (rows !== null) {\n                                            this.$dataModels.selectRelaObj.selectRows = []\n                                            this.$dataModels.selectRelaObj.selectRows = this.$dataModels.selectRelaObj.selectRows.concat(rows)\n                                            this.$dataModels.selectRelaObj.items = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n\n                                            this.$exposeds.get('tableOnly_lrzs5gkq').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                          }\n\n                                          // // this.$exposeds.get('tableEdit_lqkkqr1i').methods.growData('demoSource', []);\n                                          // this.$dataModels.receiveFormModel.materialItems = [];\n                                          // this.$currentInstance.exposed.model.selectRows.value = rows;\n                                          // // this.$exposeds.get('tableEdit_lqkkqr1i').methods.growData('demoSource',rows);\n                                          // // 获取节点导出模型\n                                          // console.log(rows);\n                                          // //\n                                          // let mapObj = {}\n\n                                          // this.$exposeds.get('tableOnly_lrzs5gkq').model.tableData.value.forEach(item=>{\n                                          //   mapObj[item.id] = item\n                                          // })\n                                          // rows.forEach(ele => {\n                                          //   if(!mapObj[ele.id]){\n\n                                          //     this.$exposeds.get('tableOnly_lrzs5gkq').model.tableData.value.push(ele)\n                                          //   }\n                                          // })\n\n                                        }"
                                      },
                                      "onMounted": {
                                        "isOn": true,
                                        "fn": "async function onMountedFn(){\n\n\n                                          this.$currentInstance.exposed.methods.loadData();\n\n\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(row, column){\n                                          row.taxRate = row.taxRate+'%'\n                                          console.log('rowClick')\n                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                          ref._.setupState.toggleRowSelection(row)\n                                        }"
                                      },
                                      "onLoadData": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnLoadData(params){\n                                          // 保留其他页数据\n                                          this.$dataModels.selectRelaObj.otherPageSelect = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n                                          this.$currentInstance.exposed.model.tableLoading.value = true\n                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n\n                                          await this.$requestFns.queryPurchaseContractMaterial(params).then(data => {\n                                            this.$currentInstance.exposed.model.tableData.value = data.data\n                                            this.$currentInstance.exposed.model.tableLoading.value = false\n                                          })\n\n\n                                          // 处理勾选\n                                          this.$currentInstance.exposed.model.tableData.value.rows.forEach(row => {\n                                            let otherRow = {}\n                                            let otherRowIndex = -1\n                                            const exist = this.$dataModels.selectRelaObj.otherPageSelect.forEach((item, i) => {\n                                              if (row.id === item.id) {\n                                                otherRow = item\n                                                otherRowIndex = i\n                                              }\n                                            })\n                                            // 将本页存在的重新勾选\n                                            if (otherRow.id) {\n                                              this.$dataModels.selectRelaObj.otherPageSelect.splice(otherRowIndex, 1)\n                                              ref._.setupState.toggleRowSelection(row)\n                                            }\n                                          })\n\n\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_tableAsync_lqkh75sq",
                                    "__description": "",
                                    "__nodeStyle": {}
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lqkh728v",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lqkh728u",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lqkh6yp9",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-3",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "240px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrzs5g77",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrzs5gfw",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lrzs5gfx",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableOnly",
                                  "elementOptions": {
                                    "__nodeId": "tableOnly_lrzs5gkq",
                                    "__nodeName": "tableOnly",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "op",
                                            "label": "操作",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "op",
                                            "fixed": "right"
                                          }
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "op",
                                          "columRender": {
                                            "__nodeId": "columRender_lrzsuarb",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "button",
                                              "elementOptions": {
                                                "__nodeId": "button_lrzsuarq",
                                                "__nodeName": "button",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "size": "small",
                                                  "plain": true,
                                                  "content": "删除",
                                                  "type": "danger",
                                                  "text": true,
                                                  "link": false,
                                                  "round": false,
                                                  "circle": false,
                                                  "loading": false,
                                                  "disabled": false,
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "icon": "Delete"
                                                },
                                                "__nodeEvent": {
                                                  "onClick": {
                                                    "type": "system",
                                                    "isOn": true,
                                                    "fn": "async function fnName(row,a){\n                                                      console.log(row,a);\n\n                                                      let index = this.$dataModels.selectRelaObj.items.indexOf(row)\n\n                                                      this.$dataModels.selectRelaObj.items.splice(index, 1)\n                                                      this.$exposeds.get('tableOnly_lrzs5gkq').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                      const ref = this.$exposeds.get('tableAsync_lqkh75sq').methods.getNativeRefs();\n                                                      // 移除上方表格数据,判断存在则只改本页勾选状态。不存在则修改其他页数据\n                                                      const existData = this.$exposeds.get('tableAsync_lqkh75sq').model.tableData.value.rows.filter(item => {\n                                                        return item.id === row.id\n                                                      })\n                                                      if (existData.length) {\n                                                        ref._.setupState.toggleRowSelection(existData[0])\n                                                      } else {\n                                                        index = this.$dataModels.selectRelaObj.otherPageSelect.indexOf(row)\n                                                        this.$dataModels.selectRelaObj.otherPageSelect.splice(index, 1)\n                                                      }\n\n\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_button_lrzsuarq",
                                                "__description": "删除"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_lrzsuarb",
                                            "__description": ""
                                          },
                                          "propName": "操作"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "defaultExpandAll": false,
                                      "rowKey": "id",
                                      "lazy": false,
                                      "treeProps": {
                                        "hasChildren": "hasChildren",
                                        "children": "children"
                                      },
                                      "expandRowKeys": [],
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {},
                                    "__nodeKey": "nodeKey_tableOnly_lrzs5gkq",
                                    "__description": "",
                                    "__nodeStyle": {}
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lrzs5gfx",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrzs5gfw",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrzs5g77",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-4",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lqkh6mvq",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lqkh6pu6",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "base",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lqkh6qfh",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": null,
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_lqkh6r0r",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lqkh6r0q",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "确定",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "icon": "CircleCheck"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n\n                                                const { receiveFormModel } = this.$dataModels\n                                                const { taxRate, batchNo } = receiveFormModel.qReceive\n                                                const arr = []\n\n\n                                                this.$dataModels.selectRelaObj.items.forEach(t => {\n                                                  t.orgId = receiveFormModel.qReceive.orgId\n                                                  t.orderId = receiveFormModel.qReceive.id\n                                                  t.batchNo = batchNo\n\n                                                  t.serviceType = receiveFormModel.qReceive.serviceType\n                                                  t.orderType = receiveFormModel.qReceive.orderType\n                                                  if ([20, -21].includes(receiveFormModel.qReceive.serviceType)) {\n                                                    t.taxRate = 0\n                                                    t.taxIncludedPrice = t.taxFreePrice\n                                                  } else {\n                                                    t.taxRate = taxRate ? taxRate : t.taxRate || 0\n                                                  }\n                                                  t.id = t.materialId\n\n\n                                                  arr.push(t)\n\n                                                })\n\n                                                // 验收卡控逻辑\n                                                const newRows = await this.$sharedFns.editReceiveControl(arr);\n                                                console.log(newRows);\n                                                debugger\n                                                this.$exposeds.get('tableEdit_lru2vhub').methods.growData('addSource', newRows);\n\n                                                this.$sharedFns.resetSortCode('receive');\n                                                this.$sharedFns.resetEditPageBtnState('receive');\n                                                this.$dataModels.selectRelaObj.items.length = 0\n\n                                                this.$assemCore.setForm('selectRelaObj');\n                                                this.$assemCore.setForm('contractModel');\n                                                this.$exposeds.get('dialog_lr92jvpi').model.dialogShow.value = false;\n\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lqkh6r0q",
                                          "__description": "确定"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lqkh6r0r",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lqkh6qfh",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lqkh6pu6",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lqkh6mvq",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lqkh5cvd",
                "__description": ""
              },
              "__nodeKey": "nodeKey_dialog_lr92jvpi",
              "__description": "采购合同选材",
              "destroyOnClose": true
            },
            "__description": "采购合同选材",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n\n                  this.$dataModels.selectRelaObj.items.length = 0\n\n                  this.$assemCore.setForm('selectRelaObj');\n                  this.$assemCore.setForm('contractModel');\n\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_lr92jvpl",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "60%",
              "title": "总控计划选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lr63lbx8",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": true,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lr650uof",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lr73cvc2",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "base",
                              "clearPadding": [
                                "left",
                                "top",
                                "right",
                                "bottom"
                              ],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexBox",
                              "defaultSlot": {
                                "__nodeId": "flexBox_lr73cvkd",
                                "__nodeName": "flexBox",
                                "__nodeType": "baseNode",
                                "__nodeOptions": {
                                  "display": true,
                                  "permissionSetting": "",
                                  "isRow": false,
                                  "itemNum": 4,
                                  "width": "100%",
                                  "height": "100%",
                                  "itemConfig": [
                                    {
                                      "tag": "item-1",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "",
                                      "contentType": "container",
                                      "paddingSize": "large",
                                      "isHidden": false,
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lr73cvkk",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lr73cwii",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": true,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "flexLine",
                                              "defaultSlot": {
                                                "__nodeId": "flexLine_lr73cwzy",
                                                "__nodeName": "flexLine",
                                                "__nodeType": "baseNode",
                                                "__nodeStyle": {},
                                                "__nodeEvent": {},
                                                "__nodeOptions": {
                                                  "leftWidth": "85%",
                                                  "background": false,
                                                  "leftPadding": false,
                                                  "rightPadding": false,
                                                  "paddingSize": "",
                                                  "leftClearPadding": [],
                                                  "rightClearPadding": [],
                                                  "__activeSlot": "defaultSlot",
                                                  "defaultSlot": [
                                                    {
                                                      "__nodeId": "elementRender_lr73cx82",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "input",
                                                        "elementOptions": {
                                                          "__nodeId": "input_lr73cx81",
                                                          "__nodeName": "input",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "plain": false,
                                                            "clearable": true,
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "type": "text",
                                                            "placeholder": "请输入物资名称",
                                                            "modelName": "receiveInventory.singleTable.materialName",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_input_lr73cx81",
                                                          "__description": "请输入物资名称",
                                                          "__nodeStyle": {
                                                            "width": "200px"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lr73cx82",
                                                      "__description": ""
                                                    },
                                                    {
                                                      "__nodeId": "elementRender_lr73cxgm",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "input",
                                                        "elementOptions": {
                                                          "__nodeId": "input_lr73cxgq",
                                                          "__nodeName": "input",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "size": "default",
                                                            "plain": false,
                                                            "clearable": true,
                                                            "readonly": false,
                                                            "disabled": false,
                                                            "type": "text",
                                                            "placeholder": "请输入规格型号",
                                                            "modelName": "receiveInventory.singleTable.materialModel",
                                                            "display": true,
                                                            "permissionSetting": ""
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_input_lr73cxgq",
                                                          "__description": "请输入规格型号",
                                                          "__nodeStyle": {
                                                            "width": "200px"
                                                          }
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lr73cxgm",
                                                      "__description": ""
                                                    }
                                                  ],
                                                  "rightSlot": [
                                                    {
                                                      "__nodeId": "elementRender_lr73cyey",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "button",
                                                        "elementOptions": {
                                                          "__nodeId": "button_lr73cyeq",
                                                          "__nodeName": "button",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "modelName": "",
                                                            "size": "default",
                                                            "plain": false,
                                                            "content": "查询",
                                                            "type": "info",
                                                            "text": false,
                                                            "link": false,
                                                            "round": false,
                                                            "circle": false,
                                                            "loading": false,
                                                            "disabled": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "iconFont": "icon cs-common search"
                                                          },
                                                          "__nodeEvent": {
                                                            "onClick": {
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n\n\n                                                                this.$exposeds.get('tableReport_lr73d5h3').methods.loadData();\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_button_lr73cyeq",
                                                          "__description": "查询"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lr73cyey",
                                                      "__description": ""
                                                    }
                                                  ],
                                                  "display": true,
                                                  "permissionSetting": ""
                                                },
                                                "__nodeKey": "nodeKey_flexLine_lr73cwzy",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lr73cwii",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lr73cvkk",
                                        "__description": ""
                                      },
                                      "clearPadding": [
                                        "top",
                                        "right",
                                        "left"
                                      ]
                                    },
                                    {
                                      "tag": "item-2",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "240px",
                                      "paddingSize": "large",
                                      "clearPadding": [
                                        "left",
                                        "top",
                                        "right"
                                      ],
                                      "contentType": "container",
                                      "isHidden": false,
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lr73cvkq",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lr73czl3",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": true,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "element",
                                              "defaultSlot": {
                                                "__nodeId": "elementRender_lr73czl3",
                                                "__nodeName": "elementRender",
                                                "__nodeType": "renderNode",
                                                "__nodeOptions": {
                                                  "renderType": "tableReport",
                                                  "elementOptions": {
                                                    "__nodeId": "tableReport_lr73d5h3",
                                                    "__nodeName": "tableReport",
                                                    "__nodeType": "baseNode",
                                                    "__nodeEvent": {
                                                      "onMounted": {
                                                        "isOn": true,
                                                        "fn": "async function onMountedFn(){\n\n\n                                                          this.$currentInstance.exposed.methods.loadData();\n\n\n                                                        }"
                                                      },
                                                      "onLoadData": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function fnLoadData(params) {\n                                                          const { qReceive} = this.$dataModels.receiveFormModel\n\n                                                          const { lastProject } = this.$globalVars.$context\n\n                                                          this.$dataModels.selectRelaObj.otherPageSelect = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n                                                          this.$currentInstance.exposed.model.tableLoading.value = true\n                                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n\n\n                                                          await this.$requestFns.queryReceiveGhPlanMaterials({\n                                                            orgId: this.$dataModels.rdsFormModel.qReceive.orgId || this.$globalVars.$context.orgId,\n                                                            lastOrgId: lastProject.id,\n                                                            classId: this.$dataModels.receiveInventory.singleTable.classId || 0\n                                                          }).then(res=>{\n                                                            if (!res.error) {\n                                                              this.$currentInstance.exposed.model.tableData.value = res.data\n                                                            }\n                                                          })\n\n\n                                                          this.$currentInstance.exposed.model.tableData.value.forEach(row => {\n                                                            let otherRow = {}\n                                                            let otherRowIndex = -1\n                                                            const exist = this.$dataModels.selectRelaObj.otherPageSelect.forEach((item, i) => {\n                                                              if (row.materialId === item.materialId) {\n                                                                otherRow = item\n                                                                otherRowIndex = i\n                                                              }\n                                                            })\n                                                            // 将本页存在的重新勾选\n                                                            if (otherRow.materialId) {\n                                                              this.$dataModels.selectRelaObj.otherPageSelect.splice(otherRowIndex, 1)\n                                                              ref._.setupState.toggleRowSelection(row)\n                                                            }\n                                                          })\n\n\n\n                                                          this.$currentInstance.exposed.model.tableLoading.value = false;\n                                                        }"
                                                      },
                                                      "onRowClick": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function fnRowClick(row, column){\n\n\n                                                          console.log('rowClick')\n                                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                                          ref._.setupState.toggleRowSelection(row)\n                                                        }"
                                                      },
                                                      "onSelectionChange": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function fnSelectionChange(rows){\n                                                          if (this.$exposeds.get('tableReport_lr73d5h3').model.tableData.value && rows.length == 0) {\n                                                            this.$dataModels.selectRelaObj.otherPageSelect = this.$dataModels.selectRelaObj.items\n                                                          }\n                                                          if (rows !== null) {\n                                                            this.$dataModels.selectRelaObj.selectRows = []\n                                                            this.$dataModels.selectRelaObj.selectRows = this.$dataModels.selectRelaObj.selectRows.concat(rows)\n                                                            this.$dataModels.selectRelaObj.items = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n\n                                                            this.$exposeds.get('tableOnly_lta3zuw5').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                          }\n\n                                                        }"
                                                      },
                                                      "onPageChange": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function fnPageChangeName(currentSize,pageSize){\n\n                                                          this.$dataModels.selectRelaObj.otherPageSelect = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n\n                                                          const ref = this.$exposeds.get('tableReport_lr73d5h3').methods.getNativeRefs();\n                                                          this.$currentInstance.exposed.model.tableData.value.forEach(row => {\n                                                            let otherRow = {}\n                                                            let otherRowIndex = -1\n                                                            const exist = this.$dataModels.selectRelaObj.otherPageSelect.forEach((item, i) => {\n                                                              if (row.materialId === item.materialId) {\n                                                                otherRow = item\n                                                                otherRowIndex = i\n                                                              }\n                                                            })\n                                                            // 将本页存在的重新勾选\n                                                            if (otherRow.materialId) {\n                                                              this.$dataModels.selectRelaObj.otherPageSelect.splice(otherRowIndex, 1)\n                                                              ref._.setupState.toggleRowSelection(row)\n                                                            }\n                                                          })\n\n\n                                                        }"
                                                      }
                                                    },
                                                    "__nodeOptions": {
                                                      "display": true,
                                                      "permissionSetting": "",
                                                      "requestFn": "",
                                                      "columnConfigs": [
                                                        {
                                                          "attr": {
                                                            "prop": "code",
                                                            "type": "selection",
                                                            "label": "编码",
                                                            "width": 60,
                                                            "headerAlign": "center",
                                                            "align": "center"
                                                          },
                                                          "id": "0_item_config_ltf4ee51"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "code",
                                                            "label": "序号",
                                                            "width": "60",
                                                            "headerAlign": "center",
                                                            "align": "center",
                                                            "scopedSlot": "",
                                                            "type": "index"
                                                          },
                                                          "id": "1_item_config_ltf4ee52"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialCode",
                                                            "label": "物资编码",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "2_item_config_ltf4ee53"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialName",
                                                            "label": "物资名称",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "3_item_config_ltf4ee54"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialModel",
                                                            "label": "规格型号",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "4_item_config_ltf4ee55"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialUnit",
                                                            "label": "计量单位",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "5_item_config_ltf4ee56"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "quantity",
                                                            "label": "计划量",
                                                            "width": "80",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "6_item_config_ltf4ee57"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "alQuantity",
                                                            "label": "已验收量",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "7_item_config_ltf4ee58"
                                                        }
                                                      ],
                                                      "columnSlots": [],
                                                      "columnHeaderSlots": [],
                                                      "showSummary": false,
                                                      "pagination": {
                                                        "currentSize": 10,
                                                        "pageSizes": [
                                                          10,
                                                          20,
                                                          30,
                                                          50
                                                        ],
                                                        "layout": "sizes,prev,pager,next,total"
                                                      },
                                                      "tableCodeRemark": "",
                                                      "tableCode": "",
                                                      "isCustom": false
                                                    },
                                                    "__nodeKey": "nodeKey_tableReport_lr73d5h3",
                                                    "__description": ""
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_elementRender_lr73czl3",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lr73czl3",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lr73cvkq",
                                        "__description": ""
                                      }
                                    },
                                    {
                                      "tag": "item-3",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "240px",
                                      "paddingSize": "large",
                                      "clearPadding": [
                                        "left",
                                        "right",
                                        "top"
                                      ],
                                      "contentType": "container",
                                      "isHidden": false,
                                      "permissionSetting": "",
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lta3yolq",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lta3zp43",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": true,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "element",
                                              "defaultSlot": {
                                                "__nodeId": "elementRender_lta3zp42",
                                                "__nodeName": "elementRender",
                                                "__nodeType": "renderNode",
                                                "__nodeOptions": {
                                                  "renderType": "tableOnly",
                                                  "elementOptions": {
                                                    "__nodeId": "tableOnly_lta3zuw5",
                                                    "__nodeName": "tableOnly",
                                                    "__nodeType": "baseNode",
                                                    "__nodeOptions": {
                                                      "display": true,
                                                      "permissionSetting": "",
                                                      "requestFn": "",
                                                      "columnConfigs": [
                                                        {
                                                          "attr": {
                                                            "prop": "code",
                                                            "type": "index",
                                                            "label": "序号",
                                                            "width": 60,
                                                            "headerAlign": "center",
                                                            "align": "center"
                                                          },
                                                          "id": "0_item_config_ltf4ee5l"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialName",
                                                            "label": "物资名称",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "1_item_config_ltf4ee5m"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialModel",
                                                            "label": "规格型号",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "2_item_config_ltf4ee5n"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialUnit",
                                                            "label": "计量单位",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "3_item_config_ltf4ee5o"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "quantity",
                                                            "label": "计划量",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "4_item_config_ltf4ee5p"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "op",
                                                            "label": "操作",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "center",
                                                            "scopedSlot": "op",
                                                            "fixed": "right"
                                                          },
                                                          "id": "5_item_config_ltf4ee5q"
                                                        }
                                                      ],
                                                      "columnSlots": [
                                                        {
                                                          "code": "op",
                                                          "columRender": {
                                                            "__nodeId": "columRender_lta40wgj",
                                                            "__nodeName": "columRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "button",
                                                              "elementOptions": {
                                                                "__nodeId": "button_lta40wgq",
                                                                "__nodeName": "button",
                                                                "__nodeType": "columnNode",
                                                                "__nodeOptions": {
                                                                  "modelName": "",
                                                                  "size": "small",
                                                                  "plain": false,
                                                                  "content": "删除",
                                                                  "type": "danger",
                                                                  "text": false,
                                                                  "link": true,
                                                                  "round": false,
                                                                  "circle": false,
                                                                  "loading": false,
                                                                  "disabled": false,
                                                                  "display": true,
                                                                  "permissionSetting": "",
                                                                  "tooltip": false,
                                                                  "tooltipEffect": "dark",
                                                                  "tooltipContent": "显示的内容",
                                                                  "tooltipPlacement": "bottom",
                                                                  "icon": "Delete"
                                                                },
                                                                "__nodeEvent": {
                                                                  "onClick": {
                                                                    "type": "system",
                                                                    "isOn": true,
                                                                    "fn": "async function fnName(row) {\n\n                                                                      let index = this.$dataModels.selectRelaObj.items.indexOf(row)\n\n                                                                      this.$dataModels.selectRelaObj.items.splice(index, 1)\n                                                                      this.$exposeds.get('tableOnly_lta3zuw5').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                                      const ref = this.$exposeds.get('tableReport_lr73d5h3').methods.getNativeRefs();\n                                                                      // 移除上方表格数据,判断存在则只改本页勾选状态。不存在则修改其他页数据\n                                                                      const existData = this.$exposeds.get('tableReport_lr73d5h3').model.tableData.value.filter(item => {\n                                                                        return item.materialId === row.materialId\n                                                                      })\n                                                                      if (existData.length) {\n                                                                        ref._.setupState.toggleRowSelection(existData[0])\n                                                                      } else {\n                                                                        index = this.$dataModels.selectRelaObj.otherPageSelect.indexOf(row)\n                                                                        this.$dataModels.selectRelaObj.otherPageSelect.splice(index, 1)\n                                                                      }\n\n\n                                                                    }"
                                                                  }
                                                                },
                                                                "__nodeKey": "nodeKey_button_lta40wgq",
                                                                "__description": "删除"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_columRender_lta40wgj",
                                                            "__description": ""
                                                          },
                                                          "propName": "操作"
                                                        }
                                                      ],
                                                      "columnHeaderSlots": [],
                                                      "showSummary": false,
                                                      "pagination": {
                                                        "currentSize": 20,
                                                        "pageSizes": [
                                                          10,
                                                          20,
                                                          30,
                                                          50
                                                        ],
                                                        "layout": "sizes, prev, pager, next, total"
                                                      },
                                                      "defaultExpandAll": false,
                                                      "rowKey": "id",
                                                      "lazy": false,
                                                      "treeProps": {
                                                        "hasChildren": "hasChildren",
                                                        "children": "children"
                                                      },
                                                      "expandRowKeys": [],
                                                      "tableCodeRemark": "",
                                                      "tableCode": "",
                                                      "isCustom": false
                                                    },
                                                    "__nodeEvent": {},
                                                    "__nodeKey": "nodeKey_tableOnly_lta3zuw5",
                                                    "__description": ""
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_elementRender_lta3zp42",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lta3zp43",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lta3yolq",
                                        "__description": ""
                                      }
                                    },
                                    {
                                      "tag": "item-4",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "",
                                      "paddingSize": "base",
                                      "clearPadding": [
                                        "left",
                                        "top",
                                        "right"
                                      ],
                                      "contentType": "container",
                                      "isHidden": false,
                                      "permissionSetting": "",
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lr73d3lq",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeOptions": {
                                          "renderType": "box",
                                          "containerOptions": {
                                            "__nodeId": "box_lr73d3tq",
                                            "__nodeName": "box",
                                            "__nodeType": "baseNode",
                                            "__nodeEvent": {},
                                            "__nodeOptions": {
                                              "shadow": false,
                                              "border": false,
                                              "background": true,
                                              "paddingSize": "small",
                                              "clearPadding": [
                                                "bottom"
                                              ],
                                              "clearBorder": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "flexLine",
                                              "defaultSlot": {
                                                "__nodeId": "flexLine_lr73d42q",
                                                "__nodeName": "flexLine",
                                                "__nodeType": "baseNode",
                                                "__nodeStyle": {},
                                                "__nodeEvent": {},
                                                "__nodeOptions": {
                                                  "leftWidth": "50%",
                                                  "background": false,
                                                  "leftPadding": true,
                                                  "rightPadding": true,
                                                  "paddingSize": "",
                                                  "leftClearPadding": [],
                                                  "rightClearPadding": [],
                                                  "__activeSlot": "defaultSlot",
                                                  "defaultSlot": null,
                                                  "rightSlot": [
                                                    {
                                                      "__nodeId": "elementRender_lr73d4jq",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "button",
                                                        "elementOptions": {
                                                          "__nodeId": "button_lr73d4jq",
                                                          "__nodeName": "button",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "modelName": "",
                                                            "size": "default",
                                                            "plain": false,
                                                            "content": "确定",
                                                            "type": "primary",
                                                            "text": false,
                                                            "link": false,
                                                            "round": false,
                                                            "circle": false,
                                                            "loading": false,
                                                            "disabled": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "icon": "CircleCheckFilled"
                                                          },
                                                          "__nodeEvent": {
                                                            "onClick": {
                                                              "type": "system",
                                                              "isOn": true,
                                                              "fn": "async function fnName(){\n\n                                                                if (this.$dataModels.receiveFormModel.qReceive.taxRate) {\n                                                                  this.$dataModels.selectRelaObj.items.forEach(item => {\n                                                                    item.taxRate = parseFloat(this.$dataModels.receiveFormModel.qReceive.taxRate);\n                                                                    item.surplusQuantity = item.quantity - item.alQuantity\n                                                                  })\n                                                                }\n                                                                if (this.$dataModels.selectRelaObj.items && this.$dataModels.selectRelaObj.items.length > 0) {\n\n                                                                  this.$exposeds.get('tableEdit_lqivnbp9').methods.growData('planSource', this.$dataModels.selectRelaObj.items);\n\n\n                                                                }\n                                                                this.$dataModels.selectRelaObj.items.length = 0\n                                                                this.$assemCore.setForm('selectRelaObj');\n                                                                this.$exposeds.get('dialog_lr63lbx1').model.dialogShow.value = false;\n\n\n                                                              }"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_button_lr73d4jq",
                                                          "__description": "确定"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lr73d4jq",
                                                      "__description": ""
                                                    }
                                                  ],
                                                  "display": true,
                                                  "permissionSetting": ""
                                                },
                                                "__nodeKey": "nodeKey_flexLine_lr73d42q",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_box_lr73d3tq",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lr73d3lq",
                                        "__description": ""
                                      }
                                    }
                                  ]
                                },
                                "__nodeEvent": {},
                                "__nodeKey": "nodeKey_flexBox_lr73cvkd",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lr73cvc2",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lr650uof",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lr63lbx8",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lr92jvpl",
            "__description": "总控计划选材"
          },
          {
            "__nodeId": "dialog_lrx5ijry",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "库存选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lrx5ijrz",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 4,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrx5ijs0",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrx5iizf",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lrx5iizh",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [
                                    {
                                      "__nodeId": "elementRender_lrx5iizi",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_lrx5iizj",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入物资名称",
                                            "modelName": "inventoryFilterModel.returnReceive.materialName",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_lrx5iizj",
                                          "__description": "请输入物资名称",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrx5iizi",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lrx5iizk",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_lrx5iizl",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入规格型号",
                                            "modelName": "inventoryFilterModel.returnReceive.materialModel",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_lrx5iizl",
                                          "__description": "请输入规格型号",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrx5iizk",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lrx5iizm",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lrx5iizn",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "查询",
                                            "type": "info",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "icon": "Search"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n                                                this.$exposeds.get('tableAsync_lrx5iizq').model.tableLoading.value = true\n                                                const { selectRows} =  this.$dataModels\n                                                selectRows.singleTable.isChoose=true\n                                                this.$exposeds.get('tableAsync_lrx5iizq').methods.loadData(true);\n                                                // 设置勾选状态\n\n                                                const tableRef = this.$exposeds.get('tableAsync_lrx5iizq').methods.getNativeRefs();\n\n                                                if (selectRows.items.length) {\n\n                                                  this.$exposeds.get('tableAsync_lrx5iizq').model.tableData.value.rows.forEach((row) => {\n                                                    const idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                    if (idx > -1) {\n                                                      tableRef._.setupState.toggleRowSelection(row)\n                                                    }\n                                                  })\n                                                }\n\n                                                this.$exposeds.get('tableAsync_lrx5iizq').model.tableLoading.value = false\n                                                selectRows.singleTable.isChoose = false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lrx5iizn",
                                          "__description": "查询"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrx5iizm",
                                      "__description": ""
                                    }
                                  ],
                                  "rightSlot": null,
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lrx5iizh",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrx5iizf",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrx5ijs0",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "300px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrx5iizd",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrx5iizo",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lrx5iizp",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableAsync",
                                  "elementOptions": {
                                    "__nodeId": "tableAsync_lrx5iizq",
                                    "__nodeName": "tableAsync",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "selection",
                                            "label": "选择",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "0_item_config_luaj1zql"
                                        },
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "label": "序号",
                                            "width": "60",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "",
                                            "type": "index"
                                          },
                                          "id": "1_item_config_luaj1zqm"
                                        },
                                        {
                                          "attr": {
                                            "prop": "exitTime",
                                            "label": "入库时间",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "2_item_config_luaj1zqn"
                                        },
                                        {
                                          "attr": {
                                            "prop": "serviceType",
                                            "label": "类型",
                                            "width": "60",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "serviceType"
                                          },
                                          "id": "3_item_config_luaj1zqo"
                                        },
                                        {
                                          "attr": {
                                            "prop": "orderOrigin",
                                            "label": "单据来源",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "orderOrigin"
                                          },
                                          "id": "4_item_config_luaj1zqp"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_luaj1zqq"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": "120",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "6_item_config_luaj1zqr"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "7_item_config_luaj1zqs"
                                        },
                                        {
                                          "attr": {
                                            "prop": "netQuantity",
                                            "label": "收料量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "8_item_config_luaj1zqt"
                                        },
                                        {
                                          "attr": {
                                            "prop": "roughQuantity",
                                            "label": "库存量",
                                            "width": "120",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "9_item_config_luaj1zqu"
                                        },
                                        {
                                          "attr": {
                                            "prop": "taxRate",
                                            "label": "税率(%)",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "10_item_config_luaj1zqv"
                                        },
                                        {
                                          "attr": {
                                            "prop": "taxIncludedPrice",
                                            "label": "含税单价(元)",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "11_item_config_luaj1zqw"
                                        },
                                        {
                                          "attr": {
                                            "prop": "orderCode",
                                            "label": "单据编号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "12_item_config_luaj1zqx"
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemBarCode",
                                            "label": "物资条码",
                                            "width": "180",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "13_item_config_luaj1zqy"
                                        },
                                        {
                                          "attr": {
                                            "prop": "manufacturer",
                                            "label": "生产厂商",
                                            "width": "110",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "14_item_config_luaj1zqz"
                                        },
                                        {
                                          "attr": {
                                            "prop": "batchNo",
                                            "label": "炉批号",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "15_item_config_luaj1zr0"
                                        },
                                        {
                                          "attr": {
                                            "prop": "storagePlace",
                                            "label": "存放地",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "16_item_config_luaj1zr1"
                                        },
                                        {
                                          "attr": {
                                            "prop": "testReportNo",
                                            "label": "实验报告号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "17_item_config_luaj1zr2"
                                        },
                                        {
                                          "attr": {
                                            "prop": "skillCardNo",
                                            "label": "技证号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "18_item_config_luaj1zr3"
                                        },
                                        {
                                          "attr": {
                                            "prop": "acceptanceRecord",
                                            "label": "验收情况记录",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "19_item_config_luaj1zr4"
                                        },
                                        {
                                          "attr": {
                                            "prop": "remark",
                                            "label": "明细备注",
                                            "width": "120",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "20_item_config_luaj1zr5"
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "serviceType",
                                          "columRender": {
                                            "__nodeId": "columRender_lrx6nb2g",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "tag",
                                              "elementOptions": {
                                                "__nodeId": "tag_lrx6nb2f",
                                                "__nodeName": "tag",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "content": "标签",
                                                  "closable": false,
                                                  "hit": false,
                                                  "round": false,
                                                  "effect": "light",
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "size": "small"
                                                },
                                                "__nodeEvent": {
                                                  "onValueRender": {
                                                    "isOn": true,
                                                    "fn": "function onValueRenderFn(row){\n                                                      const { serviceType} = row\n                                                      return {\n                                                        content: serviceType==10?'收料':'调入'\n                                                      }\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_tag_lrx6nb2f",
                                                "__description": "标签"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_lrx6nb2g",
                                            "__description": ""
                                          },
                                          "propName": "类型"
                                        },
                                        {
                                          "code": "orderOrigin",
                                          "columRender": {
                                            "__nodeId": "columRender_lrx6nbuv",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "tag",
                                              "elementOptions": {
                                                "__nodeId": "tag_lrx6nbuu",
                                                "__nodeName": "tag",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "content": "标签",
                                                  "closable": false,
                                                  "hit": false,
                                                  "round": false,
                                                  "effect": "light",
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "size": "small"
                                                },
                                                "__nodeEvent": {
                                                  "onValueRender": {
                                                    "isOn": true,
                                                    "fn": "function onValueRenderFn(row){\n                                                      const { orderOrigin} = row\n                                                      return {\n                                                        content: orderOrigin === 0 ? '过磅' : orderOrigin === 1?'APP':'PC',\n                                                        type: orderOrigin === 0 ? 'primary' : orderOrigin === 1 ? 'success' : 'info'\n                                                      }\n\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_tag_lrx6nbuu",
                                                "__description": "标签"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_lrx6nbuv",
                                            "__description": ""
                                          },
                                          "propName": "单据来源"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "isOn": true,
                                        "fn": "async function onMountedFn(){\n\n\n                                          this.$currentInstance.exposed.methods.loadData(true);\n\n\n                                        }"
                                      },
                                      "onSelectionChange": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnSelectionChange(rows) {\n                                          const { selectRows } = this.$dataModels\n                                          if (selectRows.singleTable.isChoose) {\n                                            // 判断是手动刷新\n                                            return\n                                          }\n                                          if (rows.length) {\n                                            rows.forEach(row => {\n                                              const idx = selectRows.items.findIndex(t => t.itemBarCode == row.itemBarCode)\n                                              if (idx == -1) {\n                                                selectRows.items.push(row)\n                                              }\n                                            })\n                                          } else {\n                                            const newRows = this.$currentInstance.exposed.model.tableData.value.rows\n                                            newRows.forEach(row => {\n                                              const idx = selectRows.items.findIndex(t => t.itemBarCode == row.itemBarCode)\n                                              if (idx > -1) {\n                                                selectRows.items.splice(idx, 1)\n                                              }\n                                            })\n                                          }\n                                          this.$exposeds.get('tableReport_lrx5ij00').model.tableData.value = selectRows.items\n\n                                        }"
                                      },
                                      "onLoadData": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnLoadData(params){\n\n                                          const { selectRows } = this.$dataModels\n                                          selectRows.singleTable.isChoose = true\n                                          await this.$requestFns.queryInventoryData(params).then(res => {\n                                            this.$currentInstance.exposed.model.tableData.value = res.data\n                                          }).catch(err => {\n                                            this.$vueGlobal.$message({\n                                              type: 'error',\n                                              message: '获取物资信息失败'\n                                            })\n                                            return\n                                          })\n                                          // 设置勾选状态\n                                          if (selectRows.items.length) {\n                                            const tableRef = this.$currentInstance.exposed.methods.getNativeRefs()\n                                            this.$currentInstance.exposed.model.tableData.value.rows.forEach((row) => {\n                                              const idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                              if (idx > -1) {\n                                                tableRef._.setupState.toggleRowSelection(row)\n                                              }\n                                            })\n                                          }\n                                          selectRows.singleTable.isChoose = false\n\n                                        }"
                                      },
                                      "onSelect": {
                                        "type": "system",
                                        "isOn": false,
                                        "fn": "async function fnOnSelect(rows, currentRow) {\n                                          const { selectRows } = this.$dataModels\n                                          const idx = selectRows.items.findIndex(row => row.itemBarCode == currentRow.itemBarCode)\n                                          if (idx < 0) {\n                                            selectRows.items.push(currentRow)\n                                          } else {\n                                            selectRows.items.splice(idx, 1)\n                                          }\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(row, column){\n\n                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                          ref._.setupState.toggleRowSelection(row)\n\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_tableAsync_lrx5iizq",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lrx5iizp",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrx5iizo",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrx5iizd",
                        "__description": ""
                      },
                      "dragButtonPosition": "bottom"
                    },
                    {
                      "tag": "item-3",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "260px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "top",
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrx5iize",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "panel",
                          "containerOptions": {
                            "__nodeId": "panel_lrx5iizw",
                            "__nodeName": "panel",
                            "__nodeType": "baseNode",
                            "__nodeOptions": {
                              "showHeader": true,
                              "title": "已选列表",
                              "border": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lrx5iizz",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableReport",
                                  "elementOptions": {
                                    "__nodeId": "tableReport_lrx5ij00",
                                    "__nodeName": "tableReport",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function onMountedFn() {\n                                          const { selectRows } = this.$dataModels\n                                          // this.$currentInstance.exposed.model.tableData.value = selectRows.items\n                                        }"
                                      }
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "roughQuantity",
                                            "label": "库存量",
                                            "width": "120",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemBarCode",
                                            "label": "物资条码",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialId",
                                            "label": "操作",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "materialId"
                                          }
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "materialId",
                                          "columRender": {
                                            "__nodeId": "columRender_lrx5ij2y",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "button",
                                              "elementOptions": {
                                                "__nodeId": "button_lrx5ij2x",
                                                "__nodeName": "button",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "size": "small",
                                                  "plain": true,
                                                  "content": "删除",
                                                  "type": "danger",
                                                  "text": true,
                                                  "link": false,
                                                  "round": false,
                                                  "circle": false,
                                                  "loading": false,
                                                  "disabled": false,
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "icon": "Delete"
                                                },
                                                "__nodeEvent": {
                                                  "onClick": {
                                                    "type": "system",
                                                    "isOn": true,
                                                    "fn": "async function fnName(row){\n                                                      const { selectRows } = this.$dataModels\n                                                      const idx = selectRows.items.findIndex(t => t.itemBarCode == row.itemBarCode)\n                                                      selectRows.items.splice(idx,1)\n\n                                                      const tableRef =  this.$exposeds.get('tableAsync_lrx5iizq').methods.getNativeRefs();\n                                                      this.$exposeds.get('tableAsync_lrx5iizq').model.tableData.value.rows.forEach(t => {\n                                                        if (t.itemBarCode == row.itemBarCode) {\n                                                          tableRef._.setupState.toggleRowSelection(t)\n                                                        }\n                                                      })\n\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_button_lrx5ij2x",
                                                "__description": "按钮"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_lrx5ij2y",
                                            "__description": ""
                                          },
                                          "propName": "操作"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeKey": "nodeKey_tableReport_lrx5ij00",
                                    "__description": "",
                                    "__nodeStyle": {
                                      "height": "240px"
                                    }
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lrx5iizz",
                                "__description": ""
                              },
                              "toolSlot": null
                            },
                            "__nodeKey": "nodeKey_panel_lrx5iizw",
                            "__description": "已选列表"
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrx5iize",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-4",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "base",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrx5ij01",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrx5ij02",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lrx5ij04",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_lrx5ij05",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lrx5ij06",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "取消",
                                            "type": "primary",
                                            "text": true,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                this.$dataModels.selectRows.items = []\n                                                this.$dataModels.inventoryFilterModel.returnReceive.materialName = ''\n                                                this.$dataModels.inventoryFilterModel.returnReceive.materialModel = ''\n                                                this.$exposeds.get('dialog_lrx5ijry').model.dialogShow.value=false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lrx5ij06",
                                          "__description": "取消"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrx5ij05",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_lrx5ij07",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lrx5ij08",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "确定",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "icon": "CircleCheck"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                const { selectRows, receiveFormModel,configData} = this.$dataModels\n                                                const priceSettings = configData.priceDecimalDigit || 8\n                                                const { orgId, id, serviceType, orderType } = receiveFormModel.qReceive\n                                                // const arr = []\n                                                const items = selectRows.items.reduce((arr,t) => {\n                                                  if (receiveFormModel.qReceiveMoreMaterials.findIndex(q => q.itemBarCode == t.itemBarCode) < 0) {\n                                                    t.orgId = orgId\n                                                    t.orderId = id\n                                                    t.serviceType = serviceType\n                                                    t.orderType = orderType\n                                                    t.oriMaterialId = t.oriMaterialId || ''\n                                                    t.netQuantity = t.roughQuantity\n                                                    t.taxIncludedSum = Number(new Decimal(t.taxIncludedPrice).mul(t.netQuantity).toFixed(priceSettings))\n\n                                                    arr.push(t)\n                                                  }\n                                                  return arr\n                                                },[])\n\n                                                console.log(items);\n                                                console.log(\"=====================items=====================\");\n                                                debugger\n                                                this.$exposeds.get('tableEdit_lru2vhud').methods.growData('inventoryAddSource', items);\n                                                this.$sharedFns.resetSortCode('receive');\n                                                this.$sharedFns.resetEditPageBtnState('receive');\n                                                selectRows.items = []\n                                                this.$dataModels.inventoryFilterModel.returnReceive.materialName = ''\n                                                this.$dataModels.inventoryFilterModel.returnReceive.materialModel = ''\n                                                this.$exposeds.get('dialog_lrx5ijry').model.dialogShow.value = false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lrx5ij08",
                                          "__description": "确定"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lrx5ij07",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lrx5ij04",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrx5ij02",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrx5ij01",
                        "__description": ""
                      }
                    }
                  ],
                  "height": "650px"
                },
                "__nodeKey": "nodeKey_flexBox_lrx5ijrz",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lrx5ijry",
            "__description": "库存选材",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n\n                  this.$dataModels.selectRows.items = []\n                  this.$dataModels.inventoryFilterModel.returnReceive.materialName = ''\n                  this.$dataModels.inventoryFilterModel.returnReceive.materialModel = ''\n\n\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_lt9ufbvc",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "",
              "title": "凭证预览",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lt9ufbvd",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "400px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lt9ufbve",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lt9uf9zd",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lt9uf9ze",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "image",
                                  "elementOptions": {
                                    "__nodeId": "image_lt9uf9zf",
                                    "__nodeName": "image",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "modelName": "",
                                      "content": "",
                                      "initialIndex": 0,
                                      "hideOnClickModal": false,
                                      "loading": "eager",
                                      "lazy": false,
                                      "alt": "",
                                      "previewSrcList": [],
                                      "fit": "",
                                      "display": true,
                                      "permissionSetting": ""
                                    },
                                    "__nodeEvent": {
                                      "onValueRender": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "function onValueRenderFn(row){\n\n\n                                          this.$currentInstance.exposed.model.elementOption.value = {\n                                            content: this.$dataModels.currentPreviewImg.singleTable.src\n                                          };\n\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_image_lt9uf9zf",
                                    "__description": "",
                                    "__nodeStyle": {
                                      "display": "block",
                                      "width": "100%",
                                      "height": "100%"
                                    }
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lt9uf9ze",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lt9uf9zd",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lt9ufbve",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lt9ufbvd",
                "__description": ""
              },
              "destroyOnClose": true,
              "modal": true
            },
            "__nodeKey": "nodeKey_dialog_lt9ufbvc",
            "__description": "凭证预览"
          },
          {
            "__nodeId": "dialog_lu0nrql5",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "35%",
              "title": "高拍仪拍照",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lu0nrql6",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 2,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lu0nrql7",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lu0nrlc0",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lu0nrlc1",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "webCamera",
                                  "elementOptions": {
                                    "__nodeId": "webCamera_lu0nrlc2",
                                    "__nodeName": "webCamera",
                                    "__nodeType": "baseNode",
                                    "__nodeStyle": {
                                      "width": "100%",
                                      "height": "100%"
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "width": 4000,
                                      "height": 2000
                                    },
                                    "__nodeEvent": {},
                                    "__nodeKey": "nodeKey_webCamera_lu0nrlc2",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lu0nrlc1",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lu0nrlc0",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lu0nrql7",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lu0nrlbx",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lu80de64",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lu80deg6",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_lu80deq7",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lu80deq8",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "拍照",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "icon": "CameraFilled"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName() {\n\n                                                const { orgId } = this.$globalVars.$context\n\n                                                this.$exposeds.get('dialog_lu0nrql5').model.dialogShow.value = false\n                                                const data = this.$exposeds.get('webCamera_lu0nrlc2').methods.getPhotoBase64();\n                                                const result = await this.$requestFns.uploadGpy({ file: data, fileName: Math.random().toString(36).slice(-8) + '.png' });\n                                                if (result.data.success) {\n                                                  const photoObj = {\n                                                    phoneUrl: data,\n                                                    index: this.$exposeds.get('listOnly_lu0wim3g').model.listData.value.length + 1\n                                                  }\n                                                  if (data) {\n                                                    this.$dataModels.receiveFormModel.qReceiveGpys.push({\n                                                      gpyPhotoUrl: result.data.fileKey,\n                                                      orgId: this.$dataModels.receiveFormModel.qReceive.orgId\n                                                    })\n                                                    this.$exposeds.get('listOnly_lu0wim3g').model.listData.value.push(photoObj)\n                                                    this.$exposeds.get('image_lu0wim3n').model.elementOption.value = {\n                                                      content: data\n                                                    }\n                                                  } else {\n                                                    this.$vueGlobal.$message({\n                                                      type: 'error',\n                                                      message: '上传失败！'\n                                                    })\n                                                  }\n                                                } else {\n                                                  this.$vueGlobal.$message({\n                                                    type: 'error',\n                                                    message: '上传失败！'\n                                                  })\n                                                }\n\n\n                                                // const result = await this.$globalVars.$http.post('/mq3-mquantity/fs/fs-upload',params)\n\n                                                console.log(this.$dataModels.receiveFormModel, 'result');\n\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lu80deq8",
                                          "__description": ""
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lu80deq7",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lu80deg6",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lu80de64",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lu0nrlbx",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lu0nrql6",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lu0nrql5",
            "__description": "标题"
          }
        ],
        "drawerOptions": []
      },
      "__nodeKey": "nodeKey_views_lrt7yw7x",
      "__description": "收料编辑"
    },
    "deliveryEdit": {
      "__nodeId": "views_lryr5ym4",
      "__nodeName": "views",
      "__nodeType": "baseNode",
      "__nodeEvent": {},
      "__nodeOptions": {
        "planeOptions": {
          "__nodeId": "plane_lryr5ym5",
          "__nodeName": "plane",
          "__nodeType": "baseNode",
          "__nodeEvent": {},
          "__nodeOptions": {
            "isShowNav": true,
            "navigationOptions": {
              "__nodeId": "navigationBar_lryr5ym6",
              "__nodeName": "navigationBar",
              "__nodeType": "baseNode",
              "__nodeEvent": {
                "onValueRender": {
                  "type": "system",
                  "isOn": true,
                  "fn": "function onValueRenderFn(row) {\n\n                    const { query } = this.$globalVars.$router.currentRoute\n\n\n                    this.$currentInstance.exposed.model.elementOption.value = {\n                      routers: [\n                        {\n                          \"title\": query.id ? \"编辑\" : \"添加\"\n                        }\n                      ]\n                    };\n\n                  }"
                }
              },
              "__nodeOptions": {
                "defaultSlot": [
                  {
                    "__nodeId": "elementRender_lryr5ym7",
                    "__nodeName": "elementRender",
                    "__nodeType": "renderNode",
                    "__nodeOptions": {
                      "renderType": "button",
                      "elementOptions": {
                        "__nodeId": "button_lryr5ym8",
                        "__nodeName": "button",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "size": "default",
                          "plain": false,
                          "content": "关闭",
                          "type": "primary",
                          "text": true,
                          "link": false,
                          "round": false,
                          "circle": false,
                          "loading": false,
                          "disabled": false
                        },
                        "__nodeEvent": {
                          "onMounted": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          },
                          "onClick": {
                            "isOn": true,
                            "fn": "async function(){\n\n                              this.$globalVars.$router.push({path:\"/\"})\n\n                            }"
                          },
                          "onChange": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          }
                        },
                        "__nodeKey": "nodeKey_button_lryr5ym8",
                        "__description": "关闭"
                      }
                    },
                    "__nodeKey": "nodeKey_elementRender_lryr5ym7",
                    "__description": ""
                  }
                ],
                "display": true,
                "isSysRouter": true,
                "permissionSetting": "",
                "routers": [
                  {
                    "title": "编辑"
                  }
                ]
              },
              "__nodeKey": "nodeKey_navigationBar_lryr5ym6",
              "__description": ""
            },
            "flexBoxOptions": {
              "__nodeId": "flexBox_lryr5ymd",
              "__nodeName": "flexBox",
              "__nodeType": "baseNode",
              "__nodeOptions": {
                "display": true,
                "permissionSetting": "",
                "isRow": false,
                "itemNum": 5,
                "width": "100%",
                "height": "100%",
                "itemConfig": [
                  {
                    "tag": "item-1",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "contentType": "container",
                    "paddingSize": "large",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lryr5yme",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lryr5ymi",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lryr5ymj",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "form",
                                "elementOptions": {
                                  "__nodeId": "form_lryr5ymr",
                                  "__nodeName": "form",
                                  "__nodeType": "baseNode",
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n                                        const validatePlateNumber = (rule, value, callback) => {\n\n                                          if (!value){\n                                            callback()\n                                            return\n                                          }\n                                          const isValid = this.$sharedFns.isVehicleNumber(value);\n                                          if (this.$dataModels.deliveryFormModel.qDelivery.plateNumber) {\n                                            if (isValid) {\n                                              callback()\n                                            } else {\n                                              callback(new Error('请输入正确的车牌号码！'))\n                                            }\n                                          } else {\n                                            callback()\n                                          }\n                                        }\n                                        const {  deliveryFormModel } = this.$dataModels\n\n                                        const { serviceType, isToProduction } = deliveryFormModel.qDelivery\n                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                          rules: {\n                                            orgId: [\n                                              { required: true, message: '请选择组织机构', trigger: 'blur' }\n                                            ],\n                                            exitTime: [\n                                              { required: true, message: '请选择入账时间', trigger: 'blur' }\n                                            ],\n                                            labourId: [\n                                              { required: serviceType != 40 ? true : false, message: serviceType != 40 ? '请选择用料单位' : '', trigger: 'change' }\n                                            ],\n                                            plateNumber: [\n                                              { validator: validatePlateNumber, trigger: 'blur' }\n                                            ],\n                                            ghId: [\n                                              {\n                                                required:   this.$dataModels.globalConfig.singleTable.ghInfo && serviceType != 40 && !isToProduction?true:false,\n                                                message:   this.$dataModels.globalConfig.singleTable.ghInfo && serviceType != 40 && !isToProduction ? '请选择使用部位' : '', trigger: 'change' }\n                                            ],\n                                            scrapReason:[\n                                              { required: false, message: '请选择报废原因', trigger: 'change' }\n                                            ]\n                                          }\n                                        }\n\n\n                                      }"
                                    }
                                  },
                                  "__nodeOptions": {
                                    "modelName": "deliveryFormModel.qDelivery",
                                    "rules": {},
                                    "labelWidth": "80px",
                                    "size": "default",
                                    "disabled": false,
                                    "statusIcon": false,
                                    "inlineMessage": false,
                                    "labelPosition": "right",
                                    "showMessage": true,
                                    "display": true,
                                    "permissionSetting": "",
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lryr5yms",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lryr5ymv",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 8,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "paddingSize": "small",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lt79bhlp",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lt79bhlq",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5yo2",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "radioGroup",
                                                            "elementOptions": {
                                                              "__nodeId": "radioGroup_lryr5yo3",
                                                              "__nodeName": "radioGroup",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "disabled": false,
                                                                "size": "default",
                                                                "type": "button",
                                                                "modelName": "deliveryFormModel.qDelivery.serviceType",
                                                                "itemData": [
                                                                  {
                                                                    "label": "发料",
                                                                    "value": "10"
                                                                  },
                                                                  {
                                                                    "label": "调出",
                                                                    "value": "20"
                                                                  },
                                                                  {
                                                                    "label": "退发料",
                                                                    "value": "-11"
                                                                  },
                                                                  {
                                                                    "label": "退调出",
                                                                    "value": "-21"
                                                                  },
                                                                  {
                                                                    "label": "报废",
                                                                    "value": "40"
                                                                  }
                                                                ],
                                                                "defaultProps": {
                                                                  "label": "label",
                                                                  "value": "value"
                                                                },
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(val) {\n                                                                    const { deliveryFormModel, inventoryFilterModel } = this.$dataModels\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('delivery');\n                                                                    deliveryFormModel.qDelivery.orderCode = orderCode\n\n                                                                    // form_lryr5ymr\n                                                                    this.$exposeds.get('formItem_lryr5yo9').model.elementOption.value = {\n                                                                      label: val < 0 ? '退货时间' : '出库时间'\n                                                                    }\n                                                                    deliveryFormModel.qDelivery.labourId = null\n                                                                    deliveryFormModel.qDelivery.labourName = ''\n                                                                    deliveryFormModel.qDelivery.oriLabourId = ''\n                                                                    deliveryFormModel.qDelivery.teamName = ''\n                                                                    deliveryFormModel.qDelivery.teamId = null\n                                                                    this.$sharedFns.setNodeOptions([\n                                                                      ['basisCommonSelect_lryr5ypj', 'defaultText', ''],\n                                                                      ['searchTreeSelect_lryvq989', 'defaultText', '']\n                                                                    ])\n                                                                    if (val != 10) {\n                                                                      deliveryFormModel.qDelivery.isToProduction = false\n                                                                    }\n                                                                    const itemConfig = this.$exposeds.get('flexBox_lryr5ymd').model.elementOption.value.itemConfig\n                                                                    itemConfig.forEach(item => {\n                                                                      if (item.tag == 'item-2') {\n                                                                        item.isHidden = val < 0 ? true : false\n                                                                      }\n                                                                      if (item.tag == 'item-3') {\n                                                                        item.isHidden = val > 0 ? true : false\n                                                                      }\n                                                                    })\n                                                                    if (val < 0) {\n                                                                      deliveryFormModel.qDelivery.isToProduction = false\n                                                                      // 禁用常用用料单位下载按钮\n                                                                      this.$exposeds.get('basisCommonSelect_lryr5ypj').model.elementOption.value = {\n                                                                        downloadIcon: false\n                                                                      };\n                                                                    } else {\n                                                                      this.$sharedFns.setNodeOptions([\n                                                                        ['basisCommonSelect_lryr5ypj', 'downloadIcon', true]\n                                                                      ])\n                                                                    }\n                                                                    if (Math.abs(val) < 20) {\n                                                                      deliveryFormModel.qDelivery.ghId = 0\n                                                                      deliveryFormModel.qDelivery.ghName = ''\n                                                                      deliveryFormModel.qDelivery.ghFullName = ''\n                                                                      deliveryFormModel.qDelivery.oriGhId = ''\n                                                                      this.$exposeds.get('form_lryr5ymr').model.elementOption.value.rules.labourId = [\n                                                                        {\n                                                                          required: true, message: `请选择${val > 0 ? '用料单位' : '退料单位'}`, trigger: 'change'\n                                                                        }\n                                                                      ]\n                                                                    }\n                                                                    if ([20, -21].includes(val)) {\n                                                                      this.$exposeds.get('form_lryr5ymr').model.elementOption.value.rules.labourId = [\n                                                                        {\n                                                                          required: true, message: `请选择${val > 0 ? '调出单位' : '退料单位'}`, trigger: 'change'\n                                                                        }\n                                                                      ]\n                                                                    }\n\n                                                                    if (val != 40) {\n                                                                      deliveryFormModel.qDelivery.methodHandle = ''\n                                                                      deliveryFormModel.qDelivery.scrapReason = ''\n                                                                      this.$exposeds.get('form_lryr5ymr').model.elementOption.value.rules.scrapReason = [\n                                                                        {\n                                                                          required: false\n                                                                        }\n                                                                      ]\n                                                                    } else {\n                                                                      this.$exposeds.get('form_lryr5ymr').model.elementOption.value.rules.scrapReason = [\n                                                                        {\n                                                                          required: true, message: '请选择报废原因', trigger: 'change'\n                                                                        }\n                                                                      ]\n                                                                      deliveryFormModel.qDelivery.ghId = 0\n                                                                      deliveryFormModel.qDelivery.ghName = ''\n                                                                      deliveryFormModel.qDelivery.ghFullName = ''\n                                                                      deliveryFormModel.qDelivery.oriGhId = ''\n                                                                    }\n                                                                    deliveryFormModel.qDeliveryPhotos = await this.$sharedFns.getPhotoConfig(val > 0 ? 'mq2DeliveryKey' : 'mq2DeliveryReturnKey', val > 0 ? 5 : 4);\n                                                                    this.$exposeds.get('listOnly_lsvjbevw').model.listData.value = deliveryFormModel.qDeliveryPhotos\n                                                                    this.$sharedFns.resetEditPageBtnState('delivery');\n                                                                  }"
                                                                },
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n\n                                                                    if (query.id) {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: true\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false\n                                                                      }\n                                                                    }\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_radioGroup_lryr5yo3",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5yo2",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "0px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lt79bhlq",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lt79bhlp",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5ymv",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5ymy",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 8,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5ypa",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5ypb",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "labelWidth": "86px",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5ype",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "checkbox",
                                                            "elementOptions": {
                                                              "__nodeId": "checkbox_lryr5ypf",
                                                              "__nodeName": "checkbox",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "border": false,
                                                                "disabled": false,
                                                                "modelName": "deliveryFormModel.qDelivery.isToProduction",
                                                                "label": "生产组织发料",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnChange(val){\n                                                                    const { deliveryFormModel} = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.labourId = null\n                                                                    deliveryFormModel.qDelivery.labourName = ''\n                                                                    deliveryFormModel.qDelivery.oriLabourId = ''\n                                                                    deliveryFormModel.qDelivery.teamName = ''\n                                                                    deliveryFormModel.qDelivery.teamId = null\n                                                                    if(val){\n                                                                      this.$sharedFns.setNodeOptions(\n                                                                        ['basisCommonSelect_lryr5ypj','defaultText',''], //用料单位\n                                                                        ['searchTreeSelect_lryvq989', 'defaultText', ''],//调出单位\n                                                                      )\n                                                                    }\n                                                                    if (val) {\n                                                                      this.$exposeds.get('form_lryr5ymr').model.elementOption.value.rules.labourId = [\n                                                                        { required: true, message:  '请选择生产组织' , trigger: 'blur' }\n                                                                      ]\n                                                                    } else {\n                                                                      this.$exposeds.get('form_lryr5ymr').model.elementOption.value.rules.labourId = [\n                                                                        { required: deliveryFormModel.qDelivery.serviceType != 40 ? true : false, message:  deliveryFormModel.qDelivery.serviceType != 40 ? '请选择用料单位' : '', trigger: 'blur' }\n                                                                      ]\n                                                                    }\n\n                                                                    this.$sharedFns.resetEditPageBtnState('delivery');\n\n\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_checkbox_lryr5ypf"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5ype",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5ypb",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5ypa",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5ymy",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5yn1",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yo6",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yo7",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "组织机构",
                                                        "prop": "orgId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5yow",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "organizationTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "organizationTreeSelect_lryr5yox",
                                                              "__nodeName": "organizationTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { deliveryFormModel } = this.$dataModels\n                                                                    if (!query.id) {\n                                                                      const { orgId, orgShortName } = this.$globalVars.$context\n                                                                      deliveryFormModel.qDelivery.orgId = orgId\n                                                                      deliveryFormModel.qDelivery.orgName = orgShortName\n                                                                      const rootNode = { shortName: orgShortName, id: orgId }\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        rootId: orgId,\n                                                                        rootName: orgShortName,\n                                                                        defaultText: orgShortName\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: true,\n                                                                        defaultText: deliveryFormModel.qDelivery.orgName\n                                                                      }\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(node) {\n                                                                    const { deliveryFormModel } = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.orgId = node.id\n                                                                    deliveryFormModel.qDelivery.orgName = node.shortName || node.name\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('delivery');\n                                                                    deliveryFormModel.qDelivery.orderCode = orderCode\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "type": "select",
                                                                "modelName": "deliveryFormModel.qDelivery.orgId",
                                                                "defaultText": "",
                                                                "disabled": false,
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "searchEnable": false,
                                                                "clearable": false,
                                                                "reloadEnable": true,
                                                                "isUseCurrentOrg": true,
                                                                "rootId": "",
                                                                "rootName": "根节点名称",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeKey": "nodeKey_organizationTreeSelect_lryr5yox",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5yow",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yo7",
                                                      "__description": "组织机构"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yo6",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5yn1",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5yn4",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yo8",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yo9",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "出库时间",
                                                        "prop": "exitTime",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5yp8",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "datePicker",
                                                            "elementOptions": {
                                                              "__nodeId": "datePicker_lryr5yp9",
                                                              "__nodeName": "datePicker",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "size": "default",
                                                                "editable": true,
                                                                "clearable": false,
                                                                "type": "datetime",
                                                                "prefixIcon": "Calendar",
                                                                "clearIcon": "CircleClose",
                                                                "placeholder": "请选择",
                                                                "modelName": "deliveryFormModel.qDelivery.exitTime",
                                                                "shortcuts": [],
                                                                "format": "YYYY-MM-DD HH:mm:ss",
                                                                "valueFormat": "YYYY-MM-DD HH:mm:ss",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { globalConfig, deliveryFormModel, inventoryFilterModel} = this.$dataModels\n                                                                    if (!query.id) {\n                                                                      const { getAccountMonth, formatDate } = this.$utils\n                                                                      deliveryFormModel.qDelivery.orderDate = getAccountMonth(globalConfig.accountDay, new Date())\n                                                                      deliveryFormModel.qDelivery.recordedDate = formatDate('YYYY-MM-DD', new Date())\n                                                                      deliveryFormModel.qDelivery.exitTime = formatDate('YYYY-MM-DD HH:mm:ss', new Date())\n                                                                      const orderCode = await this.$sharedFns.createOrderCode('delivery');\n                                                                      deliveryFormModel.qDelivery.orderCode = orderCode\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = { disabled: true };\n                                                                      await this.$sharedFns.createOrderCode('delivery');\n                                                                    }\n                                                                    inventoryFilterModel.delivery.exitTime = deliveryFormModel.qDelivery.exitTime\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(val) {\n                                                                    const { formatDate, getAccountMonth } = this.$utils\n                                                                    const { deliveryFormModel, globalConfig, inventoryFilterModel } = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.recordedDate = formatDate('YYYY-MM-DD', val)\n                                                                    deliveryFormModel.qDelivery.exitTime = inventoryFilterModel.delivery.exitTime= formatDate('YYYY-MM-DD HH:mm:ss', val)\n                                                                    deliveryFormModel.qDelivery.orderDate = getAccountMonth(globalConfig.accountDay, val)\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('delivery');\n                                                                    deliveryFormModel.qDelivery.orderCode = orderCode\n                                                                  }"
                                                                },
                                                                "onDisabledDate": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "function onDisabledDate(date){\n\n                                                                    if (this.$dataModels.deliveryFormModel.qDelivery.serviceType>0) {\n                                                                      return false\n                                                                    } else {\n                                                                      if (date > new Date()) {\n                                                                        return true\n                                                                      }\n                                                                    }\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_datePicker_lryr5yp9",
                                                              "__description": "请选择日期",
                                                              "__nodeStyle": {
                                                                "width": "100%"
                                                              }
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5yp8",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yo9",
                                                      "__description": "出库时间"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yo8",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5yn4",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5yn7",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yoa",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yob",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "原单据编号",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5ypg",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lryr5yph",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "deliveryFormModel.qDelivery.originalOrderCode",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lryr5yph",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5ypg",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yob",
                                                      "__description": "原单据编号"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yoa",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5yn7",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5yna",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yoc",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yod",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "用料单位",
                                                        "prop": "labourId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5ypi",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "basisCommonSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "basisCommonSelect_lryr5ypj",
                                                              "__nodeName": "basisCommonSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { deliveryFormModel } = this.$dataModels\n                                                                    const { lastProject } = this.$globalVars.$context\n\n                                                                    if (!query.id) {\n                                                                      deliveryFormModel.qDelivery.labourName = ''\n                                                                      deliveryFormModel.qDelivery.labourId = null\n                                                                      deliveryFormModel.qDelivery.oriLabourId = ''\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        defaultText: '',\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId }\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: deliveryFormModel.qDelivery.labourName,\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId }\n                                                                      };\n                                                                    }\n                                                                    if (deliveryFormModel.qDelivery.serviceType < 0) {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        downloadIcon: false\n                                                                      };\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        downloadIcon: true\n                                                                      };\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onSelectionChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnSelectionChange(item){\n                                                                    debugger\n                                                                    const {deliveryFormModel} = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.labourName = item.labourName\n                                                                    deliveryFormModel.qDelivery.oriLabourId = item.oriLabourId\n                                                                    deliveryFormModel.qDelivery.teamName = item.teamName\n                                                                    deliveryFormModel.qDelivery.teamId = item.teamId\n                                                                    if (!item.teamId){\n                                                                      deliveryFormModel.qDelivery.teamId = item.labourId\n                                                                      deliveryFormModel.qDelivery.teamName = item.labourName\n                                                                    }\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.labourName\n                                                                    };\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnClear(){\n                                                                    const { deliveryFormModel} = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.labourId = null\n                                                                    deliveryFormModel.qDelivery.labourName = ''\n                                                                    deliveryFormModel.qDelivery.oriLabourId = ''\n                                                                    deliveryFormModel.qDelivery.teamName = ''\n                                                                    deliveryFormModel.qDelivery.teamId = null\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    };\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 10,
                                                                "defaultProps": {
                                                                  "label": "labourName",
                                                                  "subLabel": "teamName",
                                                                  "value": "id"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "parameter": {
                                                                  "url": "/shared-data/c-labours-valid-team-params",
                                                                  "basisDataType": "labour",
                                                                  "orgId": 0,
                                                                  "fieldName": "labourName",
                                                                  "condtionItems": [],
                                                                  "queryDataJson": {}
                                                                },
                                                                "addButton": false,
                                                                "downloadIcon": true,
                                                                "size": "default",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": "deliveryFormModel.qDelivery.labourId"
                                                              },
                                                              "__nodeKey": "nodeKey_basisCommonSelect_lryr5ypj",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5ypi",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yod",
                                                      "__description": "用料单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yoc",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5yna",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryvyt7p",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryvyt7q",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryvyt7r",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "队伍名称",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryvyt7s",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lryvyt7t",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": true,
                                                                "disabled": true,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "deliveryFormModel.qDelivery.teamName",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lryvyt7t",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryvyt7s",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryvyt7r",
                                                      "__description": "队伍名称"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryvyt7q",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryvyt7p",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5ynd",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yoe",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yof",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "生产组织",
                                                        "prop": "labourId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5ypk",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "select",
                                                            "elementOptions": {
                                                              "__nodeId": "select_lryr5ypl",
                                                              "__nodeName": "select",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "multiple": false,
                                                                "disabled": false,
                                                                "size": "default",
                                                                "clearable": false,
                                                                "collapseTags": false,
                                                                "collapseTagsTooltip": false,
                                                                "multipleLimit": 0,
                                                                "clearIcon": "CircleClose",
                                                                "fitInputWidth": false,
                                                                "filterable": false,
                                                                "valueKey": "value",
                                                                "placeholder": "请选择",
                                                                "modelName": "deliveryFormModel.qDelivery.labourId",
                                                                "itemData": [],
                                                                "defaultProps": {
                                                                  "label": "shortName",
                                                                  "value": "id"
                                                                },
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "requestFn": "queryChildOrgList"
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n                                                                    const { qDelivery } = this.$dataModels.deliveryFormModel\n                                                                    const res = await this.$requestFns.queryChildOrgList({\n                                                                      orgId: qDelivery.orgId,\n                                                                      parentId: qDelivery.orgId,\n                                                                      serviceName:'node-mi-external-service',\n                                                                      path:'/organizations-parent'\n                                                                    })\n\n                                                                    this.$currentInstance.exposed.model.itemData.value = this.$dataModels.childOrgList.items = res.data\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(val){\n                                                                    const {deliveryFormModel,childOrgList} = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.labourName = childOrgList.items.find(item => item.id==val).shortName || ''\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_select_lryr5ypl",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5ypk",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yof",
                                                      "__description": "生产组织"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yoe",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5ynd",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5yng",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yog",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yoh",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "调出单位",
                                                        "prop": "labourId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryvq988",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchTreeSelect_lryvq989",
                                                              "__nodeName": "searchTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "moreEnable": true,
                                                                "reloadEnable": true,
                                                                "defaultProps": {
                                                                  "label": "shortName",
                                                                  "value": "id"
                                                                },
                                                                "currentSize": 20,
                                                                "modelName": "deliveryFormModel.qDelivery.labourId",
                                                                "defaultText": "",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "clearable": true
                                                              },
                                                              "__nodeEvent": {
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item){\n                                                                    const {deliveryFormModel} = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.labourName = item.shortName\n                                                                    deliveryFormModel.qDelivery.labourId = item.id\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.shortName\n                                                                    };\n\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnClear() {\n                                                                    const { deliveryFormModel } = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.labourId = null\n                                                                    deliveryFormModel.qDelivery.labourName = ''\n                                                                    deliveryFormModel.qDelivery.oriLabourId = ''\n                                                                    deliveryFormModel.qDelivery.teamName = ''\n                                                                    deliveryFormModel.qDelivery.teamId = null\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    };\n                                                                  }"
                                                                },
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { deliveryFormModel } = this.$dataModels\n                                                                    if (query.id) {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: deliveryFormModel.qDelivery.labourName,\n                                                                        disabled: true,\n                                                                        rootNode: { id: -1, shortName: '' }\n                                                                      }\n                                                                    } else {\n                                                                      deliveryFormModel.qDelivery.labourName = ''\n                                                                      deliveryFormModel.qDelivery.labourId = null\n                                                                      deliveryFormModel.qDelivery.oriLabourd = ''\n                                                                      deliveryFormModel.qDelivery.teamName = ''\n                                                                      deliveryFormModel.qDelivery.teamId = null\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: '',\n                                                                        disabled: false,\n                                                                        rootNode: { id: -1, shortName: '' }\n                                                                      }\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onLoadData": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnLoadData(params, resolve) {\n                                                                    let parentId = -1\n                                                                    if (params.parentId) {\n                                                                      parentId = params.parentId\n                                                                    }\n\n\n                                                                    let { limit, offset } = params\n\n                                                                    // const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?serviceName=node-mb2-shared-data-service&path=/shared-data/g-childs-org-filter-out-production&parentId=${parentId}&limit=${limit}&offset=${offset}`, {})\n                                                                    const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?parentId=${parentId}&limit=${limit}&offset=${offset}&serviceName=node-mi-external-service&path=/organizations-parent`, {})\n\n                                                                    resolve(result)\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchTreeSelect_lryvq989",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryvq988",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yoh",
                                                      "__description": "调出单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yog",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5yng",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5ynj",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yoi",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yoj",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "处理方式",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryvq98a",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "select",
                                                            "elementOptions": {
                                                              "__nodeId": "select_lryvq98b",
                                                              "__nodeName": "select",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "multiple": false,
                                                                "disabled": false,
                                                                "size": "default",
                                                                "clearable": true,
                                                                "collapseTags": false,
                                                                "collapseTagsTooltip": false,
                                                                "multipleLimit": 0,
                                                                "clearIcon": "CircleClose",
                                                                "fitInputWidth": false,
                                                                "filterable": false,
                                                                "valueKey": "value",
                                                                "placeholder": "请选择",
                                                                "modelName": "deliveryFormModel.qDelivery.methodHandle",
                                                                "itemData": [
                                                                  {
                                                                    "value": "出售",
                                                                    "label": "出售"
                                                                  },
                                                                  {
                                                                    "value": "销毁",
                                                                    "label": "销毁"
                                                                  },
                                                                  {
                                                                    "value": "废弃",
                                                                    "label": "废弃"
                                                                  },
                                                                  {
                                                                    "value": "回收",
                                                                    "label": "回收"
                                                                  }
                                                                ],
                                                                "defaultProps": {
                                                                  "label": "label",
                                                                  "value": "value"
                                                                },
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(){\n\n                                                                    this.$dataModels.deliveryFormModel.qDelivery.methodHandle = ''\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_select_lryvq98b",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryvq98a",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yoj",
                                                      "__description": "处理方式"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yoi",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5ynj",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5ynm",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yok",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yol",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "使用部位",
                                                        "prop": "ghId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryvq98c",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchTreeSelect_lryvq98d",
                                                              "__nodeName": "searchTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入检索内容",
                                                                "moreEnable": true,
                                                                "reloadEnable": true,
                                                                "defaultProps": {
                                                                  "label": "name",
                                                                  "value": "id",
                                                                  "disabled": "disabled"
                                                                },
                                                                "currentSize": 20,
                                                                "modelName": "deliveryFormModel.qDelivery.ghId",
                                                                "defaultText": "",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "expandFirst": true,
                                                                "clearable": true
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    console.log(this.$dataModels.deliveryFormModel.qDelivery.ghName);\n                                                                    const { treeList } = this.$dataModels\n                                                                    const { orgShortName,lastProject } = this.$globalVars.$context\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      disabled: false,\n                                                                      defaultText: query.id ? this.$dataModels.deliveryFormModel.qDelivery.ghName : '',\n                                                                      rootNode: { name: orgShortName,disabled:true }\n                                                                    }\n                                                                    // Object.assign(treeList.singleTable, { serviceName: 'node-mb2-shared-data-service', path: '/shared-data/c-ghs', parentId: -1 })\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(node){\n                                                                    const  { deliveryFormModel } = this.$dataModels\n                                                                    if (!node.id) {\n\n                                                                      this.$vueGlobal.$message({\n                                                                        type: 'warning',\n                                                                        message: '请选择正确的部位'\n                                                                      })\n                                                                      deliveryFormModel.qDelivery.ghId = node.id\n                                                                      deliveryFormModel.qDelivery.ghName = node.name\n                                                                      deliveryFormModel.qDelivery.ghFullName = node.fullName\n                                                                      deliveryFormModel.qDelivery.ghFullId = node.fullId\n                                                                      deliveryFormModel.qDelivery.oriGhId = node.oriGhId\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: \"\"\n                                                                      };\n\n                                                                      return\n                                                                    }\n                                                                    deliveryFormModel.qDelivery.ghId =  node.id\n                                                                    deliveryFormModel.qDelivery.ghName =  node.name\n                                                                    deliveryFormModel.qDelivery.ghFullName = node.fullName\n                                                                    deliveryFormModel.qDelivery.ghFullId = node.fullId\n                                                                    deliveryFormModel.qDelivery.oriGhId = node.oriGhId\n\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: node.name\n                                                                    };\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(node){\n                                                                    const  { deliveryFormModel } = this.$dataModels\n                                                                    deliveryFormModel.qDelivery.ghId =  0\n                                                                    deliveryFormModel.qDelivery.ghName = ''\n                                                                    deliveryFormModel.qDelivery.ghFullName = ''\n                                                                    deliveryFormModel.qDelivery.ghFullId = ''\n                                                                    deliveryFormModel.qDelivery.oriGhId = ''\n\n\n                                                                  }"
                                                                },
                                                                "onLoadData": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnLoadData(params, resolve) {\n\n                                                                    const { lastProject } = this.$globalVars.$context\n\n                                                                    let parentId = -1\n                                                                    if (params.parentId) {\n                                                                      parentId = params.parentId\n                                                                    }\n                                                                    const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?serviceName=node-mb2-shared-data-service&path=/shared-data/c-ghs&orgId=${lastProject.id}&parentId=${parentId}`, {})\n                                                                    resolve(result)\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchTreeSelect_lryvq98d",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryvq98c",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yol",
                                                      "__description": "使用部位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yok",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5ynm",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5ynp",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yom",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yon",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "报废原因",
                                                        "prop": "scrapReason",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryvq98e",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "dictionarySelect",
                                                            "elementOptions": {
                                                              "__nodeId": "dictionarySelect_lryvq98f",
                                                              "__nodeName": "dictionarySelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn(){\n\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: this.$dataModels.deliveryFormModel.qDelivery.scrapReason\n                                                                    };\n\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(props){\n\n                                                                    this.$dataModels.deliveryFormModel.qDelivery.scrapReason = ''\n\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 20,
                                                                "defaultProps": {
                                                                  "label": "name",
                                                                  "value": "name"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "size": "default",
                                                                "code": "ScrapReason",
                                                                "orgId": 0,
                                                                "isLeaf": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": "deliveryFormModel.qDelivery.scrapReason"
                                                              },
                                                              "__nodeKey": "nodeKey_dictionarySelect_lryvq98f",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryvq98e",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yon",
                                                      "__description": "报废原因"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yom",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5ynp",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lryr5yns",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yoo",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yop",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "车牌号",
                                                        "prop": "plateNumber",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryvq98g",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lryvq98h",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "deliveryFormModel.qDelivery.plateNumber",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lryvq98h",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryvq98g",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yop",
                                                      "__description": "车牌号"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yoo",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5yns",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lryr5yms",
                                        "__description": ""
                                      },
                                      {
                                        "__nodeId": "gridBox_lryr5yp0",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lryr5yp3",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lryr5yp4",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lryr5yp5",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "单据备注",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lryr5yp6",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lryr5yp7",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "textarea",
                                                                "placeholder": "请输入",
                                                                "modelName": "deliveryFormModel.qDelivery.remark",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "minlength": 2
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lryr5yp7",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lryr5yp6",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "86px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lryr5yp5",
                                                      "__description": "单据备注"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lryr5yp4",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lryr5yp3",
                                              "__description": ""
                                            }
                                          ],
                                          "display": true,
                                          "permissionSetting": "",
                                          "divider": true,
                                          "title": "更多信息",
                                          "disableFold": false,
                                          "contentPosition": "left",
                                          "defaultExpand": false
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lryr5yp0",
                                        "__description": ""
                                      }
                                    ],
                                    "validateOnRuleChange": false
                                  },
                                  "__nodeKey": "nodeKey_form_lryr5ymr",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lryr5ymj",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lryr5ymk",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [
                                  "left"
                                ],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [
                                  {
                                    "__nodeId": "elementRender_lryr5ymn",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "rawHtml",
                                      "elementOptions": {
                                        "__nodeId": "rawHtml_lryr5ymo",
                                        "__nodeName": "rawHtml",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "content": "<span style=\"color:var(--el-color-danger);\">No.</span>",
                                          "display": true,
                                          "permissionSetting": "",
                                          "modelName": ""
                                        },
                                        "__nodeEvent": {},
                                        "__nodeKey": "nodeKey_rawHtml_lryr5ymo",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lryr5ymn",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lryr5ymp",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "rawHtml",
                                      "elementOptions": {
                                        "__nodeId": "rawHtml_lryr5ymq",
                                        "__nodeName": "rawHtml",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "content": "<span style=\"\">rawTxt渲染文本</span>",
                                          "display": true,
                                          "permissionSetting": "",
                                          "modelName": "deliveryFormModel.qDelivery.orderCode"
                                        },
                                        "__nodeEvent": {},
                                        "__nodeKey": "nodeKey_rawHtml_lryr5ymq",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lryr5ymp",
                                    "__description": ""
                                  }
                                ],
                                "rightSlot": [
                                  {
                                    "__nodeId": "elementRender_lryyoiyi",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lryyoiyj",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "选材",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              const { deliveryFormModel, configData, inventoryFilterModel} = this.$dataModels\n                                              const { qDelivery } = deliveryFormModel\n\n                                              Object.assign(inventoryFilterModel.delivery,{\n                                                dimensionType:'材料维度',\n                                                orgId: qDelivery.orgId,\n                                                orderOrigin:null,\n                                                dictType: 'materialType',\n                                                materialId:[-1],\n                                                quantity:0\n                                              })\n                                              inventoryFilterModel.delivery.dimensionType='材料维度'\n                                              // if (!qDelivery.labourId) {\n                                              //     this.$vueGlobal.$message({\n                                              //       type: 'warning',\n                                              //       message: '请先选择用料单位'\n                                              //     })\n                                              //     return\n                                              // }\n                                              // if (!qDelivery.ghId &&configData.deliveryGhConfIsRequired) {\n                                              //   this.$vueGlobal.$message({\n                                              //     type: 'warning',\n                                              //     message: '请先选择使用部位'\n                                              //   })\n                                              //   return\n                                              // }\n\n                                              this.$exposeds.get('dialog_ls13w03p').model.dialogShow.value = true\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lryyoiyj",
                                        "__description": "选材(库存)",
                                        "__nodeStyle": {
                                          "marginRight": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lryyoiyi",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lryyoiyk",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lryyoiyl",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "选材",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n\n\n                                              const { deliveryFormModel, configData, inventoryFilterModel} = this.$dataModels\n                                              const { qDelivery } = deliveryFormModel\n\n                                              Object.assign(inventoryFilterModel.returnDelivery,{\n                                                dimensionType:'批次维度',\n                                                orgId: qDelivery.orgId,\n                                                dictType: 'materialType',\n                                                materialId:[-1],\n                                                netQuantity:0,\n                                                ghId: qDelivery.ghId || 0,\n                                                ghName: qDelivery.ghName || '',\n                                                exitTime: qDelivery.exitTime,\n                                                labourId: qDelivery.labourId,\n                                                teamId: qDelivery.teamId,\n                                                serviceType: qDelivery.serviceType==-21?20:10,\n                                                itemBarCode:'',\n                                                rawId:null,\n                                                rawOrderCode:''\n                                              })\n                                              if (!qDelivery.labourId) {\n                                                let txt = ''\n                                                if (qDelivery.serviceType == 10  ||qDelivery.serviceType == -11 ) {\n                                                  txt='用料单位'\n                                                }\n                                                if (qDelivery.serviceType == 20 || qDelivery.serviceType == -21) {\n                                                  txt = '调出单位'\n                                                }\n\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: `请先选择${txt}`\n                                                })\n                                                return\n                                              }\n                                              if (!qDelivery.ghId &&configData.deliveryGhConfIsRequired) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'warning',\n                                                  message: '请先选择使用部位'\n                                                })\n                                                return\n                                              }\n\n\n                                              this.$exposeds.get('dialog_ls4bqfn2').model.dialogShow.value = true\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lryyoiyl",
                                        "__description": "选材(组织)",
                                        "__nodeStyle": {
                                          "marginRight": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lryyoiyk",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_lryyoiym",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lryyoiyn",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": false,
                                          "content": "保存",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "iconFont": "icon cs-common baocun"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n\n                                              this.$currentInstance.exposed.model.elementOption.value = { loading: true };\n                                              const { userName } = this.$globalVars.$context\n                                              const { formatDate } = this.$utils\n                                              const { deliveryFormModel, orderCodeCondtion } = this.$dataModels\n                                              // 校验表单\n                                              const validRes = await this.$exposeds.get('form_lryr5ymr').methods.validateForm();\n                                              if (!validRes) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              //校验照片\n                                              const checkPhotos = await this.$sharedFns.validPhotosData('delivery');\n                                              if (!checkPhotos) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              //再次分解库存\n                                              await this.$sharedFns.handleMaterialList(deliveryFormModel.qDeliveryMoreOrders);\n                                              if (!Object.keys(deliveryFormModel.matchedList).length) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n                                              // 禁用选材按钮\n                                              this.$sharedFns.setNodeOptions([\n                                                ['button_lryyoiyj','disabled',true],\n                                                ['button_lryyoiyl','disabled',true]\n                                              ]);\n                                              deliveryFormModel.orderCodeCondtion = orderCodeCondtion.singleTable\n                                              deliveryFormModel.qDeliveryMoreMaterials = []\n                                              for (const key in deliveryFormModel.matchedList) {\n                                                deliveryFormModel.qDeliveryMoreMaterials.push(...deliveryFormModel.matchedList[key])\n                                              }\n\n                                              deliveryFormModel.qDeliveryMoreOrders.forEach((q,i) => {\n                                                q.orderId = deliveryFormModel.qDelivery.id  //重复处理\n                                                q.orgId = deliveryFormModel.qDelivery.orgId //重复处理\n                                                q.serviceType = deliveryFormModel.serviceType //重复处理\n                                                q.orderType = deliveryFormModel.orderType //重复处理\n                                              })\n\n                                              deliveryFormModel.qDeliveryPhotos = deliveryFormModel.qDeliveryPhotos.reduce((arr, p) => {\n                                                debugger\n                                                arr.push(...p.photoList)\n                                                return arr\n                                              }, [])\n                                              let saveRes = {}\n                                              let auditRes = {}\n\n                                              if (!deliveryFormModel.qDelivery.id) {\n                                                deliveryFormModel.qDelivery.maker = userName\n                                                deliveryFormModel.qDelivery.makerDate = formatDate('YYYY-MM-DD',new Date())\n                                                saveRes = await this.$requestFns.saveDeliveryOrder({});\n                                              } else {\n                                                // 修改\n                                                saveRes = await this.$requestFns.updateDeliveryOrder({});\n                                              }\n                                              if (!saveRes.data.success) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: saveRes.data.message\n                                                })\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                // 禁用选材按钮\n                                                this.$sharedFns.setNodeOptions([\n                                                  ['button_lryyoiyj', 'disabled', false],\n                                                  ['button_lryyoiyl', 'disabled', false]\n                                                ]);\n                                                return\n                                              }\n                                              // 提交\n                                              if (saveRes.data.success) {\n                                                auditRes = await this.$requestFns.auditDeliveryOrder({\n                                                  id: saveRes.data.qDelivery.id,\n                                                  orgId: saveRes.data.qDelivery.orgId,\n                                                  userName\n                                                });\n                                              }\n                                              if (auditRes.data == 0 || auditRes.data.success) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'success',\n                                                  message: '单据保存并提交成功'\n                                                })\n                                              } else {\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: auditRes.data.message\n                                                })\n                                              }\n                                              this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                              // 禁用选材按钮\n                                              this.$sharedFns.setNodeOptions([\n                                                ['button_lryyoiyj', 'disabled', false],\n                                                ['button_lryyoiyl', 'disabled', false]\n                                              ]);\n                                              this.$exposeds.get('form_lryr5ymr').methods.resetForm();\n                                              this.$globalVars.$router.push({\n                                                name: 'master',\n                                                query: {}\n                                              })\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lryyoiyn",
                                        "__description": "保存"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lryyoiym",
                                    "__description": ""
                                  }
                                ],
                                "display": true,
                                "permissionSetting": "",
                                "rightSpaceSize": 0
                              },
                              "__nodeKey": "nodeKey_flexLine_lryr5ymk",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lryr5ymi",
                          "__description": "",
                          "__nodeEvent": {
                            "onMounted": {
                              "isOn": true,
                              "fn": "async function onMountedFn(){\n\n\n                                this.$sharedFns.resetEditPageBtnState('delivery');\n\n\n                              }"
                            }
                          }
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lryr5yme",
                      "__description": ""
                    },
                    "clearPadding": [
                      "bottom"
                    ]
                  },
                  {
                    "tag": "item-2",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "400px",
                    "paddingSize": "large",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lryr5ymf",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lryvyt79",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "物资明细",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lryvyt7a",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableEdit",
                                "elementOptions": {
                                  "__nodeId": "tableEdit_lryvyt7c",
                                  "__nodeName": "tableEdit",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "modelName": "deliveryFormModel.qDeliveryMoreOrders",
                                    "columnConfigs": [
                                      {
                                        "dataKey": "rowIndex",
                                        "title": "序号",
                                        "align": "center",
                                        "width": 60,
                                        "id": "0_item_config_ltjslsgz"
                                      },
                                      {
                                        "dataKey": "detail",
                                        "title": "分解详情",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 100,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lryzvhso",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "button",
                                            "elementOptions": {
                                              "__nodeId": "button_lryzvhsn",
                                              "__nodeName": "button",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "size": "small",
                                                "plain": true,
                                                "content": "",
                                                "type": "info",
                                                "text": false,
                                                "link": false,
                                                "round": false,
                                                "circle": true,
                                                "loading": false,
                                                "disabled": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "iconFont": "icon cs-common xiangqing"
                                              },
                                              "__nodeEvent": {
                                                "onClick": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const { currentMatchedList,deliveryFormModel } = this.$dataModels\n                                                    if (row.typeMark == '材料维度') {\n                                                      if (!deliveryFormModel.matchedList[row.materialId]) {\n                                                        await this.$sharedFns.handleMaterialList([row]);\n                                                      }\n                                                      currentMatchedList.items = deliveryFormModel.matchedList[row.materialId]\n                                                    } else {\n\n                                                      this.$vueGlobal.$message({\n                                                        type: 'warning',\n                                                        message: '批次维度不可分解'\n                                                      })\n                                                      return\n                                                      // if (!deliveryFormModel.matchedList[row.itemBarCode]) {\n                                                      //   await this.$sharedFns.handleMaterialList([row]);\n                                                      // }\n                                                      // currentMatchedList.items = deliveryFormModel.matchedList[row.itemBarCode]\n                                                    }\n                                                    this.$exposeds.get('dialog_ls30bvis').model.dialogShow.value = true\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_button_lryzvhsn",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lryzvhso",
                                          "__description": ""
                                        },
                                        "id": "1_item_config_ltjslsh0"
                                      },
                                      {
                                        "dataKey": "materialName",
                                        "title": "物资名称",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 250,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "2_item_config_ltjslsh1"
                                      },
                                      {
                                        "dataKey": "materialModel",
                                        "title": "规格型号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 180,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "3_item_config_ltjslsh2"
                                      },
                                      {
                                        "dataKey": "materialUnit",
                                        "title": "计量单位",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 100,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "4_item_config_ltjslsh3"
                                      },
                                      {
                                        "dataKey": "quantity",
                                        "title": "库存量",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "5_item_config_ltjslsh4"
                                      },
                                      {
                                        "dataKey": "netQuantity",
                                        "title": "发料量",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ls1vldmp",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_ls1vldmo",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "netQuantity",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const { inventoryFilterModel,deliveryFormModel} = this.$dataModels\n                                                    const { labourId,serviceType,orgId } = deliveryFormModel.qDelivery\n\n                                                    const quantitySetting = this.$dataModels.globalConfig.singleTable.quantitySettings||4\n                                                    row.netQuantity = Math.abs(row.netQuantity.toFixed(quantitySetting))\n                                                    if (row.serviceType<0) {\n\n                                                    } else {\n                                                      if (!isNaN(parseFloat(row.netQuantity)) &&(parseFloat(row.netQuantity) >= 0)) {\n                                                        if (row.itemBarCode) {\n                                                          Object.assign(inventoryFilterModel.delivery,{\n                                                            dictType: 'materialType',\n                                                            materialType:'全部',\n                                                            labourId: labourId,\n                                                            serviceType: row.serviceType,\n                                                            itemBarCode: row.itemBarCode,\n                                                            dimensionType: '批次维度',\n                                                            orgId:orgId,\n                                                            orderOrigin: null\n                                                          })\n                                                          await this.$requestFns.queryDeliveryQuantity({}).then(data => {\n                                                            if (data.data.length) {\n                                                              const qtt = Decimal(row.netQuantity)\n                                                              const storeQuantity = Decimal(data.data[0].quantity)\n                                                              if (storeQuantity.lessThanOrEqualTo(qtt)) {\n                                                                row.netQuantity = Number(\n                                                                  new Decimal(storeQuantity).toFixed(quantitySetting)\n                                                                )\n                                                              } else {\n                                                                row.netQuantity = Number(\n                                                                  new Decimal(qtt).toFixed(quantitySetting)\n                                                                )\n                                                              }\n                                                            } else {\n                                                              row.netQuantity = 0\n                                                            }\n                                                          }).catch(err=> {\n                                                            row.netQuantity = 0\n                                                          })\n                                                        } else {\n                                                          if (!isNaN(parseFloat(row.quantity)) & (parseFloat(row.quantity) >= 0)) {\n                                                            const qtt = Decimal(row.netQuantity)\n                                                            const storeQuantity = Decimal(row.quantity)\n                                                            if (storeQuantity.lessThanOrEqualTo(qtt)) {\n                                                              row.netQuantity = Number(\n                                                                new Decimal(storeQuantity).toFixed(quantitySetting)\n                                                              )\n                                                            } else {\n                                                              row.netQuantity = Number(\n                                                                new Decimal(qtt).toFixed(quantitySetting)\n                                                              )\n                                                            }\n                                                          }\n                                                          // 分解材料\n                                                          this.$sharedFns.handleMaterialList([row]);\n                                                        }\n                                                      } else {\n                                                        row.netQuantity = 0\n                                                      }\n                                                    }\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_ls1vldmo",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ls1vldmp",
                                          "__description": ""
                                        },
                                        "id": "6_item_config_ltjslsh5"
                                      },
                                      {
                                        "dataKey": "remark",
                                        "title": "明细备注",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 400,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ls1vldn0",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ls1vldmz",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "remark",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_ls1vldmz",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ls1vldn0",
                                          "__description": ""
                                        },
                                        "id": "7_item_config_ltjslsh6"
                                      },
                                      {
                                        "dataKey": "code",
                                        "title": "操作",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lryzvhsz",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "button",
                                            "elementOptions": {
                                              "__nodeId": "button_lryzvhsy",
                                              "__nodeName": "button",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "size": "small",
                                                "plain": true,
                                                "content": "删除",
                                                "type": "danger",
                                                "text": false,
                                                "link": true,
                                                "round": false,
                                                "circle": false,
                                                "loading": false,
                                                "disabled": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "icon": "Delete"
                                              },
                                              "__nodeEvent": {
                                                "onClick": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const { qDeliveryMoreOrders, deleteItems, matchedList} = this.$dataModels.deliveryFormModel\n                                                    if (row.id) {\n                                                      deleteItems.push({id:row.id,orgId:row.orgId,orderId:row.orderId,isRemoved:true})\n                                                    }\n                                                    let idx = -1\n                                                    if (row.itemBarCode) {\n                                                      idx = qDeliveryMoreOrders.findIndex(m => m.itemBarCode==row.itemBarCode)\n                                                      delete matchedList[row.itemBarCode]\n                                                    } else {\n                                                      idx = qDeliveryMoreOrders.findIndex(m => m.materialId == row.materialId)\n                                                      delete matchedList[row.materialId]\n                                                    }\n                                                    qDeliveryMoreOrders.splice(idx,1)\n\n                                                    this.$sharedFns.resetEditPageBtnState('delivery');\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_button_lryzvhsy",
                                              "__description": "删除"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lryzvhsz",
                                          "__description": ""
                                        },
                                        "fixed": "right",
                                        "id": "8_item_config_ltjslsh7"
                                      }
                                    ],
                                    "mapConfig": {
                                      "deliverySource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "serviceType",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "serviceType",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orderId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "manufacturer",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "manufacturer",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "batchNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "batchNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "storagePlace",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "storagePlace",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "oriMaterialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "oriMaterialId",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "quantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "quantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "quantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "remark",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "remark",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "receivePrice",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "receivePrice",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "auxiliaryUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "auxiliaryUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "filterSupplierName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "filterSupplierName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "filterSupplierId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "filterSupplierId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "typeMark",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "typeMark",
                                          "defaultValType": "string"
                                        }
                                      ]
                                    },
                                    "sumRowConfig": {
                                      "disabled": true,
                                      "sumText": "合计",
                                      "items": {},
                                      "_items": []
                                    },
                                    "notRepeatFiled": [],
                                    "rowsLimit": 10000
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        //  if(window.assemBoxIsEdit){this.$currentInstance.exposed.methods.growData(\"addSource\",[{},{}]);}\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_tableEdit_lryvyt7c",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lryvyt7a",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lryvyt7b",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lryvyt7b",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lryvyt79",
                          "__description": "物资明细"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lryr5ymf",
                      "__description": ""
                    },
                    "dragButtonPosition": "bottom"
                  },
                  {
                    "tag": "item-3",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "400px",
                    "paddingSize": "large",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": true,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lryr5ymg",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lryvyt7j",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "物资明细",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lryvyt7k",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableEdit",
                                "elementOptions": {
                                  "__nodeId": "tableEdit_ls781bdw",
                                  "__nodeName": "tableEdit",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "modelName": "deliveryFormModel.qDeliveryMoreOrders",
                                    "columnConfigs": [
                                      {
                                        "dataKey": "rowIndex",
                                        "title": "序号",
                                        "align": "center",
                                        "width": 60,
                                        "id": "0_item_config_ltgtwlar"
                                      },
                                      {
                                        "dataKey": "materialName",
                                        "title": "物资名称",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "1_item_config_ltgtwlas"
                                      },
                                      {
                                        "dataKey": "materialModel",
                                        "title": "规格型号",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "2_item_config_ltgtwlat"
                                      },
                                      {
                                        "dataKey": "materialUnit",
                                        "title": "计量单位",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "3_item_config_ltgtwlau"
                                      },
                                      {
                                        "dataKey": "itemBarCode",
                                        "title": "物资条码",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 200,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "4_item_config_ltgtwlav"
                                      },
                                      {
                                        "dataKey": "quantity",
                                        "title": "库存量",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 100,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "id": "5_item_config_ltgtwlaw"
                                      },
                                      {
                                        "dataKey": "netQuantity",
                                        "title": "退料量",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ls78lsw6",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_ls78lsw5",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "netQuantity",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const { inventoryFilterModel,deliveryFormModel } = this.$dataModels\n                                                    inventoryFilterModel.returnDelivery.itemBarCode =row.itemBarCode\n                                                    inventoryFilterModel.returnDelivery.rawId = row.rawId\n                                                    inventoryFilterModel.returnDelivery.rawOrderCode = row.rawOrderCode\n                                                    const quantitySettings = this.$dataModels.globalConfig.singleTable.quantitySettings||4\n\n                                                    await this.$requestFns.queryDeliveryReturnMaterials({}).then(res => {\n                                                      let { rows } = res.data\n                                                      if (rows && rows.length) {\n                                                        if (rows[0].itemBarCode !== undefined) {\n                                                          const qtt = Decimal(row.netQuantity)\n                                                          const storeQuantity = Decimal(rows[0].quantity)\n                                                          if (storeQuantity.lessThanOrEqualTo(qtt)) {\n                                                            row.netQuantity = Number(\n                                                              new Decimal(storeQuantity).toFixed(\n                                                                quantitySettings\n                                                              )\n                                                            )\n                                                          } else {\n                                                            row.netQuantity = Number(\n                                                              new Decimal(qtt).toFixed(quantitySettings)\n                                                            )\n                                                          }\n                                                          deliveryFormModel.matchedList[row.itemBarCode] = JSON.parse(JSON.stringify(row))\n                                                        } else {\n                                                          row.netQuantity = 0\n                                                        }\n                                                      } else {\n                                                        row.netQuantity = 0\n                                                      }\n                                                    }).catch(err => {\n                                                      row.netQuantity = 0\n                                                    })\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_ls78lsw5",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ls78lsw6",
                                          "__description": ""
                                        },
                                        "id": "6_item_config_ltgtwlax"
                                      },
                                      {
                                        "dataKey": "remark",
                                        "title": "明细备注",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 160,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ls79x1qv",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ls79x1qu",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "remark",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_ls79x1qu",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ls79x1qv",
                                          "__description": ""
                                        },
                                        "id": "7_item_config_ltgtwlay"
                                      },
                                      {
                                        "dataKey": "code",
                                        "title": "操作",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ls781be6",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "button",
                                            "elementOptions": {
                                              "__nodeId": "button_ls781be5",
                                              "__nodeName": "button",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "size": "small",
                                                "plain": true,
                                                "content": "删除",
                                                "type": "danger",
                                                "text": false,
                                                "link": true,
                                                "round": false,
                                                "circle": false,
                                                "loading": false,
                                                "disabled": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "tooltip": false,
                                                "tooltipEffect": "dark",
                                                "tooltipContent": "显示的内容",
                                                "tooltipPlacement": "bottom",
                                                "icon": "Delete"
                                              },
                                              "__nodeEvent": {
                                                "onClick": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row) {\n                                                    const { qDeliveryMoreOrders, deleteItems, matchedList } = this.$dataModels.deliveryFormModel\n                                                    if (row.id) {\n                                                      deleteItems.push({ id: row.id, orgId: row.orgId, orderId: row.orderId, isRemoved: true })\n                                                    }\n                                                    let idx = -1\n                                                    if (row.itemBarCode) {\n                                                      idx = qDeliveryMoreOrders.findIndex(m => m.itemBarCode == row.itemBarCode)\n                                                      delete matchedList[row.itemBarCode]\n                                                    } else {\n                                                      idx = qDeliveryMoreOrders.findIndex(m => m.materialId == row.materialId)\n                                                      delete matchedList[row.materialId]\n                                                    }\n                                                    qDeliveryMoreOrders.splice(idx, 1)\n\n                                                    this.$sharedFns.resetEditPageBtnState('delivery');\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_button_ls781be5",
                                              "__description": "删除"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ls781be6",
                                          "__description": ""
                                        },
                                        "id": "8_item_config_ltgtwlaz"
                                      }
                                    ],
                                    "mapConfig": {
                                      "returnSource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "id",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "orderId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "auxiliaryUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "auxiliaryUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "receivePrice",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "receivePrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "oriMaterialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "oriMaterialId",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "quantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "quantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "quantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "itemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "remark",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "remark",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "rawOrderCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "rawOrderCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "rawId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "rawId",
                                          "defaultValType": "number"
                                        }
                                      ]
                                    },
                                    "sumRowConfig": {
                                      "disabled": true,
                                      "sumText": "合计",
                                      "items": {}
                                    },
                                    "notRepeatFiled": "",
                                    "rowsLimit": 10000
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n                                        //  if(window.assemBoxIsEdit){this.$currentInstance.exposed.methods.growData(\"demoSource\",[{},{}]);}\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_tableEdit_ls781bdw",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lryvyt7k",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lryvyt7l",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lryvyt7l",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lryvyt7j",
                          "__description": "物资明细"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lryr5ymg",
                      "__description": ""
                    },
                    "dragButtonPosition": "bottom"
                  },
                  {
                    "tag": "item-4",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lryr5ymh",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_ls9oh73a",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "出库凭证",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_ls9oh73b",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lsvjbevw",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "vertical",
                                    "wrap": false,
                                    "fill": true,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "100%",
                                      "height": "auto",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lsvjbevx",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lsvjbew0",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 2,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lsvjbew5",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "rawHtml",
                                                    "elementOptions": {
                                                      "__nodeId": "rawHtml_lsvjbew8",
                                                      "__nodeName": "rawHtml",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "content": "<span style=\"\">rawTxt渲染文本</span>",
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "modelName": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            let text = row.cameraPosition + '照片'\n                                                            if (row.isRequired) {\n                                                              text = ` <div style=\"color:var(--el-text-color-secondary)\"><span style=\"color:red\">*</span>${text}</div>`\n                                                            } else {\n                                                              text = ` <div style=\"color:var(--el-text-color-secondary)\">${text}</div>`\n                                                            }\n                                                            return { content: text }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_rawHtml_lsvjbew8",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lsvjbew5",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lsvjbew0",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lsvjbew3",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 20,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lsvjbew7",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "upload",
                                                    "elementOptions": {
                                                      "__nodeId": "upload_lsvjbewa",
                                                      "__nodeName": "upload",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {
                                                        "onMounted": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn(row) {\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              limit: row.total\n                                                            }\n\n                                                            // photoList=[{name:'',key:'photoUrl'},{name:'',key:'photoUrl'}]\n                                                            this.$currentInstance.exposed.model.fileList.value = row.photoList\n                                                            // this.$currentInstance.exposed.model.fileList.value = [{ name: '运单', key:'微信图片_20230614165501.jpg'}]\n\n                                                          }"
                                                        },
                                                        "onBeforeUpload": {
                                                          "isOn": true,
                                                          "type": "system",
                                                          "fn": "async function fnOnBeforeUpload(){\n\n\n\n                                                          }"
                                                        },
                                                        "onBeforeRemove": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnName(file,row) {\n                                                            const { deliveryFormModel } = this.$dataModels\n                                                            if (file.id) {\n                                                              deliveryFormModel.deletePhotos.push({ id: file.id, orgId: file.orgId, orderId: file.orderId, isRemoved: true })\n                                                            }\n                                                            const idx = row.photoList.findIndex(row => row.key == file.key)\n                                                            row.photoList[idx].isRemoved=true\n                                                          }"
                                                        },
                                                        "onChange": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnChange(uploadFile, uploadFiles, row) {\n\n                                                            if (uploadFile) {\n                                                              const { deliveryFormModel } = this.$dataModels\n                                                              row.photoList.push({\n                                                                orgId: deliveryFormModel.qDelivery.orgId,\n                                                                orderId: deliveryFormModel.qDelivery.id || 0,\n                                                                photoUrl: uploadFile.savedKey,\n                                                                key: uploadFile.savedKey,\n                                                                cameraPosition: row.cameraPosition,\n                                                                photoType: row.photoType,\n                                                                isRemoved:false\n                                                              })\n                                                            }\n\n                                                          }"
                                                        },
                                                        "onExceed": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnExceed(uploadFile, uploadFiles) {\n                                                            this.$vueGlobal.$message({\n                                                              type: 'error',\n                                                              message: '已超出允许上传的最大数量'\n                                                            })\n                                                          }"
                                                        },
                                                        "onPreview": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnPreview(uploadFile) {\n                                                            this.$dataModels.currentPreviewImg.singleTable.src = uploadFile.url\n                                                            this.$exposeds.get('dialog_lta29tk9').model.dialogShow.value = true\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeOptions": {
                                                        "uploadParams": {
                                                          "tempFile": false,
                                                          "product": "mquantity",
                                                          "autoGenerated": true,
                                                          "isAllowRepeated": false,
                                                          "singleSignatureURL": "/shared-data/fs/form-signature"
                                                        },
                                                        "downloadParams": {
                                                          "type": "img",
                                                          "product": "mquantity",
                                                          "expires": 15
                                                        },
                                                        "product": "mquantity",
                                                        "moduleName": "",
                                                        "prefix": "",
                                                        "multiple": false,
                                                        "showFileList": true,
                                                        "drag": false,
                                                        "accept": "['.jpg', '.png', '.jpeg', '.gif', '.bmp']",
                                                        "listType": "picture-card",
                                                        "autoUpload": true,
                                                        "disabled": false,
                                                        "limit": 0,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lsvjbewb",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "button",
                                                            "elementOptions": {
                                                              "__nodeId": "button_lsvjbewl",
                                                              "__nodeName": "button",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "modelName": "",
                                                                "size": "default",
                                                                "plain": true,
                                                                "content": "",
                                                                "type": "info",
                                                                "text": false,
                                                                "link": true,
                                                                "round": false,
                                                                "circle": false,
                                                                "loading": false,
                                                                "disabled": false,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "tooltip": false,
                                                                "tooltipEffect": "dark",
                                                                "tooltipContent": "显示的内容",
                                                                "tooltipPlacement": "bottom",
                                                                "icon": "Plus"
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_button_lsvjbewl",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lsvjbewb",
                                                          "__description": ""
                                                        },
                                                        "tipSlot": null,
                                                        "triggerSlot": null
                                                      },
                                                      "__nodeKey": "nodeKey_upload_lsvjbewa",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "100%",
                                                        "height": "100%"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lsvjbew7",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lsvjbew3",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lsvjbevx",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n                                        // 当前代码编辑器下有效\n                                        // if(window.assemBoxIsEdit){ this.$currentInstance.exposed.model.listData.value= [{},{}];}\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.deliveryFormModel.qDeliveryPhotos;\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lsvjbevw",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_ls9oh73b",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_ls9oh73c",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_ls9oh73c",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_ls9oh73a",
                          "__description": "出库凭证"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lryr5ymh",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-5",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lu5kf6px",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lu5l47k3",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "高拍仪",
                            "border": false,
                            "paddingSize": "base",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lu5l47k4",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lu7s9096",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": true,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lu7s9097",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lu7s909a",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu7s909c",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lu7s909d",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row){\n                                                            console.log(row,'row');\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              content: row.photoUrl\n                                                            }\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lu7s909d",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "100%",
                                                        "height": "115%"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu7s909c",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu7s909a",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "display": "flex",
                                                "alignItems": "stretch"
                                              }
                                            },
                                            {
                                              "__nodeId": "gridItem_lu7thlzj",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu7thlzn",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "button",
                                                    "elementOptions": {
                                                      "__nodeId": "button_lu7thlzo",
                                                      "__nodeName": "button",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "size": "default",
                                                        "plain": true,
                                                        "content": "删除",
                                                        "type": "danger",
                                                        "text": false,
                                                        "link": true,
                                                        "round": false,
                                                        "circle": false,
                                                        "loading": false,
                                                        "disabled": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "tooltip": false,
                                                        "tooltipEffect": "dark",
                                                        "tooltipContent": "显示的内容",
                                                        "tooltipPlacement": "bottom",
                                                        "icon": "delete"
                                                      },
                                                      "__nodeEvent": {
                                                        "onClick": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnName(row) {\n                                                            console.log(row, 'row')\n                                                            let photoList = this.$exposeds.get('listOnly_lu7s9096').model.listData.value\n                                                            console.log(photoList, 'photoList');\n                                                            photoList.forEach((item, index) => {\n                                                              if (item.photoUrl === row.photoUrl) {\n                                                                photoList.splice(index, 1)\n                                                                this.$dataModels.deliveryFormModel.qDeliveryGpys.splice(index, 1)\n                                                              }\n                                                            })\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_button_lu7thlzo",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "marginTop": "35px"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu7thlzn",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu7thlzj",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "display": "flex",
                                                "justifyContent": "flex-end"
                                              }
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lu7s9097",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn() {\n                                        if (this.$dataModels.deliveryFormModel.qDeliveryGpys.length) {\n                                          const file = {\n                                            keys: []\n                                          }\n                                          this.$dataModels.deliveryFormModel.qDeliveryGpys.forEach(item => {\n                                            file.keys.push(item.gpyPhotoUrl)\n                                          })\n                                          const result = await this.$sharedFns.downloadFile(file);\n                                          let arr = []\n                                          for (let key in result) {\n                                            arr.push({ photoUrl: result[key], orgId: this.$dataModels.deliveryFormModel.qDelivery.orgId })\n                                          }\n                                          this.$currentInstance.exposed.model.listData.value.push(...arr)\n                                        }\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lu7s9096",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lu5l47k4",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lu5l47k5",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [
                                  {
                                    "__nodeId": "elementRender_lu7s9094",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lu7s9095",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "拍照",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "icon": "FullScreen"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              if (this.$exposeds.get('listOnly_lu7s9096').model.listData.value.length >= this.$dataModels.gpyPhotoList.singleTable.photoNumber) {\n\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: '已超出允许上传的最大数量'\n                                                })\n\n\n                                              } else {\n                                                this.$exposeds.get('dialog_lu7s93dw').model.dialogShow.value = true\n                                              }\n\n                                              // 获取节点导出模型\n                                              // this.$exposeds.get('dialog_lu7s93dw').model.dialogShow.value = true\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lu7s9095",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lu7s9094",
                                    "__description": ""
                                  }
                                ],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lu5l47k5",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lu5l47k3",
                          "__description": "高拍仪"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lu5kf6px",
                      "__description": ""
                    }
                  }
                ]
              },
              "__nodeEvent": {
                "onMounted": {
                  "type": "system",
                  "isOn": true,
                  "fn": "async function onMountedFn(){\n                    const  { serviceType } = this.$dataModels.deliveryFormModel.qDelivery\n                    const itemConfig = this.$exposeds.get('flexBox_lryr5ymd').model.elementOption.value.itemConfig\n                    itemConfig.forEach(item => {\n                      if (item.tag =='item-2') {\n                        item.isHidden = serviceType < 0?true:false\n                      }\n                      if (item.tag == 'item-3') {\n                        item.isHidden = serviceType > 0 ? true : false\n                      }\n                      if (item.tag == 'item-5') {\n                        item.isHidden = this.$dataModels.gpyPhotoList.singleTable.isShow ? false : true\n                      }\n                    })\n                  }"
                }
              },
              "__nodeKey": "nodeKey_flexBox_lryr5ymd",
              "__description": ""
            }
          },
          "__nodeKey": "nodeKey_plane_lryr5ym5",
          "__description": ""
        },
        "dialogOptions": [
          {
            "__nodeId": "dialog_ls13w03p",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "库存选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_ls13w03q",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 4,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls13w03r",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls13vz9v",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {
                              "onMounted": {
                                "isOn": true,
                                "type": "system",
                                "fn": "async function onMountedFn(){\n\n\n\n                                }"
                              }
                            },
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_ls13vz9x",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [
                                    "left",
                                    "top",
                                    "right",
                                    "bottom"
                                  ],
                                  "rightClearPadding": [
                                    "left",
                                    "top",
                                    "right",
                                    "bottom"
                                  ],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [
                                    {
                                      "__nodeId": "elementRender_ls13vz9y",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "searchSelect",
                                        "elementOptions": {
                                          "__nodeId": "searchSelect_ls13vz9z",
                                          "__nodeName": "searchSelect",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "inventoryFilterModel.delivery.filterSupplierId",
                                            "requestFn": "queryInventorySuppliers",
                                            "defaultText": "",
                                            "size": "default",
                                            "disabled": false,
                                            "placeholder": "请选择供应单位",
                                            "searchPlaceholder": "请输入检索信息",
                                            "defaultProps": {
                                              "label": "supplierName",
                                              "value": "supplierId"
                                            },
                                            "limit": 10,
                                            "width": "100%",
                                            "dropdownHeight": "300px",
                                            "dropdownWidth": "300px",
                                            "searchEnable": true,
                                            "display": true,
                                            "permissionSetting": "",
                                            "filterName": "supplierName",
                                            "clearable": true
                                          },
                                          "__nodeEvent": {
                                            "onChange": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(value){\n                                                const { inventoryFilterModel} = this.$dataModels\n                                                inventoryFilterModel.delivery.filterSupplierId = value.supplierId\n                                                inventoryFilterModel.delivery.filterSupplierName = value.supplierName\n                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                  defaultText: value.supplierName\n                                                };\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = true\n                                                this.$exposeds.get('tableReport_ls13vzaa').methods.loadData(true);\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = false\n                                              }"
                                            },
                                            "onMounted": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function onMountedFn(){\n\n\n\n                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                  defaultText: this.$dataModels.inventoryFilterModel.delivery.filterSupplierName\n                                                };\n                                              }"
                                            },
                                            "onClear": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(value) {\n                                                const { inventoryFilterModel } = this.$dataModels\n                                                inventoryFilterModel.delivery.filterSupplierId = 0\n                                                inventoryFilterModel.delivery.filterSupplierName = ''\n\n                                                this.$currentInstance.exposed.model.elementOption.value = {\n                                                  defaultText: ''\n                                                };\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = true\n                                                this.$exposeds.get('tableReport_ls13vzaa').methods.loadData(true);\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_searchSelect_ls13vz9z",
                                          "__description": "请选择",
                                          "__nodeStyle": {
                                            "width": "160px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls13vz9y",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls13vza0",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls13vza1",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入供应单位",
                                            "modelName": "inventoryFilterModel.delivery.supplierName",
                                            "display": false,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls13vza1",
                                          "__description": "请输入物资名称",
                                          "__nodeStyle": {
                                            "width": "160px",
                                            "marginLeft": "-8px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls13vza0",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls1e688l",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "select",
                                        "elementOptions": {
                                          "__nodeId": "select_ls1e688m",
                                          "__nodeName": "select",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "multiple": false,
                                            "disabled": false,
                                            "size": "default",
                                            "clearable": true,
                                            "collapseTags": false,
                                            "collapseTagsTooltip": false,
                                            "multipleLimit": 0,
                                            "clearIcon": "CircleClose",
                                            "fitInputWidth": false,
                                            "filterable": false,
                                            "valueKey": "value",
                                            "placeholder": "请选择",
                                            "modelName": "inventoryFilterModel.delivery.orderOrigin",
                                            "itemData": [
                                              {
                                                "value": 3,
                                                "label": "全部"
                                              },
                                              {
                                                "value": 0,
                                                "label": "过磅磅单"
                                              },
                                              {
                                                "value": 1,
                                                "label": "APP单据"
                                              },
                                              {
                                                "value": 2,
                                                "label": "PC单据"
                                              }
                                            ],
                                            "defaultProps": {
                                              "label": "label",
                                              "value": "value"
                                            },
                                            "display": false,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {
                                            "onChange": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(val){\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = true\n                                                // this.$exposeds.get('tableReport_ls13vzaa').methods.loadData(true);\n                                                await this.$requestFns.queryDeliveryQuantity({}).then(res => {\n                                                  this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value = res.data\n                                                  setTimeout(() => {\n                                                    const { selectRows, inventoryFilterModel } = this.$dataModels\n                                                    const tableRef = this.$exposeds.get('tableReport_ls13vzaa').methods.getNativeRefs();\n                                                    if (selectRows.items.length) {\n                                                      this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value.forEach((row) => {\n                                                        let idx = -1\n                                                        if (inventoryFilterModel.delivery.dimensionType == '批次维度') {\n                                                          idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                        } else {\n                                                          idx = selectRows.items.findIndex(otem => otem.materialId == row.materialId && !otem.itemBarCode)\n                                                        }\n                                                        if (idx > -1) {\n                                                          tableRef._.setupState.toggleRowSelection(row)\n                                                        }\n                                                      })\n                                                    }\n                                                  }, 200)\n                                                });\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = false\n\n\n                                              }"
                                            },
                                            "onClear": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = true\n                                                // this.$exposeds.get('tableReport_ls13vzaa').methods.loadData(true);\n                                                await this.$requestFns.queryDeliveryQuantity({}).then(res => {\n                                                  this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value = res.data\n                                                  setTimeout(() => {\n                                                    const { selectRows, inventoryFilterModel } = this.$dataModels\n                                                    const tableRef = this.$exposeds.get('tableReport_ls13vzaa').methods.getNativeRefs();\n                                                    if (selectRows.items.length) {\n                                                      this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value.forEach((row) => {\n                                                        let idx = -1\n                                                        if (inventoryFilterModel.delivery.dimensionType == '批次维度') {\n                                                          idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                        } else {\n                                                          idx = selectRows.items.findIndex(otem => otem.materialId == row.materialId && !otem.itemBarCode)\n                                                        }\n                                                        if (idx > -1) {\n                                                          tableRef._.setupState.toggleRowSelection(row)\n                                                        }\n                                                      })\n                                                    }\n                                                  }, 200)\n                                                });\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = false\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_select_ls1e688m",
                                          "__description": "请选择",
                                          "__nodeStyle": {
                                            "width": "110px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls1e688l",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls1e688n",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls1e688o",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入物资名称",
                                            "modelName": "inventoryFilterModel.delivery.materialName",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls1e688o",
                                          "__description": "请输入物资名称",
                                          "__nodeStyle": {
                                            "width": "130px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls1e688n",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls1e688p",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls1e688q",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入规格型号",
                                            "modelName": "inventoryFilterModel.delivery.materialModel",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls1e688q",
                                          "__description": "请输入规格型号",
                                          "__nodeStyle": {
                                            "width": "130px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls1e688p",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls1e688r",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls1e688s",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入条码",
                                            "modelName": "inventoryFilterModel.delivery.itemBarCode",
                                            "display": false,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls1e688s",
                                          "__description": "请输入条码",
                                          "__nodeStyle": {
                                            "width": "150px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls1e688r",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls1e689b",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls1e689c",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "查询",
                                            "type": "info",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "icon": "Search"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = true\n                                                // await this.$requestFns.queryDeliveryQuantity({}).then(res => {\n                                                //      this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value = res.data\n                                                //      setTimeout(() => {\n                                                //      const { selectRows, inventoryFilterModel } = this.$dataModels\n                                                //         const tableRef  = this.$exposeds.get('tableReport_ls13vzaa').methods.getNativeRefs();\n                                                //         if (selectRows.items.length) {\n                                                //               this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value.forEach((row) => {\n                                                //                 let idx = -1\n                                                //                 if (row.itemBarCode) {\n                                                //                   idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                //                 } else {\n                                                //                   idx = selectRows.items.findIndex(otem => otem.materialId == row.materialId && !otem.itemBarCode)\n                                                //                 }\n                                                //                 if (idx > -1) {\n                                                //                   tableRef._.setupState.toggleRowSelection(row)\n                                                //                 }\n                                                //             })\n                                                //           }\n                                                //      }, 200)\n                                                //   });\n\n                                                this.$exposeds.get('tableReport_ls13vzaa').methods.loadData();\n\n\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls1e689c",
                                          "__description": "查询"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls1e689b",
                                      "__description": ""
                                    }
                                  ],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_ls1e689x",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "radioGroup",
                                        "elementOptions": {
                                          "__nodeId": "radioGroup_ls1e689y",
                                          "__nodeName": "radioGroup",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "disabled": false,
                                            "size": "default",
                                            "type": "button",
                                            "modelName": "inventoryFilterModel.delivery.dimensionType",
                                            "itemData": [
                                              {
                                                "label": "物资维度",
                                                "value": "材料维度"
                                              },
                                              {
                                                "label": "批次维度",
                                                "value": "批次维度"
                                              }
                                            ],
                                            "defaultProps": {
                                              "label": "label",
                                              "value": "value"
                                            },
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {
                                            "onChange": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(val) {\n                                                const { inventoryFilterModel, selectRows, deliveryFormModel} =this.$dataModels\n                                                const { qDelivery } = deliveryFormModel\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = true\n                                                const columns = this.$exposeds.get('tableReport_ls13vzaa').model.elementOption.value.columnConfigs\n                                                // this.$assemCore.setForm('inventoryFilterModel');\n\n                                                Object.assign(inventoryFilterModel.delivery, {\n\n                                                  itemBarCode: ''\n                                                })\n                                                if (val == '材料维度') {\n                                                  inventoryFilterModel.delivery.selectData.push(...selectRows.items.filter(row =>row.itemBarCode))\n                                                  this.$sharedFns.setNodeOptions([\n                                                    ['input_ls1e688s', 'display', false], // 物资条码\n                                                    ['input_ls13vza1', 'display', false], //供应商输入\n                                                    ['select_ls1e688m', 'display', false], // 单据类型\n                                                    ['searchSelect_ls13vz9z', 'display', true] // 供应商下拉选择\n                                                  ])\n                                                  columns.forEach(c => {\n                                                    if (['exitTime', 'orderOrigin', 'serviceType', 'netQuantity', 'supplierName', 'taxRate', 'taxIncludedPrice', 'itemBarCode',\n                                                      'manufacturer', 'batchNo', 'storagePlace', 'itemRemark'].includes(c.attr.prop)) {\n                                                      c.display = false\n                                                    }\n                                                  })\n                                                } else {\n                                                  // inventoryFilterModel.delivery.filterSupplierId = null\n                                                  // inventoryFilterModel.delivery.filterSupplierName = \"\"\n                                                  const ids = selectRows.items.reduce((arr,row) => {\n                                                    row.itemBarCode ? '' : arr.push(row.materialId)\n                                                    return arr\n                                                  },[])\n                                                  inventoryFilterModel.delivery.materialId = [-1, ...ids]\n                                                  this.$sharedFns.setNodeOptions([\n                                                    ['input_ls1e688s', 'display', true], // 物资条码\n                                                    ['input_ls13vza1', 'display', true], //供应商输入\n                                                    ['select_ls1e688m', 'display', true], // 单据类型\n                                                    ['searchSelect_ls13vz9z', 'display', false] // 供应商下拉选择\n                                                  ])\n                                                  columns.forEach(c => {\n                                                    if (['exitTime', 'orderOrigin', 'serviceType', 'netQuantity', 'supplierName', 'taxRate', 'taxIncludedPrice', 'itemBarCode',\n                                                      'manufacturer', 'batchNo', 'storagePlace', 'itemRemark'].includes(c.attr.prop)) {\n                                                      c.display = true\n                                                    }\n                                                  })\n                                                }\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.elementOption.value = {\n                                                  columnConfigs: columns,\n                                                  isDeep: true\n                                                }\n\n                                                // this.$exposeds.get('tableReport_ls13vzaa').methods.loadData();\n                                                await this.$requestFns.queryDeliveryQuantity({}).then(res => {\n                                                  this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value = res.data\n                                                  setTimeout(() => {\n                                                    const { selectRows, inventoryFilterModel } = this.$dataModels\n                                                    const tableRef = this.$exposeds.get('tableReport_ls13vzaa').methods.getNativeRefs();\n                                                    if (selectRows.items.length) {\n                                                      this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value.forEach((row) => {\n                                                        let idx = -1\n                                                        if (inventoryFilterModel.delivery.dimensionType == '批次维度') {\n                                                          idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                        } else {\n                                                          idx = selectRows.items.findIndex(otem => otem.materialId == row.materialId && !otem.itemBarCode)\n                                                        }\n                                                        if (idx > -1) {\n                                                          tableRef._.setupState.toggleRowSelection(row)\n                                                        }\n                                                      })\n                                                    }\n                                                  }, 200)\n                                                });\n                                                this.$exposeds.get('tableReport_ls13vzaa').model.tableLoading.value = false\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_radioGroup_ls1e689y",
                                          "__description": ""
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls1e689x",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls13vz9x",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls13vz9v",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls13w03r",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": true,
                      "showDragButton": true,
                      "size": "320px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls13vz9s",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls13vza8",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls13vza9",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableReport",
                                  "elementOptions": {
                                    "__nodeId": "tableReport_ls13vzaa",
                                    "__nodeName": "tableReport",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function onMountedFn(){\n                                          const val = this.$dataModels.inventoryFilterModel.delivery.dimensionType\n\n                                          this.$currentInstance.exposed.model.tableLoading.value=true\n\n                                          const columns = this.$currentInstance.exposed.model.elementOption.value.columnConfigs\n                                          columns.forEach(c => {\n                                            if (['exitTime', 'orderOrigin', 'serviceType', 'netQuantity', 'supplierName', 'taxRate', 'taxIncludedPrice', 'itemBarCode',\n                                              'manufacturer', 'batchNo', 'storagePlace', 'itemRemark'].includes(c.attr.prop)){\n                                              if (val == '材料维度'){\n                                                c.display = false\n                                              } else {\n                                                c.display = true\n                                              }\n                                            }\n                                          })\n                                          this.$currentInstance.exposed.model.elementOption.value = {\n                                            columnConfigs: columns,\n                                            isDeep: true\n                                          }\n                                          //  this.$currentInstance.exposed.methods.loadData(true);\n                                          const res = await this.$requestFns.queryDeliveryQuantity({});\n                                          this.$currentInstance.exposed.model.tableData.value = res.data\n\n\n                                          this.$currentInstance.exposed.model.tableLoading.value = false\n\n                                        }"
                                      },
                                      "onSelect": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnOnSelect(rows, currentRow){\n                                          debugger\n                                          const { selectRows, inventoryFilterModel } = this.$dataModels\n                                          const idx = selectRows.items.findIndex(row =>{\n                                            if (inventoryFilterModel.delivery.dimensionType=='材料维度') {\n                                              return row.materialId == currentRow.materialId\n                                            } else {\n                                              return row.itemBarCode == currentRow.itemBarCode\n                                            }\n                                          })\n                                          if (idx<0) {\n                                            selectRows.items.push(currentRow)\n                                          } else {\n                                            selectRows.items.splice(idx,1)\n                                          }\n\n                                          this.$exposeds.get('tableOnly_ls1k7dc2').model.tableData.value = selectRows.items\n                                        }"
                                      },
                                      "onLoadData": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnLoadData(params){\n                                          const res = await this.$requestFns.queryDeliveryQuantity({});\n                                          this.$currentInstance.exposed.model.tableData.value = res.data\n                                          const { selectRows, inventoryFilterModel } = this.$dataModels\n                                          setTimeout(() => {\n                                            const tableRef = this.$currentInstance.exposed.methods.getNativeRefs()\n                                            if (selectRows.items.length) {\n                                              this.$currentInstance.exposed.model.tableData.value.forEach((row) => {\n                                                let idx = -1\n                                                if (inventoryFilterModel.delivery.dimensionType == '批次维度') {\n                                                  idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                } else {\n                                                  idx = selectRows.items.findIndex(otem => otem.materialId == row.materialId && !otem.itemBarCode)\n                                                }\n                                                if (idx > -1) {\n                                                  tableRef._.setupState.toggleRowSelection(row)\n                                                }\n                                              })\n                                            }\n                                          }, 100)\n                                        }"
                                      },
                                      "onPageChange": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnPageChangeName(currentSize,pageSize){\n\n                                          const { selectRows, inventoryFilterModel } = this.$dataModels\n                                          const tableRef = this.$currentInstance.exposed.methods.getNativeRefs()\n                                          if (selectRows.items.length) {\n                                            this.$currentInstance.exposed.model.tableData.value.forEach((row) => {\n                                              let idx = -1\n                                              if (inventoryFilterModel.delivery.dimensionType == '批次维度')  {\n                                                idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                              } else{\n                                                idx = selectRows.items.findIndex(otem => otem.materialId == row.materialId && !otem.itemBarCode)\n                                              }\n                                              if (idx > -1) {\n                                                // arr.push(row)\n                                                // selectRows.items.splice(idx,1)\n                                                tableRef._.setupState.toggleRowSelection(row)\n\n                                              }\n                                            })\n\n                                            // tableRef.setupState.toggleRowSelection(rows)\n\n                                          }\n\n\n                                        }"
                                      },
                                      "onSelectionChange": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnSelectionChange(rows, row) {\n                                          // debugger\n                                          if (!rows.length) {\n                                            return\n                                          }\n                                          const { selectRows } = this.$dataModels\n                                          rows.forEach(item => {\n                                            const idx = selectRows.items.findIndex(row => {\n                                              if (!item.itemBarCode) {\n                                                return row.materialId == item.materialId\n                                              } else {\n                                                return row.itemBarCode == item.itemBarCode\n                                              }\n                                            })\n                                            if (idx < 0) {\n                                              selectRows.items.push(item)\n                                            }\n                                            //  else {\n                                            //   selectRows.items.splice(idx, 1)\n                                            // }\n                                          })\n\n\n                                          this.$exposeds.get('tableOnly_ls1k7dc2').model.tableData.value = selectRows.items\n\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(currentRow, column) {\n\n                                          const { selectRows, inventoryFilterModel } = this.$dataModels\n                                          const idx = selectRows.items.findIndex(row => {\n                                            if (!currentRow.itemBarCode) {\n                                              return row.materialId == currentRow.materialId\n                                            } else {\n                                              return row.itemBarCode == currentRow.itemBarCode\n                                            }\n                                          })\n                                          if (idx < 0) {\n                                            selectRows.items.push(currentRow)\n                                          } else {\n                                            selectRows.items.splice(idx, 1)\n                                          }\n\n                                          this.$exposeds.get('tableOnly_ls1k7dc2').model.tableData.value = selectRows.items\n\n                                          const tableRef = this.$currentInstance.exposed.methods.getNativeRefs();\n                                          tableRef._.setupState.toggleRowSelection(currentRow)\n\n                                        }"
                                      }
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "selection",
                                            "label": "选择",
                                            "width": "60",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "",
                                            "type": "selection",
                                            "fixed": "left"
                                          },
                                          "id": "0_item_config_lu948ppj"
                                        },
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "1_item_config_lu948ppk"
                                        },
                                        {
                                          "attr": {
                                            "prop": "exitTime",
                                            "label": "入库时间",
                                            "width": "180",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "isParent": false,
                                          "items": [],
                                          "id": "2_item_config_lu948ppl"
                                        },
                                        {
                                          "attr": {
                                            "prop": "serviceType",
                                            "label": "类型",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": "serviceType"
                                          },
                                          "id": "3_item_config_lu948ppm"
                                        },
                                        {
                                          "attr": {
                                            "prop": "orderOrigin",
                                            "label": "单据来源",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "orderOrigin"
                                          },
                                          "id": "4_item_config_lu948ppn"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_lu948ppo"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "6_item_config_lu948ppp"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "7_item_config_lu948ppq"
                                        },
                                        {
                                          "attr": {
                                            "prop": "netQuantity",
                                            "label": "收料量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "8_item_config_lu948ppr"
                                        },
                                        {
                                          "attr": {
                                            "prop": "quantity",
                                            "label": "库存量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "9_item_config_lu948pps"
                                        },
                                        {
                                          "attr": {
                                            "prop": "supplierName",
                                            "label": "供应单位",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "10_item_config_lu948ppt"
                                        },
                                        {
                                          "attr": {
                                            "prop": "taxRate",
                                            "label": "税率(%)",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "11_item_config_lu948ppu"
                                        },
                                        {
                                          "attr": {
                                            "prop": "taxIncludedPrice",
                                            "label": "含税单价(元)",
                                            "width": "110",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "12_item_config_lu948ppv"
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemBarCode",
                                            "label": "物资条码",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "13_item_config_lu948ppw"
                                        },
                                        {
                                          "attr": {
                                            "prop": "manufacturer",
                                            "label": "生产厂商",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "14_item_config_lu948ppx"
                                        },
                                        {
                                          "attr": {
                                            "prop": "batchNo",
                                            "label": "炉批号",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "15_item_config_lu948ppy"
                                        },
                                        {
                                          "attr": {
                                            "prop": "storagePlace",
                                            "label": "存放地",
                                            "width": "120",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "16_item_config_lu948ppz"
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemRemark",
                                            "label": "明细备注",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "17_item_config_lu948pq0"
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "serviceType",
                                          "columRender": {
                                            "__nodeId": "columRender_ls1e685g",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "tag",
                                              "elementOptions": {
                                                "__nodeId": "tag_ls1e685f",
                                                "__nodeName": "tag",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "content": "标签",
                                                  "closable": false,
                                                  "hit": false,
                                                  "round": false,
                                                  "effect": "light",
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "size": "small"
                                                },
                                                "__nodeEvent": {
                                                  "onValueRender": {
                                                    "type": "system",
                                                    "isOn": true,
                                                    "fn": "function onValueRenderFn(row){\n\n                                                      const { serviceType} =  row\n                                                      return {\n                                                        content: serviceType==10?'收料':'调入',\n                                                        type: serviceType == 10 ? 'primary' : 'success',\n                                                      }\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_tag_ls1e685f",
                                                "__description": "标签"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_ls1e685g",
                                            "__description": ""
                                          },
                                          "propName": "类型"
                                        },
                                        {
                                          "code": "orderOrigin",
                                          "columRender": {
                                            "__nodeId": "columRender_ls1e6872",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "tag",
                                              "elementOptions": {
                                                "__nodeId": "tag_ls1e6871",
                                                "__nodeName": "tag",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "content": "标签",
                                                  "closable": false,
                                                  "hit": false,
                                                  "round": false,
                                                  "effect": "light",
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "size": "small"
                                                },
                                                "__nodeEvent": {
                                                  "onValueRender": {
                                                    "type": "system",
                                                    "isOn": true,
                                                    "fn": "function onValueRenderFn(row){\n\n                                                      const { orderOrigin } = row\n                                                      return {\n                                                        content: orderOrigin == 0 ? '过磅' : orderOrigin==1?'APP':'PC',\n                                                        type: orderOrigin == 0 ? 'primary' : orderOrigin == 1 ? 'success' : 'info'\n                                                      }\n\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_tag_ls1e6871",
                                                "__description": "标签"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_ls1e6872",
                                            "__description": ""
                                          },
                                          "propName": "单据来源"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes,prev,pager,next,total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeKey": "nodeKey_tableReport_ls13vzaa",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls13vza9",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls13vza8",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls13vz9s",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-3",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "260px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "top",
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls13vz9t",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "panel",
                          "containerOptions": {
                            "__nodeId": "panel_ls13vzac",
                            "__nodeName": "panel",
                            "__nodeType": "baseNode",
                            "__nodeOptions": {
                              "showHeader": true,
                              "title": "已选列表",
                              "border": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "toolSlot": {
                                "__nodeId": "flexLine_ls13vzae",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls13vzae",
                                "__description": ""
                              },
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls1k7dc1",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableOnly",
                                  "elementOptions": {
                                    "__nodeId": "tableOnly_ls1k7dc2",
                                    "__nodeName": "tableOnly",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "quantity",
                                            "label": "库存量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemBarCode",
                                            "label": "物资条码",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "sortCode",
                                            "label": "操作",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "sortCode"
                                          }
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "sortCode",
                                          "columRender": {
                                            "__nodeId": "columRender_ls1k7dcj",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "button",
                                              "elementOptions": {
                                                "__nodeId": "button_ls1k7dci",
                                                "__nodeName": "button",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "size": "small",
                                                  "plain": true,
                                                  "content": "删除",
                                                  "type": "danger",
                                                  "text": false,
                                                  "link": true,
                                                  "round": false,
                                                  "circle": false,
                                                  "loading": false,
                                                  "disabled": false,
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "tooltip": false,
                                                  "tooltipEffect": "dark",
                                                  "tooltipContent": "显示的内容",
                                                  "tooltipPlacement": "bottom",
                                                  "icon": "Delete"
                                                },
                                                "__nodeEvent": {
                                                  "onClick": {
                                                    "type": "system",
                                                    "isOn": true,
                                                    "fn": "async function fnName(row){\n                                                      const { selectRows} = this.$dataModels\n                                                      let idx = -1\n                                                      if (!row.itemBarCode) {\n                                                        idx = selectRows.items.findIndex(t => !t.itemBarCode && t.materialId==row.materialId)\n                                                      } else {\n                                                        idx = selectRows.items.findIndex(t => t.itemBarCode == row.itemBarCode)\n                                                      }\n                                                      selectRows.items.splice(idx, 1)\n                                                      const tableRef = this.$exposeds.get('tableReport_ls13vzaa').methods.getNativeRefs();\n                                                      this.$exposeds.get('tableReport_ls13vzaa').model.tableData.value.forEach(t => {\n                                                        if (!row.itemBarCode) {\n                                                          if (!t.itemBarCode && row.materialId == t.materialId) {\n                                                            tableRef._.setupState.toggleRowSelection(t)\n                                                          }\n                                                        } else {\n                                                          if (row.itemBarCode == t.itemBarCode) {\n                                                            tableRef._.setupState.toggleRowSelection(t)\n                                                          }\n                                                        }\n\n                                                      })\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_button_ls1k7dci",
                                                "__description": "删除"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_ls1k7dcj",
                                            "__description": ""
                                          },
                                          "propName": "操作"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "defaultExpandAll": false,
                                      "rowKey": "id",
                                      "lazy": false,
                                      "treeProps": {
                                        "hasChildren": "hasChildren",
                                        "children": "children"
                                      },
                                      "expandRowKeys": [],
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "type": "system",
                                        "isOn": false,
                                        "fn": "async function onMountedFn(){\n                                          const { selectRows } = this.$dataModels\n                                          this.$currentInstance.exposed.model.tableData.value = selectRows.items\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_tableOnly_ls1k7dc2",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls1k7dc1",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_panel_ls13vzac",
                            "__description": "已选列表"
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls13vz9t",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-4",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls13vz9u",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls13vzah",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_ls13vzaj",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_ls13vzak",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls13vzal",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "取消",
                                            "type": "primary",
                                            "text": true,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                this.$dataModels.selectRows.items = []\n                                                this.$exposeds.get('dialog_ls13w03p').model.dialogShow.value = false\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls13vzal",
                                          "__description": "取消"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls13vzak",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls13vzam",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls13vzan",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "确定",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "icon": "CircleCheck"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                const { selectRows,deliveryFormModel,inventoryFilterModel } = this.$dataModels\n                                                const { id,orgId,serviceType,orderType } = deliveryFormModel.qDelivery\n                                                const { filterSupplierName, filterSupplierId } = inventoryFilterModel.delivery\n                                                const addItems = selectRows.items.reduce((arr,t) => {\n                                                  let idx = -1\n                                                  if (!t.itemBarCode) {\n                                                    t.typeMark= '材料维度'\n                                                    t.filterSupplierName = filterSupplierName || ''\n                                                    t.filterSupplierId = filterSupplierId || 0\n                                                    idx = deliveryFormModel.qDeliveryMoreOrders.findIndex(d =>  d.materialId==t.materialId)\n                                                  } else {\n                                                    t.typeMark = '条码维度'\n                                                    t.filterSupplierName = ''\n                                                    t.filterSupplierId = 0\n                                                    let idx1= deliveryFormModel.qDeliveryMoreOrders.findIndex(d => d.itemBarCode == t.itemBarCode)\n                                                    let idx2 = deliveryFormModel.qDeliveryMoreOrders.findIndex(d => !d.itemBarCode&&d.materialId==t.materialId)\n                                                    if (idx1==-1&&idx2==-1) {\n                                                      idx=-1\n                                                    } else {\n                                                      idx=2\n                                                    }\n                                                  }\n                                                  if (idx == -1) {\n                                                    t.orderId = id\n                                                    t.orgId = orgId\n                                                    t.serviceType = serviceType\n                                                    t.orderType = orderType\n                                                    arr.push(t)\n                                                  }\n                                                  return arr\n                                                },[])\n                                                this.$exposeds.get('tableEdit_lryvyt7c').methods.growData('deliverySource', addItems);\n                                                this.$exposeds.get('dialog_ls13w03p').model.dialogShow.value = false\n                                                this.$dataModels.selectRows.items = []\n                                                this.$sharedFns.resetEditPageBtnState('delivery');\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls13vzan",
                                          "__description": "确定"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls13vzam",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls13vzaj",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls13vzah",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls13vz9u",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_ls13w03q",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_ls13w03p",
            "__description": "库存选材",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n                  const { selectRows,inventoryFilterModel } = this.$dataModels\n                  selectRows.items = []\n                  inventoryFilterModel.delivery.filterSupplierId = 0\n                  inventoryFilterModel.delivery.filterSupplierName = ''\n                  inventoryFilterModel.delivery.materialName=''\n                  inventoryFilterModel.delivery.materialModel = ''\n                  inventoryFilterModel.delivery.supplierName = ''\n                  inventoryFilterModel.delivery. orderOrigin = ''\n                  inventoryFilterModel.delivery.itemBarCode = ''\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_ls30bvis",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "800px",
              "title": "分解明细",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_ls30bvit",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "400px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls30bviu",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls30btwa",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls30btwb",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableReport",
                                  "elementOptions": {
                                    "__nodeId": "tableReport_ls30btwc",
                                    "__nodeName": "tableReport",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function onMountedFn(){\n                                          this.$currentInstance.exposed.model.tableData.value = this.$dataModels.currentMatchedList.items\n\n                                        }"
                                      }
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": "120",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "netQuantity",
                                            "label": "发料量",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "quantity",
                                            "label": "库存量",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemBarCode",
                                            "label": "物资条码",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        }
                                      ],
                                      "columnSlots": [],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeKey": "nodeKey_tableReport_ls30btwc",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls30btwb",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls30btwa",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls30bviu",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_ls30bvit",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_ls30bvis",
            "__description": "分解明细"
          },
          {
            "__nodeId": "dialog_ls4bqfn2",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_ls4bqfn3",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 4,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls4bqfn4",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls4bqe80",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [
                                "left"
                              ],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_ls4bqe82",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [
                                    {
                                      "__nodeId": "elementRender_ls4bqe8e",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls4bqe8f",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入用料单位名称",
                                            "modelName": "inventoryFilterModel.returnDelivery.labourName",
                                            "display": false,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls4bqe8f",
                                          "__description": "请输入用料单位名称",
                                          "__nodeStyle": {
                                            "width": "130px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqe8e",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls4bqe8i",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls4bqe8j",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入物资名称",
                                            "modelName": "inventoryFilterModel.returnDelivery.materialName",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls4bqe8j",
                                          "__description": "请输入物资名称",
                                          "__nodeStyle": {
                                            "width": "150px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqe8i",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls4bqe8k",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls4bqe8l",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入规格型号",
                                            "modelName": "inventoryFilterModel.returnDelivery.materialModel",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls4bqe8l",
                                          "__description": "请输入规格型号",
                                          "__nodeStyle": {
                                            "width": "150px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqe8k",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls4bqe8m",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls4bqe8n",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入物资条码",
                                            "modelName": "inventoryFilterModel.returnDelivery.itemBarCode",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls4bqe8n",
                                          "__description": "请输入物资条码",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqe8m",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls4bqeb5",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "searchSelect",
                                        "elementOptions": {
                                          "__nodeId": "searchSelect_ls4bqeb6",
                                          "__nodeName": "searchSelect",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "inventoryFilterModel.returnDelivery.ghId",
                                            "requestFn": "queryGhOfLabour",
                                            "defaultText": "",
                                            "size": "default",
                                            "disabled": false,
                                            "placeholder": "请选择使用部位",
                                            "searchPlaceholder": "请输入检索信息",
                                            "defaultProps": {
                                              "label": "name",
                                              "subLabel": "fullName",
                                              "value": "id"
                                            },
                                            "limit": 10,
                                            "width": "160px",
                                            "dropdownHeight": "300px",
                                            "dropdownWidth": "300px",
                                            "searchEnable": true,
                                            "display": true,
                                            "permissionSetting": "",
                                            "clearable": true
                                          },
                                          "__nodeEvent": {
                                            "onMounted": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function onMountedFn(){\n                                                const { deliveryFormModel } = this.$dataModels\n                                                if (deliveryFormModel.qDelivery.ghId) {\n                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                    disabled: true,\n                                                    defaultText: deliveryFormModel.qDelivery.ghName\n                                                  }\n                                                } else {\n                                                  this.$currentInstance.exposed.model.elementOption.value = {\n                                                    disabled: false\n                                                  }\n                                                }\n\n                                              }"
                                            },
                                            "onChange": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').model.tableLoading.value = true\n                                                const { selectRows } = this.$dataModels\n                                                selectRows.singleTable.isChoose = true\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').methods.loadData(true);\n                                                // 设置勾选状态\n\n                                                const tableRef = this.$exposeds.get('tableAsync_ls4bqe8r').methods.getNativeRefs();\n\n                                                if (selectRows.items.length) {\n\n                                                  this.$exposeds.get('tableAsync_ls4bqe8r').model.tableData.value.rows.forEach((row) => {\n                                                    const idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                    if (idx > -1) {\n                                                      tableRef._.setupState.toggleRowSelection(row)\n                                                    }\n                                                  })\n                                                }\n\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').model.tableLoading.value = false\n                                                selectRows.singleTable.isChoose = false\n                                              }"
                                            },
                                            "onClear": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').model.tableLoading.value = true\n                                                const { selectRows } = this.$dataModels\n                                                selectRows.singleTable.isChoose = true\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').methods.loadData(true);\n                                                // 设置勾选状态\n\n                                                const tableRef = this.$exposeds.get('tableAsync_ls4bqe8r').methods.getNativeRefs();\n\n                                                if (selectRows.items.length) {\n\n                                                  this.$exposeds.get('tableAsync_ls4bqe8r').model.tableData.value.rows.forEach((row) => {\n                                                    const idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                    if (idx > -1) {\n                                                      tableRef._.setupState.toggleRowSelection(row)\n                                                    }\n                                                  })\n                                                }\n\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').model.tableLoading.value = false\n                                                selectRows.singleTable.isChoose = false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_searchSelect_ls4bqeb6",
                                          "__description": "请选择使用部位",
                                          "__nodeStyle": {
                                            "width": "160px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqeb5",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls4bqe8o",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls4bqe8p",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "查询",
                                            "type": "info",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "icon": "Search"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').model.tableLoading.value = true\n                                                const { selectRows} =  this.$dataModels\n                                                selectRows.singleTable.isChoose = true\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').methods.loadData(true);\n                                                // 设置勾选状态\n\n                                                const tableRef =   this.$exposeds.get('tableAsync_ls4bqe8r').methods.getNativeRefs();\n\n                                                if (selectRows.items.length) {\n\n                                                  this.$exposeds.get('tableAsync_ls4bqe8r').model.tableData.value.rows.forEach((row) => {\n                                                    const idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                    if (idx > -1) {\n                                                      tableRef._.setupState.toggleRowSelection(row)\n                                                    }\n                                                  })\n                                                }\n\n                                                this.$exposeds.get('tableAsync_ls4bqe8r').model.tableLoading.value = false\n                                                selectRows.singleTable.isChoose= false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls4bqe8p",
                                          "__description": "查询"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqe8o",
                                      "__description": ""
                                    }
                                  ],
                                  "rightSlot": null,
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls4bqe82",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls4bqe80",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls4bqfn4",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "340px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls4bqe7x",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls4bqe83",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls4bqe8q",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableAsync",
                                  "elementOptions": {
                                    "__nodeId": "tableAsync_ls4bqe8r",
                                    "__nodeName": "tableAsync",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "selection",
                                            "label": "选择",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "0_item_config_ltk4r1u8"
                                        },
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "label": "序号",
                                            "width": "60",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "",
                                            "type": "index"
                                          },
                                          "id": "1_item_config_ltk4r1u9"
                                        },
                                        {
                                          "attr": {
                                            "prop": "exitTime",
                                            "label": "出库时间",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "2_item_config_ltk4r1ua"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "3_item_config_ltk4r1ub"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "4_item_config_ltk4r1uc"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_ltk4r1ud"
                                        },
                                        {
                                          "attr": {
                                            "prop": "quantity",
                                            "label": "发料量",
                                            "width": "120",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "6_item_config_ltk4r1ue"
                                        },
                                        {
                                          "attr": {
                                            "prop": "labourName",
                                            "label": "用料单位",
                                            "width": "200",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "7_item_config_ltk4r1uf"
                                        },
                                        {
                                          "attr": {
                                            "prop": "ghName",
                                            "label": "使用部位",
                                            "width": "110",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "8_item_config_ltk4r1ug"
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemBarCode",
                                            "label": "物资条码",
                                            "width": "200",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "9_item_config_ltk4r1uh"
                                        }
                                      ],
                                      "columnSlots": [],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes,prev,pager,next,total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function onMountedFn(){\n\n\n                                          this.$currentInstance.exposed.model.tableLoading.value = true\n\n                                          this.$currentInstance.exposed.methods.loadData(true);\n\n                                          this.$currentInstance.exposed.model.tableLoading.value = false\n                                        }"
                                      },
                                      "onLoadData": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnLoadData(params, isRefresh){\n                                          const { selectRows, inventoryFilterModel } = this.$dataModels\n                                          selectRows.singleTable.isChoose = true\n                                          this.$requestFns.queryDeliveryReturnMaterials(params).then(res => {\n                                            this.$currentInstance.exposed.model.tableData.value = res.data\n                                            // 设置勾选状态\n                                            setTimeout(() => {\n                                              if (selectRows.items.length) {\n                                                const tableRef = this.$currentInstance.exposed.methods.getNativeRefs()\n                                                this.$currentInstance.exposed.model.tableData.value.rows.forEach((row) => {\n                                                  const idx = selectRows.items.findIndex(otem => otem.itemBarCode == row.itemBarCode)\n                                                  if (idx > -1) {\n                                                    tableRef._.setupState.toggleRowSelection(row)\n                                                  }\n                                                })\n                                              }\n                                              selectRows.singleTable.isChoose = false\n                                            }, 100)\n                                          }).catch(err => {\n                                            this.$vueGlobal.$message({\n                                              type: 'error',\n                                              message: '获取物资信息失败'\n                                            })\n                                            selectRows.singleTable.isChoose = false\n                                            return\n                                          })\n\n\n                                        }"
                                      },
                                      "onSelect": {
                                        "type": "system",
                                        "isOn": false,
                                        "fn": "async function fnOnSelect(rows, currentRow) {\n                                          const { selectRows } = this.$dataModels\n                                          const idx = selectRows.items.findIndex(row => row.itemBarCode == currentRow.itemBarCode)\n                                          if (idx < 0) {\n                                            selectRows.items.push(currentRow)\n                                          } else {\n                                            selectRows.items.splice(idx, 1)\n                                          }\n\n                                          this.$exposeds.get('tableOnly_ls4bqe8v').model.tableData.value = selectRows.items\n                                        }"
                                      },
                                      "onSelectionChange": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnSelectionChange(rows){\n                                          const { selectRows } = this.$dataModels\n                                          if (selectRows.singleTable.isChoose) {\n                                            // 判断是手动刷新\n                                            return\n                                          }\n                                          if (rows.length) {\n                                            rows.forEach(row => {\n                                              const idx = selectRows.items.findIndex(t => t.itemBarCode == row.itemBarCode &&t.rawId==row.rawId)\n                                              if (idx==-1) {\n                                                selectRows.items.push(row)\n                                              }\n                                            })\n                                          } else {\n                                            const newRows = this.$currentInstance.exposed.model.tableData.value.rows\n                                            newRows.forEach(row => {\n                                              const idx = selectRows.items.findIndex(t => t.itemBarCode == row.itemBarCode)\n                                              if (idx > -1) {\n                                                selectRows.items.splice(idx,1)\n                                              }\n                                            })\n                                          }\n                                          this.$exposeds.get('tableOnly_ls4bqe8v').model.tableData.value = selectRows.items\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(row, column){\n\n                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                          ref._.setupState.toggleRowSelection(row)\n\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_tableAsync_ls4bqe8r",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls4bqe8q",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls4bqe83",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls4bqe7x",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-3",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "260px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls4bqe7y",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "panel",
                          "containerOptions": {
                            "__nodeId": "panel_ls4bqe8s",
                            "__nodeName": "panel",
                            "__nodeType": "baseNode",
                            "__nodeOptions": {
                              "showHeader": true,
                              "title": "已选列表",
                              "border": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls4bqe8t",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableOnly",
                                  "elementOptions": {
                                    "__nodeId": "tableOnly_ls4bqe8v",
                                    "__nodeName": "tableOnly",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "quantity",
                                            "label": "库存量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "itemBarCode",
                                            "label": "物资条码",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          }
                                        },
                                        {
                                          "attr": {
                                            "prop": "id",
                                            "label": "操作",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "id"
                                          }
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "id",
                                          "columRender": {
                                            "__nodeId": "columRender_ls4bqe9o",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "button",
                                              "elementOptions": {
                                                "__nodeId": "button_ls4bqe9n",
                                                "__nodeName": "button",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "size": "small",
                                                  "plain": true,
                                                  "content": "删除",
                                                  "type": "danger",
                                                  "text": false,
                                                  "link": true,
                                                  "round": false,
                                                  "circle": false,
                                                  "loading": false,
                                                  "disabled": false,
                                                  "display": true,
                                                  "permissionSetting": "",
                                                  "tooltip": false,
                                                  "tooltipEffect": "dark",
                                                  "tooltipContent": "显示的内容",
                                                  "tooltipPlacement": "bottom",
                                                  "icon": "Delete"
                                                },
                                                "__nodeEvent": {
                                                  "onClick": {
                                                    "type": "system",
                                                    "isOn": true,
                                                    "fn": "async function fnName(row){\n                                                      const { selectRows } = this.$dataModels\n                                                      const idx = selectRows.items.findIndex(t => t.itemBarCode == row.itemBarCode)\n                                                      selectRows.items.splice(idx,1)\n\n                                                      const tableRef = this.$exposeds.get('tableAsync_ls4bqe8r').methods.getNativeRefs();\n                                                      this.$exposeds.get('tableAsync_ls4bqe8r').model.tableData.value.rows.forEach(t => {\n                                                        if (t.itemBarCode == row.itemBarCode) {\n                                                          tableRef._.setupState.toggleRowSelection(t)\n                                                        }\n                                                      })\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_button_ls4bqe9n",
                                                "__description": "按钮"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_ls4bqe9o",
                                            "__description": ""
                                          },
                                          "propName": "操作"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "defaultExpandAll": false,
                                      "rowKey": "id",
                                      "lazy": false,
                                      "treeProps": {
                                        "hasChildren": "hasChildren",
                                        "children": "children"
                                      },
                                      "expandRowKeys": [],
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function onMountedFn() {\n                                          const { selectRows } = this.$dataModels\n                                          // this.$currentInstance.exposed.model.tableData.value = selectRows.items\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_tableOnly_ls4bqe8v",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls4bqe8t",
                                "__description": ""
                              },
                              "toolSlot": {
                                "__nodeId": "flexLine_ls4bqe8u",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls4bqe8u",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_panel_ls4bqe8s",
                            "__description": "已选列表"
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls4bqe7y",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-4",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls4bqe7z",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls4bqe87",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_ls4bqe89",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_ls4bqe8a",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls4bqe8b",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "取消",
                                            "type": "primary",
                                            "text": false,
                                            "link": true,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                const { selectRows, inventoryFilterModel } = this.$dataModels\n                                                selectRows.items = []\n                                                inventoryFilterModel.returnDelivery.materialName = ''\n                                                inventoryFilterModel.returnDelivery.materialModel = ''\n                                                inventoryFilterModel.returnDelivery.itemBarCode= ''\n                                                inventoryFilterModel.returnDelivery.ghId =0\n                                                inventoryFilterModel.returnDelivery.ghName = ''\n                                                this.$exposeds.get('dialog_ls4bqfn2').model.dialogShow.value = false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls4bqe8b",
                                          "__description": "取消"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqe8a",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls4bqe8c",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls4bqe8d",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "保存",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "iconFont": "icon cs-common baocun"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName() {\n                                                const { selectRows, deliveryFormModel, inventoryFilterModel } = this.$dataModels\n                                                const { id, orgId, serviceType, orderType } = deliveryFormModel.qDelivery\n                                                const addRows = selectRows.items.reduce((arr,t) => {\n                                                  const idx = deliveryFormModel.qDeliveryMoreOrders.findIndex(q => q.itemBarCode==t.itemBarCode &&q.rawId==t.rawId)\n                                                  if (idx==-1) {\n                                                    t.typeMark = '条码维度'\n                                                    t.orderId = id\n                                                    t.orgId = orgId\n                                                    t.serviceType = serviceType\n                                                    t.orderType = orderType\n                                                    arr.push(t)\n                                                  }\n                                                  return arr\n                                                },[])\n\n                                                this.$exposeds.get('tableEdit_ls781bdw').methods.growData('returnSource', addRows);\n                                                this.$exposeds.get('dialog_ls4bqfn2').model.dialogShow.value = false\n                                                selectRows.items = []\n                                                inventoryFilterModel.returnDelivery.materialName = ''\n                                                inventoryFilterModel.returnDelivery.materialModel = ''\n                                                inventoryFilterModel.returnDelivery.itemBarCode = ''\n                                                inventoryFilterModel.returnDelivery.ghId = 0\n                                                inventoryFilterModel.returnDelivery.ghName = ''\n                                                this.$sharedFns.resetEditPageBtnState('delivery');\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls4bqe8d",
                                          "__description": "保存"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls4bqe8c",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls4bqe89",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls4bqe87",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls4bqe7z",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_ls4bqfn3",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_ls4bqfn2",
            "__description": "选材",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName() {\n                  const { selectRows, inventoryFilterModel } = this.$dataModels\n                  selectRows.items = []\n                  inventoryFilterModel.returnDelivery.materialName = ''\n                  inventoryFilterModel.returnDelivery.materialModel = ''\n                  inventoryFilterModel.returnDelivery.itemBarCode= ''\n                  inventoryFilterModel.returnDelivery.ghId =0\n                  inventoryFilterModel.returnDelivery.ghName = ''\n\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_lta29tk9",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "",
              "title": "凭证预览",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lta29tka",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "400px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lta29tkb",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lta29rfp",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lta29rfq",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "image",
                                  "elementOptions": {
                                    "__nodeId": "image_lta29rfr",
                                    "__nodeName": "image",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "modelName": "",
                                      "content": "",
                                      "initialIndex": 0,
                                      "hideOnClickModal": false,
                                      "loading": "eager",
                                      "lazy": false,
                                      "alt": "",
                                      "previewSrcList": [],
                                      "fit": "",
                                      "display": true,
                                      "permissionSetting": ""
                                    },
                                    "__nodeEvent": {
                                      "onValueRender": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "function onValueRenderFn(row){\n                                          this.$currentInstance.exposed.model.elementOption.value = {\n                                            content: this.$dataModels.currentPreviewImg.singleTable.src\n                                          };\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_image_lta29rfr",
                                    "__description": "",
                                    "__nodeStyle": {
                                      "width": "100%",
                                      "height": "100%",
                                      "display": "block"
                                    }
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lta29rfq",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lta29rfp",
                            "__description": "",
                            "__nodeStyle": {
                              "display": "block"
                            }
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lta29tkb",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lta29tka",
                "__description": ""
              },
              "modal": true,
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lta29tk9",
            "__description": "凭证预览"
          },
          {
            "__nodeId": "dialog_lu7s93dw",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "35%",
              "title": "高拍仪拍照",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lu7s93dx",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 2,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "base",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lu7s93dy",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lu7s909e",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lu7s909f",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "webCamera",
                                  "elementOptions": {
                                    "__nodeId": "webCamera_lu7s909g",
                                    "__nodeName": "webCamera",
                                    "__nodeType": "baseNode",
                                    "__nodeStyle": {
                                      "width": "100%",
                                      "height": "100%"
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "width": 4000,
                                      "height": 2000
                                    },
                                    "__nodeEvent": {},
                                    "__nodeKey": "nodeKey_webCamera_lu7s909g",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lu7s909f",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lu7s909e",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lu7s93dy",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "base",
                      "clearPadding": [
                        "top"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lu7s909h",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lu7s909i",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lu7s909k",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [
                                    "right"
                                  ],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_lu7s909l",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lu7s909m",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "拍照",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "icon": "CameraFilled"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n                                                const { orgId } = this.$globalVars.$context\n\n                                                this.$exposeds.get('dialog_lu7s93dw').model.dialogShow.value = false\n                                                const data = this.$exposeds.get('webCamera_lu7s909g').methods.getPhotoBase64();\n                                                // if(data) {\n                                                //      const photoObj = {\n                                                //        photoUrl: data,\n                                                //        index: this.$exposeds.get('listOnly_lu7s9096').model.listData.value.length + 1\n                                                //      }\n                                                //     this.$exposeds.get('listOnly_lu7s9096').model.listData.value.push(photoObj)\n                                                //     this.$exposeds.get('image_lu7s909d').model.elementOption.value = {\n                                                //       content: data\n                                                //     }\n                                                // }\n                                                const result = await this.$requestFns.uploadGpy({ file: data, fileName: Math.random().toString(36).slice(-8) + '.png' });\n                                                if (result.data.success) {\n                                                  const photoObj = {\n                                                    photoUrl: data,\n                                                    index: this.$exposeds.get('listOnly_lu7s9096').model.listData.value.length + 1\n                                                  }\n                                                  if (data) {\n                                                    this.$dataModels.deliveryFormModel.qDeliveryGpys.push({\n                                                      gpyPhotoUrl: result.data.fileKey,\n                                                      orgId: this.$dataModels.deliveryFormModel.qDelivery.orgId\n                                                    })\n                                                    this.$exposeds.get('listOnly_lu7s9096').model.listData.value.push(photoObj)\n                                                    this.$exposeds.get('image_lu7s909d').model.elementOption.value = {\n                                                      content: data\n                                                    }\n                                                  } else {\n                                                    this.$vueGlobal.$message({\n                                                      type: 'error',\n                                                      message: '上传失败！'\n                                                    })\n                                                  }\n                                                } else {\n                                                  this.$vueGlobal.$message({\n                                                    type: 'error',\n                                                    message: '上传失败！'\n                                                  })\n                                                }\n\n\n                                                // const result = await this.$globalVars.$http.post('/mq3-mquantity/fs/fs-upload',params)\n\n                                                // console.log(this.$dataModels.receiveFormModel, 'result');\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lu7s909m",
                                          "__description": ""
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lu7s909l",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lu7s909k",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lu7s909i",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lu7s909h",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lu7s93dx",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lu7s93dw",
            "__description": ""
          }
        ],
        "drawerOptions": []
      },
      "__nodeKey": "nodeKey_views_lryr5ym4",
      "__description": "出库编辑"
    },
    "rdsEdit": {
      "__nodeId": "views_ls9sa6fr",
      "__nodeName": "views",
      "__nodeType": "baseNode",
      "__nodeEvent": {},
      "__nodeOptions": {
        "planeOptions": {
          "__nodeId": "plane_ls9sa6fs",
          "__nodeName": "plane",
          "__nodeType": "baseNode",
          "__nodeEvent": {},
          "__nodeOptions": {
            "isShowNav": true,
            "navigationOptions": {
              "__nodeId": "navigationBar_ls9sa6ft",
              "__nodeName": "navigationBar",
              "__nodeType": "baseNode",
              "__nodeEvent": {
                "onValueRender": {
                  "type": "system",
                  "isOn": true,
                  "fn": "function onValueRenderFn(row) {\n\n                    const { query } = this.$globalVars.$router.currentRoute\n\n\n                    this.$currentInstance.exposed.model.elementOption.value = {\n                      routers: [\n                        {\n                          \"title\": query.id ? \"编辑\" : \"添加\"\n                        }\n                      ]\n                    };\n\n                  }"
                }
              },
              "__nodeOptions": {
                "defaultSlot": [
                  {
                    "__nodeId": "elementRender_ls9sa6fu",
                    "__nodeName": "elementRender",
                    "__nodeType": "renderNode",
                    "__nodeOptions": {
                      "renderType": "button",
                      "elementOptions": {
                        "__nodeId": "button_ls9sa6fv",
                        "__nodeName": "button",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "size": "default",
                          "plain": false,
                          "content": "关闭",
                          "type": "primary",
                          "text": true,
                          "link": false,
                          "round": false,
                          "circle": false,
                          "loading": false,
                          "disabled": false
                        },
                        "__nodeEvent": {
                          "onMounted": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          },
                          "onClick": {
                            "type": "system",
                            "isOn": true,
                            "fn": "async function(){\n                              const { rdsFormModel} = this.$dataModels\n                              rdsFormModel.qReceiveMoreMaterials = []\n                              rdsFormModel.qDeliveryMoreMaterials = []\n                              rdsFormModel.qReceivePhotos = []\n                              rdsFormModel.qDeliveryPhotos = []\n                              for(const key in rdsFormModel.qReceive) {\n                                if (['serviceType', 'orderType','priceType','orderOrigin','isRds'].includes(key)) {\n\n                                } else {\n                                  rdsFormModel.qReceive[key] = null\n                                }\n                              }\n                              for (const key in rdsFormModel.qDelivery) {\n                                if (['serviceType', 'orderType', 'orderOrigin', 'isRds'].includes(key)) {\n\n                                } else {\n                                  rdsFormModel.qDelivery[key] = null\n                                }\n                              }\n                              this.$globalVars.$router.push({path:\"/\"})\n\n                            }"
                          },
                          "onChange": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          }
                        },
                        "__nodeKey": "nodeKey_button_ls9sa6fv",
                        "__description": "关闭"
                      }
                    },
                    "__nodeKey": "nodeKey_elementRender_ls9sa6fu",
                    "__description": ""
                  }
                ],
                "display": true,
                "isSysRouter": true,
                "permissionSetting": "",
                "routers": [
                  {
                    "title": "编辑"
                  }
                ]
              },
              "__nodeKey": "nodeKey_navigationBar_ls9sa6ft",
              "__description": ""
            },
            "flexBoxOptions": {
              "__nodeId": "flexBox_ls9sa6g0",
              "__nodeName": "flexBox",
              "__nodeType": "baseNode",
              "__nodeOptions": {
                "display": true,
                "permissionSetting": "",
                "isRow": false,
                "itemNum": 4,
                "width": "100%",
                "height": "100%",
                "itemConfig": [
                  {
                    "tag": "item-1",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "contentType": "container",
                    "paddingSize": "large",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_ls9sa6g1",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_ls9sa6g4",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "toolSlot": {
                              "__nodeId": "flexLine_ls9sa6g6",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [
                                  {
                                    "__nodeId": "elementRender_ls9sa6gt",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "rawHtml",
                                      "elementOptions": {
                                        "__nodeId": "rawHtml_ls9sa6gu",
                                        "__nodeName": "rawHtml",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "content": "<span style=\"color:var(--el-color-danger);\">No.</span>",
                                          "display": true,
                                          "permissionSetting": "",
                                          "modelName": ""
                                        },
                                        "__nodeEvent": {},
                                        "__nodeKey": "nodeKey_rawHtml_ls9sa6gu",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_ls9sa6gt",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_ls9sa6gv",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "rawHtml",
                                      "elementOptions": {
                                        "__nodeId": "rawHtml_ls9sa6gw",
                                        "__nodeName": "rawHtml",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "content": "<span style=\"\">rawTxt渲染文本</span>",
                                          "display": true,
                                          "permissionSetting": "",
                                          "modelName": "rdsFormModel.qReceiveToDelivery.orderCode"
                                        },
                                        "__nodeEvent": {},
                                        "__nodeKey": "nodeKey_rawHtml_ls9sa6gw",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_ls9sa6gv",
                                    "__description": ""
                                  }
                                ],
                                "rightSlot": [
                                  {
                                    "__nodeId": "elementRender_ls9sa6kq",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_ls9sa6kr",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "常用库",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n\n                                              this.$exposeds.get('dialog_ls9yqgp4').model.dialogShow.value = true\n\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_ls9sa6kr",
                                        "__description": "常用材料库"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_ls9sa6kq",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_ls9sa6ks",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_ls9sa6kt",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "采购计划",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              this.$exposeds.get('dialog_ls9yqgp7').model.dialogShow.value = true\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_ls9sa6kt",
                                        "__description": "采购计划",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_ls9sa6ks",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_ltcsjotr",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_ltcsjots",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "采购合同",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n\n                                              this.$exposeds.get('dialog_lte5d1fw').model.dialogShow.value = true;\n\n\n\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_ltcsjots",
                                        "__description": "采购合同",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_ltcsjotr",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_ltcsjott",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_ltcsjotu",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "总控计划",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "iconFont": "icon cs-common multi-add"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n\n                                              this.$exposeds.get('dialog_ltf44vtt').model.dialogShow.value = true;\n\n\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_ltcsjotu",
                                        "__description": "总控计划",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_ltcsjott",
                                    "__description": ""
                                  },
                                  {
                                    "__nodeId": "elementRender_ls9sa6ku",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_ls9sa6kv",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": false,
                                          "content": "保存",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "iconFont": "icon cs-common baocun"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              this.$currentInstance.exposed.model.elementOption.value = { \tloading: true };\n                                              const { userName, lastProject } = this.$globalVars.$context\n                                              const { formatDate } = this.$utils\n                                              const { rdsFormModel, orderCodeCondtion } = this.$dataModels\n                                              this.$sharedFns.setNodeOptions([\n                                                ['button_ls9sa6kr', 'disabled', true],\n                                                ['button_ls9sa6kt', 'disabled', true]\n                                              ]);\n                                              // 校验表单\n                                              const validRes = await this.$exposeds.get('form_ls9sa6i8').methods.validateForm();\n                                              if (!validRes) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { \tloading: false };\n                                                this.$sharedFns.setNodeOptions([\n                                                  ['button_ls9sa6kr', 'disabled', false],\n                                                  ['button_ls9sa6kt', 'disabled', false]\n                                                ]);\n                                                return\n                                              }\n                                              //校验照片\n                                              const checkPhotos =  await this.$sharedFns.validPhotosData('rds');\n                                              if (!checkPhotos) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                this.$sharedFns.setNodeOptions([\n                                                  ['button_ls9sa6kr', 'disabled', false],\n                                                  ['button_ls9sa6kt', 'disabled', false]\n                                                ]);\n                                                return\n                                              }\n                                              // 校验材料\n\n                                              const checkMaterial =  await this.$sharedFns.checkMaterials('rds');\n                                              if (!checkMaterial) {\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                this.$sharedFns.setNodeOptions([\n                                                  ['button_ls9sa6kr', 'disabled', false],\n                                                  ['button_ls9sa6kt', 'disabled', false]\n                                                ]);\n                                                return\n                                              }\n                                              // const idx = rdsFormModel.qReceiveMoreMaterials.findIndex(t => t.netQuantity<=0)\n                                              // if (idx>-1) {\n                                              //     this.$vueGlobal.$message({\n                                              //       type: 'warning',\n                                              //       message: '收料量必须大于0'\n                                              //     })\n                                              //     this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                              //   this.$sharedFns.setNodeOptions([\n                                              //     ['button_ls9sa6kr', 'disabled', false],\n                                              //     ['button_ls9sa6kt', 'disabled', false]\n                                              //   ]);\n                                              //    return\n                                              // }\n\n                                              rdsFormModel.qReceiveMoreMaterials.forEach((row,i) => {\n                                                if (rdsFormModel.qReceive.id) {\n                                                  row.orderId = rdsFormModel.qReceive.id\n                                                }\n                                                row.serviceType = rdsFormModel.qReceive.serviceType\n                                                row.orderType = rdsFormModel.qReceive.orderType\n                                                row.sortCode = i\n                                              })\n                                              debugger\n                                              rdsFormModel.qReceivePhotos = rdsFormModel.qReceivePhotos.reduce((arr, p) => {\n                                                const isAdd = p.photoList.filter(o => !o.isRemoved)\n                                                arr.push(...isAdd)\n                                                return arr\n                                              }, [])\n                                              let saveRes = false\n                                              let auditRes = false\n                                              rdsFormModel.qDelivery.isRemoved = false\n                                              rdsFormModel.qDelivery.serviceType = 10\n                                              if (!rdsFormModel.qReceiveToDelivery.id) {\n                                                rdsFormModel.qReceive.isRds = rdsFormModel.qDelivery.isRds = true\n                                                rdsFormModel.qReceiveToDelivery.maker = rdsFormModel.qReceive.maker = rdsFormModel.qDelivery.maker = userName\n                                                rdsFormModel.qReceiveToDelivery.makerDate = rdsFormModel.qReceive.makerDate = rdsFormModel.qDelivery.makerDate = formatDate('YYYY-MM-DD', new Date())\n                                                saveRes =  await this.$requestFns.saveRdsOrder({})\n                                              } else {\n                                                rdsFormModel.qReceive.rdsId = rdsFormModel.qDelivery.rdsId = rdsFormModel.qReceiveToDelivery.id\n                                                saveRes = await this.$requestFns.updateRdsOrder({})\n                                              }\n                                              if (saveRes.data.success) {\n\n                                                auditRes = await this.$requestFns.auditRds({\n                                                  id: saveRes.data.qReceiveToDelivery.id ,\n                                                  orgId: saveRes.data.qReceiveToDelivery.orgId,\n                                                  userName,\n                                                  lastProjectId:lastProject.id\n                                                })\n                                              } else {\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: '保存失败,'+saveRes.data.message\n                                                })\n                                                this.$sharedFns.setNodeOptions([\n                                                  ['button_ls9sa6kr', 'disabled', false],\n                                                  ['button_ls9sa6kt', 'disabled', false]\n                                                ]);\n                                                this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                                return\n                                              }\n\n                                              if (auditRes.data.success || auditRes.data==0) {\n                                                this.$vueGlobal.$message({\n                                                  type: 'success',\n                                                  message: '保存并提交成功'\n                                                })\n                                              }\n                                              rdsFormModel.qReceiveMoreMaterials = []\n                                              rdsFormModel.qDeliveryMoreMaterials = []\n                                              rdsFormModel.qReceivePhotos = []\n                                              rdsFormModel.qDeliveryPhotos = []\n                                              for (const key in rdsFormModel.qReceive) {\n                                                if (['serviceType', 'orderType', 'priceType', 'orderOrigin', 'isRds'].includes(key)) {\n\n                                                } else {\n                                                  rdsFormModel.qReceive[key] = null\n                                                }\n                                              }\n                                              for (const key in rdsFormModel.qDelivery) {\n                                                if (['serviceType', 'orderType', 'orderOrigin', 'isRds'].includes(key)) {\n\n                                                } else {\n                                                  rdsFormModel.qDelivery[key] = null\n                                                }\n                                              }\n\n                                              this.$currentInstance.exposed.model.elementOption.value = { loading: false };\n                                              this.$sharedFns.setNodeOptions([\n                                                ['button_ls9sa6kr', 'disabled', false],\n                                                ['button_ls9sa6kt', 'disabled', false]\n                                              ]);\n                                              this.$globalVars.$router.push({\n                                                name: 'master',\n                                                query: {}\n                                              })\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_ls9sa6kv",
                                        "__description": "保存",
                                        "__nodeStyle": {
                                          "marginLeft": "6px"
                                        }
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_ls9sa6ku",
                                    "__description": ""
                                  }
                                ],
                                "display": true,
                                "permissionSetting": "",
                                "rightSpaceSize": 0
                              },
                              "__nodeKey": "nodeKey_flexLine_ls9sa6g6",
                              "__description": ""
                            },
                            "defaultSlot": {
                              "__nodeId": "elementRender_ls9sa6i7",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "form",
                                "elementOptions": {
                                  "__nodeId": "form_ls9sa6i8",
                                  "__nodeName": "form",
                                  "__nodeType": "baseNode",
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n                                        const validatePlateNumber =async (rule, value, callback) => {\n                                          if (!value){\n                                            callback()\n                                            return\n                                          }\n                                          const isValid = await this.$sharedFns.isVehicleNumber(value);\n                                          if (this.$dataModels.rdsFormModel.qReceive.plateNumber) {\n                                            if (isValid) {\n                                              callback()\n                                            } else {\n                                              callback(new Error('请输入正确的车牌号码'))\n                                            }\n                                          } else {\n                                            callback()\n                                          }\n                                        }\n\n                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                          rules: {\n                                            orgId: [\n                                              { required: true, message: '请选择组织机构', trigger: 'blur' }\n                                            ],\n                                            exitTime: [\n                                              { required: true, message: '请选择入/出库时间', trigger: 'blur' }\n                                            ],\n                                            labourId: [\n                                              { required: true, message: '请选择用料单位', trigger: 'change' }\n                                            ],\n                                            plateNumber: [\n                                              { validator: validatePlateNumber, trigger: 'blur' }\n                                            ],\n                                            supplierId: [\n                                              { required: true, message: '请选择供应单位', trigger: 'change' }\n                                            ],\n                                            ghId: [\n                                              {\n                                                required: this.$dataModels.globalConfig.singleTable.ghInfo   ? true : false,\n                                                message: this.$dataModels.globalConfig.singleTable.ghInfo  ? '请选择使用部位' : '', trigger: 'change'\n                                              }\n                                            ],\n                                          }\n                                        };\n\n                                      }"
                                    }
                                  },
                                  "__nodeOptions": {
                                    "modelName": "rdsFormModel.qReceive",
                                    "rules": {},
                                    "labelWidth": "80px",
                                    "size": "default",
                                    "disabled": false,
                                    "statusIcon": false,
                                    "inlineMessage": false,
                                    "labelPosition": "right",
                                    "showMessage": true,
                                    "display": true,
                                    "permissionSetting": "",
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_ls9sa6i9",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_ls9sa6if",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6ig",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "radioGroup",
                                                    "elementOptions": {
                                                      "__nodeId": "radioGroup_ls9sa6l5",
                                                      "__nodeName": "radioGroup",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "disabled": false,
                                                        "size": "default",
                                                        "type": "button",
                                                        "modelName": "rdsFormModel.qReceive.serviceType",
                                                        "itemData": [
                                                          {
                                                            "label": "收料",
                                                            "value": "10"
                                                          },
                                                          {
                                                            "label": "调入",
                                                            "value": "20"
                                                          }
                                                        ],
                                                        "defaultProps": {
                                                          "label": "label",
                                                          "value": "value"
                                                        },
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onChange": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnName(value){\n                                                            this.$dataModels.rdsFormModel.qReceive.serviceType = this.$dataModels.rdsFormModel.qDelivery.serviceType = Math.abs(value)\n                                                            this.$dataModels.rdsFormModel.qReceive.settlementName = ''\n                                                            this.$dataModels.rdsFormModel.qReceive.settlementId = null\n                                                            this.$dataModels.rdsFormModel.qReceive.freight = 0 //运费\n                                                            this.$sharedFns.setNodeOptions([\n                                                              ['searchSelect_ltbaec77', 'defaultText', ''],\n                                                              ['searchSelect_ltbaec77', 'disabled', true],\n                                                            ]);\n                                                            this.$sharedFns.resetEditPageBtnState('rds')\n                                                          }"
                                                        },
                                                        "onValueRender": {
                                                          "isOn": true,
                                                          "type": "system",
                                                          "fn": "function onValueRenderFn(row){\n\n\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_radioGroup_ls9sa6l5",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6ig",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6if",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6in",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6io",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6ip",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "组织机构",
                                                        "prop": "orgId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9sa6l6",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "organizationTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "organizationTreeSelect_ls9sa6l7",
                                                              "__nodeName": "organizationTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    if (!query.id) {\n                                                                      const { orgId, orgShortName } = this.$globalVars.$context\n                                                                      rdsFormModel.qReceive.orgId = orgId\n                                                                      rdsFormModel.qReceive.orgName = orgShortName\n                                                                      rdsFormModel.qDelivery.orgId = orgId\n                                                                      rdsFormModel.qDelivery.orgName = orgShortName\n                                                                      rdsFormModel.qReceiveToDelivery.orgId = orgId\n                                                                      rdsFormModel.qReceiveToDelivery.orgName = orgShortName\n                                                                      const rootNode = { shortName: orgShortName, id: orgId }\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        rootId: orgId,\n                                                                        rootName: orgShortName,\n                                                                        defaultText: orgShortName\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: true,\n                                                                        defaultText: rdsFormModel.qReceive.orgName\n                                                                      }\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnOrgTreeChange(item, props) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qReceive.orgId = item.id\n                                                                    rdsFormModel.qReceive.orgName = item.shortName || item.name\n\n                                                                    rdsFormModel.qDelivery.orgId = item.id\n                                                                    rdsFormModel.qDelivery.orgName = item.shortName || item.name\n\n                                                                    rdsFormModel.qReceiveToDelivery.orgId = item.id\n                                                                    rdsFormModel.qReceiveToDelivery.orgName = item.shortName || item.name\n\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('rds');\n                                                                    rdsFormModel.qReceiveToDelivery.orderCode = orderCode\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "type": "select",
                                                                "modelName": "rdsFormModel.qReceive.orgId",
                                                                "defaultText": "",
                                                                "disabled": false,
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "searchEnable": false,
                                                                "clearable": false,
                                                                "reloadEnable": true,
                                                                "isUseCurrentOrg": false,
                                                                "rootId": "",
                                                                "rootName": "",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeKey": "nodeKey_organizationTreeSelect_ls9sa6l7",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9sa6l6",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6ip",
                                                      "__description": "组织机构"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6io",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6in",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6iv",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6iw",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6ix",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "入/出库时间",
                                                        "prop": "exitTime",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf47",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "datePicker",
                                                            "elementOptions": {
                                                              "__nodeId": "datePicker_ls9yqf48",
                                                              "__nodeName": "datePicker",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "size": "default",
                                                                "editable": true,
                                                                "clearable": false,
                                                                "type": "datetime",
                                                                "prefixIcon": "Calendar",
                                                                "clearIcon": "CircleClose",
                                                                "placeholder": "请选择日期",
                                                                "modelName": "rdsFormModel.qReceive.exitTime",
                                                                "shortcuts": [],
                                                                "format": "YYYY-MM-DD HH:mm:ss",
                                                                "valueFormat": "YYYY-MM-DD HH:mm:ss",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const {  rdsFormModel} = this.$dataModels\n\n                                                                    if (!query.id) {\n                                                                      const { getAccountMonth, formatDate } = this.$utils\n                                                                      rdsFormModel.qReceiveToDelivery.orderDate = rdsFormModel.qReceive.orderDate = rdsFormModel.qDelivery.orderDate = getAccountMonth(this.$dataModels.globalConfig.singleTable.accountDay, new Date())\n                                                                      rdsFormModel.qReceiveToDelivery.recordedDate = rdsFormModel.qReceive.recordedDate = rdsFormModel.qDelivery.recordedDate = formatDate('YYYY-MM-DD', new Date())\n                                                                      rdsFormModel.qReceiveToDelivery.orderTime = rdsFormModel.qReceive.exitTime =rdsFormModel.qDelivery.exitTime = formatDate('YYYY-MM-DD HH:mm:ss', new Date())\n                                                                      const orderCode = await this.$sharedFns.createOrderCode('rds');\n                                                                      rdsFormModel.qReceiveToDelivery.orderCode = orderCode\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = { disabled: true };\n                                                                      await this.$sharedFns.createOrderCode('rds');\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(val) {\n                                                                    const { formatDate, getAccountMonth } = this.$utils\n                                                                    const { rdsFormModel, globalConfig } = this.$dataModels\n                                                                    rdsFormModel.qReceiveToDelivery.recordedDate = rdsFormModel.qReceive.recordedDate =rdsFormModel.qDelivery.recordedDate = formatDate('YYYY-MM-DD', val)\n                                                                    rdsFormModel.qReceiveToDelivery.orderTime = rdsFormModel.qReceive.exitTime =rdsFormModel.qDelivery.exitTime =  formatDate('YYYY-MM-DD HH:mm:ss', val)\n                                                                    rdsFormModel.qReceiveToDelivery.orderDate = rdsFormModel.qReceive.orderDate = rdsFormModel.qDelivery.orderDate = getAccountMonth(globalConfig.accountDay, val)\n                                                                    const orderCode = await this.$sharedFns.createOrderCode('rds');\n                                                                    rdsFormModel.qReceiveToDelivery.orderCode = orderCode\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_datePicker_ls9yqf48",
                                                              "__description": "请选择日期",
                                                              "__nodeStyle": {
                                                                "width": "100%"
                                                              }
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf47",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6ix",
                                                      "__description": "入/出库时间"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6iw",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6iv",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6j3",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6j4",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6j5",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "原单据编号",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf49",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_ls9yqf4a",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "rdsFormModel.qReceive.originalOrderCode",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_ls9yqf4a",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf49",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6j5",
                                                      "__description": "原单据编号"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6j4",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6j3",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6jb",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6jc",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6jd",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "供应方式",
                                                        "prop": "purchaseMethod",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9sa6lg",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "dictionarySelect",
                                                            "elementOptions": {
                                                              "__nodeId": "dictionarySelect_ls9sa6lh",
                                                              "__nodeName": "dictionarySelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    if (!query.id) {\n                                                                      const { orgId } = this.$globalVars.$context\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: '',\n                                                                        // orgId: orgId\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: this.$dataModels.rdsFormModel.qReceive.purchaseMethod\n                                                                      }\n                                                                    }\n\n\n                                                                  }"
                                                                },
                                                                "onSelectionChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item,props){\n                                                                    this.$dataModels.rdsFormModel.qReceive.purchaseMethodFullName = item.fullName\n                                                                    this.$dataModels.rdsFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                                      t.purchaseMethodFullName = item.fullName\n                                                                      t.purchaseMethod = item.name\n                                                                    })\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 20,
                                                                "defaultProps": {
                                                                  "label": "name",
                                                                  "subLabel": "fullName",
                                                                  "value": "name"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "size": "default",
                                                                "code": "PurchaseMethod",
                                                                "orgId": 0,
                                                                "isLeaf": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": "rdsFormModel.qReceive.purchaseMethod"
                                                              },
                                                              "__nodeKey": "nodeKey_dictionarySelect_ls9sa6lh",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9sa6lg",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6jd",
                                                      "__description": "供应方式"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6jc",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6jb",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6jj",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6jk",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6jl",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "供应单位",
                                                        "prop": "supplierId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf4b",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "basisCommonSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "basisCommonSelect_ls9yqf4c",
                                                              "__nodeName": "basisCommonSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    const { lastProject } = this.$globalVars.$context\n\n                                                                    if (!query.id) {\n                                                                      rdsFormModel.qReceive.supplierName = ''\n                                                                      rdsFormModel.qReceive.supplierId = null\n                                                                      rdsFormModel.qReceive.oriSupplierId = ''\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        defaultText: '',\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId }\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId },\n                                                                        defaultText: rdsFormModel.qReceive.supplierName\n                                                                      };\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnClear(){\n                                                                    const { rdsFormModel} = this.$dataModels\n                                                                    rdsFormModel.qReceive.supplierId = rdsFormModel.qReceive.settlementId = null\n                                                                    rdsFormModel.qReceive.supplierName = rdsFormModel.qReceive.oriSupplierId =  rdsFormModel.qReceive.settlementName = ''\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: null\n                                                                    };\n                                                                    // 重置结算单位\n                                                                    rdsFormModel.qReceive.settlementName = ''\n                                                                    rdsFormModel.qReceive.settlementId = null\n                                                                    this.$sharedFns.setNodeOptions([\n                                                                      ['searchSelect_ltbaec77', 'defaultText', ''],\n                                                                      ['searchSelect_ltbaec77', 'disabled', true],\n                                                                    ]);\n                                                                  }"
                                                                },
                                                                "onSelectionChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnSelectionChange(item) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.supplierName\n                                                                    }\n                                                                    rdsFormModel.qReceive.supplierName = item.supplierName\n                                                                    rdsFormModel.qReceive.supplierId = item.id\n                                                                    rdsFormModel.qReceive.oriSupplierId = item.oriSupplierId\n                                                                    rdsFormModel.qReceive.settlementName =''\n                                                                    rdsFormModel.qReceive.settlementId = null\n                                                                    this.$sharedFns.setNodeOptions([\n                                                                      ['searchSelect_ltbaec77', 'defaultText', ''],\n                                                                      ['searchSelect_ltbaec77', 'disabled', true],\n                                                                    ]);\n\n                                                                    if (item.id) {\n                                                                      //结算单位\n                                                                      this.$exposeds.get('searchSelect_ltbaec77').model.elementOption.value = {\n                                                                        disabled: false\n                                                                      };\n                                                                      //\n                                                                      this.$exposeds.get('searchSelect_ltbaec77').methods.reload();\n\n                                                                    }\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 10,
                                                                "defaultProps": {
                                                                  "label": "supplierName",
                                                                  "subLabel": "supplierOrgCode",
                                                                  "value": "id"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "parameter": {
                                                                  "url": "/shared-data/c-suppliers-valid-params",
                                                                  "basisDataType": "supplier",
                                                                  "orgId": 0,
                                                                  "fieldName": "supplierName",
                                                                  "condtionItems": [],
                                                                  "queryDataJson": {}
                                                                },
                                                                "addButton": false,
                                                                "downloadIcon": true,
                                                                "size": "default",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": "rdsFormModel.qReceive.supplierId"
                                                              },
                                                              "__nodeKey": "nodeKey_basisCommonSelect_ls9yqf4c",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf4b",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6jl",
                                                      "__description": "供应单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6jk",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6jj",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6jr",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6js",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6jt",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "供应单位",
                                                        "prop": "supplierId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf4d",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchTreeSelect_ls9yqf4e",
                                                              "__nodeName": "searchTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入检索内容",
                                                                "moreEnable": true,
                                                                "reloadEnable": true,
                                                                "defaultProps": {
                                                                  "label": "shortName",
                                                                  "value": "id"
                                                                },
                                                                "currentSize": 20,
                                                                "modelName": "rdsFormModel.qReceive.supplierId",
                                                                "defaultText": "",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    if (query.id) {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: rdsFormModel.qReceive.supplierName,\n                                                                        disabled: true,\n                                                                        rootNode: { id: -1, shortName:''}\n                                                                      }\n                                                                    } else {\n                                                                      rdsFormModel.qReceive.supplierName = ''\n                                                                      rdsFormModel.qReceive.supplierId = null\n                                                                      rdsFormModel.qReceive.oriSupplierId = ''\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: '',\n                                                                        disabled: false,\n                                                                        rootNode: { id: -1, shortName: '' }\n                                                                      }\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnSelectionChange(item) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.shortName\n                                                                    }\n                                                                    rdsFormModel.qReceive.supplierName = item.shortName\n                                                                    rdsFormModel.qReceive.supplierId = item.id\n                                                                    rdsFormModel.qReceive.oriSupplierId = ''\n\n                                                                  }"
                                                                },
                                                                "onLoadData": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnLoadData(params, resolve) {\n\n                                                                    let parentId = -1\n                                                                    if (params.parentId) {\n                                                                      parentId = params.parentId\n                                                                    }\n\n\n                                                                    let { limit, offset } = params\n                                                                    // const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?serviceName=node-mb2-shared-data-service&path=/shared-data/g-childs-org-filter-out-production&parentId=${parentId}`, {})\n\n\n                                                                    const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?parentId=${parentId}&limit=${limit}&offset=${offset}&serviceName=node-mi-external-service&path=/organizations-parent`, {})\n\n                                                                    resolve(result)\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    }\n                                                                    rdsFormModel.qReceive.supplierName = ''\n                                                                    rdsFormModel.qReceive.supplierId = null\n                                                                    rdsFormModel.qReceive.oriSupplierId = ''\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchTreeSelect_ls9yqf4e",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf4d",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6jt",
                                                      "__description": "供应单位(调)"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6js",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6jr",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6jz",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6k0",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6k1",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "结算单位",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ltbaec76",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchSelect_ltbaec77",
                                                              "__nodeName": "searchSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "modelName": "rdsFormModel.qReceive.settlementId",
                                                                "requestFn": "",
                                                                "defaultText": "",
                                                                "size": "default",
                                                                "disabled": false,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "defaultProps": {
                                                                  "label": "supplierName",
                                                                  "value": "id"
                                                                },
                                                                "limit": 10,
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "searchEnable": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "filterName": "supplierName",
                                                                "clearable": true
                                                              },
                                                              "__nodeEvent": {
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnSelectionChange(item) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.supplierName\n                                                                    }\n                                                                    rdsFormModel.qReceive.settlementName = item.supplierName\n                                                                    rdsFormModel.qReceive.settlementId = item.id\n                                                                  }"
                                                                },
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { rdsFormModel } = this.$dataModels\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    if (!query.id) {\n                                                                      const { lastProject } = this.$globalVars.$context\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: true,\n                                                                        defaultText: '',\n                                                                      }\n                                                                    } else {\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        defaultText: rdsFormModel.qReceive.settlementName\n                                                                      }\n                                                                      this.$currentInstance.exposed.methods.reload();\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnClear() {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qReceive.settlementId = null\n                                                                    rdsFormModel.qReceive.settlementName = ''\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    }\n                                                                  }"
                                                                },
                                                                "onLoadData": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(params, filter, resolve) {\n\n                                                                    const { lastProject } = this.$globalVars.$context\n                                                                    const { supplierId } = this.$dataModels.rdsFormModel.qReceive\n                                                                    const res = await this.$requestFns.queryThirdSuppliers({\n                                                                      supplierName: filter,\n                                                                      orgId: lastProject.id,\n                                                                      supplierId\n                                                                    });\n                                                                    resolve(res.data.rows)\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchSelect_ltbaec77",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ltbaec76",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6k1",
                                                      "__description": "结算单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6k0",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6jz",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6k7",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6k8",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6k9",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "车牌号码",
                                                        "prop": "plateNumber",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf4h",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_ls9yqf4i",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "rdsFormModel.qReceive.plateNumber",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onBlur": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnInputBlur(){\n                                                                    this.$dataModels.rdsFormModel.qDelivery.plateNumber = this.$dataModels.rdsFormModel.qReceive.plateNumber\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_input_ls9yqf4i",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf4h",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6k9",
                                                      "__description": "车牌号码"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6k8",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6k7",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6kf",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6kg",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6kh",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "用料单位",
                                                        "prop": "labourId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf4j",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "basisCommonSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "basisCommonSelect_ls9yqf4k",
                                                              "__nodeName": "basisCommonSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    const { lastProject } = this.$globalVars.$context\n\n                                                                    if (!query.id) {\n                                                                      rdsFormModel.qDelivery.labourName = ''\n                                                                      rdsFormModel.qReceive.labourId =   rdsFormModel.qDelivery.labourId = null\n                                                                      rdsFormModel.qDelivery.oriLabourId = ''\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        defaultText: '',\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId }\n                                                                      }\n                                                                    } else {\n                                                                      rdsFormModel.qReceive.labourId = rdsFormModel.qDelivery.labourId\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: rdsFormModel.qDelivery.labourName,\n                                                                        disabled: false,\n                                                                        orgId: lastProject.id,\n                                                                        parameter: { orgId: this.$globalVars.$context.orgId }\n                                                                      };\n                                                                    }\n\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnClear() {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qReceive.labourId = rdsFormModel.qDelivery.labourId = null\n                                                                    rdsFormModel.qDelivery.labourName = ''\n                                                                    rdsFormModel.qDelivery.oriLabourId = ''\n                                                                    rdsFormModel.qDelivery.teamName = ''\n                                                                    rdsFormModel.qDelivery.teamId = null\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    };\n                                                                  }"
                                                                },
                                                                "onSelectionChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onFnSelectionChange(item) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qDelivery.labourId =  item.id\n                                                                    rdsFormModel.qDelivery.labourName = item.labourName\n                                                                    rdsFormModel.qDelivery.oriLabourId = item.oriLabourId\n                                                                    rdsFormModel.qDelivery.teamName = item.teamName\n                                                                    rdsFormModel.qDelivery.teamId = item.teamId\n                                                                    if (!item.teamId) {\n                                                                      rdsFormModel.qDelivery.teamId = item.labourId\n                                                                      rdsFormModel.qDelivery.teamName = item.labourName\n                                                                    }\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: item.labourName\n                                                                    };\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 10,
                                                                "defaultProps": {
                                                                  "label": "labourName",
                                                                  "subLabel": "teamName",
                                                                  "value": "id"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": true,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "parameter": {
                                                                  "url": "/shared-data/c-labours-valid-team-params",
                                                                  "basisDataType": "labour",
                                                                  "orgId": 0,
                                                                  "fieldName": "labourName",
                                                                  "condtionItems": [],
                                                                  "queryDataJson": {}
                                                                },
                                                                "addButton": false,
                                                                "downloadIcon": true,
                                                                "size": "default",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": "rdsFormModel.qReceive.labourId"
                                                              },
                                                              "__nodeKey": "nodeKey_basisCommonSelect_ls9yqf4k",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf4j",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6kh",
                                                      "__description": "用料单位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6kg",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6kf",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ltjozaxm",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ltjozaxn",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ltjozaxo",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "队伍名称",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ltjozbhh",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_ltjozbhi",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": true,
                                                                "disabled": true,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "rdsFormModel.qDelivery.teamName",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_ltjozbhi",
                                                              "__description": "请输入",
                                                              "__nodeStyle": {
                                                                "width": "100%"
                                                              }
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ltjozbhh",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ltjozaxo",
                                                      "__description": "队伍名称"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ltjozaxn",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ltjozaxm",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6kn",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6ko",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6kp",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "使用部位",
                                                        "prop": "ghId",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf4l",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "searchTreeSelect",
                                                            "elementOptions": {
                                                              "__nodeId": "searchTreeSelect_ls9yqf4m",
                                                              "__nodeName": "searchTreeSelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入",
                                                                "moreEnable": true,
                                                                "reloadEnable": true,
                                                                "defaultProps": {
                                                                  "label": "name",
                                                                  "value": "id",
                                                                  "disabled": "disabled"
                                                                },
                                                                "currentSize": 20,
                                                                "modelName": "rdsFormModel.qReceive.ghId",
                                                                "defaultText": "",
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "300px",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "clearable": true
                                                              },
                                                              "__nodeEvent": {
                                                                "onChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(node) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qReceive.ghId = rdsFormModel.qDelivery.ghId = node.id\n                                                                    rdsFormModel.qDelivery.ghName = node.name\n                                                                    rdsFormModel.qDelivery.ghFullName = node.fullName\n                                                                    rdsFormModel.qDelivery.ghFullId = node.fullId\n                                                                    rdsFormModel.qDelivery.oriGhId = node.oriGhId\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: node.name\n                                                                    };\n\n                                                                  }"
                                                                },
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    const { treeList, rdsFormModel } = this.$dataModels\n                                                                    const { orgShortName, lastProject } = this.$globalVars.$context\n                                                                    const { query } = this.$globalVars.$router.currentRoute\n\n                                                                    if (!query.id) {\n                                                                      rdsFormModel.qReceive.ghId = rdsFormModel.qDelivery.ghId = 0\n                                                                      rdsFormModel.qDelivery.ghName = ''\n                                                                      rdsFormModel.qDelivery.ghFullName = ''\n                                                                      rdsFormModel.qDelivery.ghFullId = ''\n                                                                      rdsFormModel.qDelivery.oriGhId = ''\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        disabled: false,\n                                                                        defaultText: '',\n                                                                        // rootName: orgShortName,\n                                                                        // rootId: lastProject.id,\n                                                                        rootNode: { name: orgShortName, disabled: true }\n                                                                      }\n                                                                    } else {\n                                                                      rdsFormModel.qReceive.ghId = rdsFormModel.qDelivery.ghId\n                                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                                        defaultText: rdsFormModel.qDelivery.ghName,\n                                                                        disabled: false,\n                                                                        // rootName: orgShortName,\n                                                                        // rootId: lastProject.id,\n                                                                        rootNode: { name: orgShortName, id: -1, disabled: true }\n                                                                      };\n                                                                    }\n                                                                    // Object.assign(treeList.singleTable, { serviceName: 'node-mb2-shared-data-service', path: '/shared-data/c-ghs', parentId: -1 })\n\n                                                                  }"
                                                                },
                                                                "onClear": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName() {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qReceive.ghId = rdsFormModel.qDelivery.ghId = 0\n                                                                    rdsFormModel.qDelivery.ghName = ''\n                                                                    rdsFormModel.qDelivery.ghFullName = ''\n                                                                    rdsFormModel.qDelivery.ghFullId = ''\n                                                                    rdsFormModel.qDelivery.oriGhId = ''\n\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: ''\n                                                                    };\n\n                                                                  }"
                                                                },
                                                                "onLoadData": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnLoadData(params, resolve) {\n\n                                                                    const { lastProject } = this.$globalVars.$context\n\n                                                                    let parentId = -1\n                                                                    if (params.parentId) {\n                                                                      parentId = params.parentId\n                                                                    }\n                                                                    const result = await this.$globalVars.$http.get(`/shared-data/get-tree-lists?serviceName=node-mb2-shared-data-service&path=/shared-data/c-ghs&orgId=${lastProject.id}&parentId=${parentId}`, {})\n                                                                    resolve(result)\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_searchTreeSelect_ls9yqf4m",
                                                              "__description": "请选择"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf4l",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6kp",
                                                      "__description": "使用部位"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6ko",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6kn",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ls9sa6l1",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ls9sa6l2",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ls9sa6l3",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "税率(%)",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ls9yqf4n",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "dictionarySelect",
                                                            "elementOptions": {
                                                              "__nodeId": "dictionarySelect_ls9yqf4o",
                                                              "__nodeName": "dictionarySelect",
                                                              "__nodeType": "baseNode",
                                                              "__nodeEvent": {
                                                                "onMounted": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function onMountedFn() {\n                                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                                      defaultText: '13%'\n                                                                    };\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qReceive.taxRate = 13\n                                                                  }"
                                                                },
                                                                "onSelectionChange": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnName(item, props) {\n                                                                    const { rdsFormModel } = this.$dataModels\n                                                                    rdsFormModel.qReceive.taxRate = item.name ? Number(item.name.replace('%', '')) : 0\n                                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n\n                                                                    if (rdsFormModel.qReceiveMoreMaterials.length > 0) {\n                                                                      this.$vueGlobal.$confirm('修改税率是否需要更新已选材税率，如果无需更新已选材税率，点击取消即可。', '提示', {\n                                                                        type: 'warning',\n                                                                        confirmButtonText: '确定',\n                                                                        cancelButtonText: '取消',\n                                                                        showConfirmButton: true,\n                                                                        showCancelButton: true,\n                                                                        showClose: true,\n                                                                      }).then(() => {\n                                                                        rdsFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                                          t.taxRate = item.name ? Number(item.name.replace('%', '')) : 0\n                                                                          debugger\n                                                                          if (t.taxFreePrice && !t.taxIncludedPrice && t.taxRate) {\n                                                                            t.taxIncludedPrice = Number(new Decimal(t.taxIncludedPrice).mul(1 + (t.taxRate * 0.01)).toFixed(priceSettings))\n\n                                                                          }\n                                                                          if (t.taxIncludedPrice && t.taxRate) {\n                                                                            t.taxFreePrice = Number(new Decimal(t.taxIncludedPrice).div(1 + (t.taxRate * 0.01)).toFixed(priceSettings))\n                                                                          }\n                                                                          if (!t.taxRate && t.taxFreePrice) {\n                                                                            t.taxIncludedPrice = t.taxFreePrice\n                                                                          }\n                                                                          if (!t.taxRate && t.taxIncludedPrice) {\n                                                                            t.taxFreePrice = t.taxIncludedPrice\n                                                                          }\n                                                                          if (t.netQuantity) {\n                                                                            t.taxIncludedSum = Number(new Decimal(t.taxIncludedPrice).mul(t.netQuantity).toFixed(priceSettings))\n                                                                            t.taxFreeSum = Number((t.taxFreePrice * t.netQuantity).toFixed(priceSettings))\n                                                                          }\n\n                                                                        })\n                                                                      })\n                                                                        .catch(() => {\n\n                                                                        })\n\n\n                                                                    }\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeOptions": {
                                                                "defaultText": "",
                                                                "limit": 20,
                                                                "defaultProps": {
                                                                  "label": "name",
                                                                  "value": "name"
                                                                },
                                                                "width": "100%",
                                                                "dropdownHeight": "300px",
                                                                "dropdownWidth": "240px",
                                                                "clearable": false,
                                                                "placeholder": "请选择",
                                                                "searchPlaceholder": "请输入关键字搜索",
                                                                "disabled": false,
                                                                "searchEnable": true,
                                                                "size": "default",
                                                                "code": "taxRate",
                                                                "orgId": 0,
                                                                "isLeaf": true,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "modelName": ""
                                                              },
                                                              "__nodeKey": "nodeKey_dictionarySelect_ls9yqf4o",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ls9yqf4n",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ls9sa6l3",
                                                      "__description": "税率(%)"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ls9sa6l2",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ls9sa6l1",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ltfum07c",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ltfum07d",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ltfum07e",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "运费(元)",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ltfum0m3",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_ltfum0m4",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "rdsFormModel.qReceive.freight",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onBlur": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnInputBlur(){\n\n                                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                                    if (isNaN(parseInt(this.$dataModels.rdsFormModel.qReceive.freight))) {\n                                                                      this.$dataModels.rdsFormModel.qReceive.freight = 0\n                                                                      return\n                                                                    }\n                                                                    this.$dataModels.rdsFormModel.qReceive.freight = parseFloat(this.$dataModels.rdsFormModel.qReceive.freight)\n\n                                                                    this.$dataModels.rdsFormModel.qReceive.freight = Number(new Decimal(this.$dataModels.rdsFormModel.qReceive.freight).toFixed(priceSettings))\n\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_input_ltfum0m4",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ltfum0m3",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "96px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ltfum07e",
                                                      "__description": "运费(元)"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ltfum07d",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ltfum07c",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_ltl9q3z2",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 4,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": true,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_ltl9q3z3",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_ltl9q3z4",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "批号设置",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_ltl9q3z5",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_ltl9q3z6",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "text",
                                                                "placeholder": "请输入",
                                                                "modelName": "rdsFormModel.qReceive.batchNo",
                                                                "display": true,
                                                                "permissionSetting": ""
                                                              },
                                                              "__nodeEvent": {
                                                                "onBlur": {
                                                                  "type": "system",
                                                                  "isOn": true,
                                                                  "fn": "async function fnInputBlur(){\n\n                                                                    const { rdsFormModel } = this.$dataModels\n\n\n                                                                    if (rdsFormModel.qReceiveMoreMaterials.length > 0) {\n                                                                      if (rdsFormModel.qReceive.batchNo.length > 0) {\n                                                                        this.$vueGlobal.$confirm('修改批号是否需要更新已选材批号，如果无需更新已选材批号，点击取消即可。', '提示', {\n                                                                          type: 'warning',\n                                                                          confirmButtonText: '确定',\n                                                                          cancelButtonText: '取消',\n                                                                          showConfirmButton: true,\n                                                                          showCancelButton: true,\n                                                                          showClose: true,\n                                                                        }).then(() => {\n                                                                          rdsFormModel.qReceiveMoreMaterials.forEach(t => {\n                                                                            t.batchNo = rdsFormModel.qReceive.batchNo\n                                                                          })\n                                                                        })\n                                                                          .catch(() => {\n\n                                                                          })\n                                                                      }\n\n\n\n                                                                    }\n\n                                                                  }"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_input_ltl9q3z6",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_ltl9q3z5",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_ltl9q3z4",
                                                      "__description": "批号设置"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_ltl9q3z3",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_ltl9q3z2",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_ls9sa6i9",
                                        "__description": ""
                                      },
                                      {
                                        "__nodeId": "gridBox_lsbgqrc2",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lsbgqrc5",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "element",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lsbgqrc6",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "formItem",
                                                    "elementOptions": {
                                                      "__nodeId": "formItem_lsbgqrc7",
                                                      "__nodeName": "formItem",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {},
                                                      "__nodeOptions": {
                                                        "label": "单据备注",
                                                        "prop": "",
                                                        "required": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lsbgqrc8",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "input",
                                                            "elementOptions": {
                                                              "__nodeId": "input_lsbgqrc9",
                                                              "__nodeName": "input",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "size": "default",
                                                                "plain": false,
                                                                "clearable": true,
                                                                "readonly": false,
                                                                "disabled": false,
                                                                "type": "textarea",
                                                                "placeholder": "请输入",
                                                                "modelName": "rdsFormModel.qReceiveToDelivery.remark",
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "rows": 2
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_input_lsbgqrc9",
                                                              "__description": "请输入"
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lsbgqrc8",
                                                          "__description": ""
                                                        },
                                                        "labelWidth": "90px"
                                                      },
                                                      "__nodeKey": "nodeKey_formItem_lsbgqrc7",
                                                      "__description": "单据备注"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lsbgqrc6",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lsbgqrc5",
                                              "__description": ""
                                            }
                                          ],
                                          "display": true,
                                          "permissionSetting": "",
                                          "divider": true,
                                          "title": "更多信息",
                                          "disableFold": false,
                                          "contentPosition": "left",
                                          "defaultExpand": false
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lsbgqrc2",
                                        "__description": ""
                                      }
                                    ],
                                    "validateOnRuleChange": false
                                  },
                                  "__nodeKey": "nodeKey_form_ls9sa6i8",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_ls9sa6i7",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_ls9sa6g4",
                          "__description": "",
                          "__nodeEvent": {
                            "onMounted": {
                              "type": "system",
                              "isOn": true,
                              "fn": "async function onMountedFn(){\n\n                                this.$sharedFns.resetEditPageBtnState('rds');\n\n\n                              }"
                            }
                          }
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_ls9sa6g1",
                      "__description": ""
                    },
                    "clearPadding": [
                      "bottom"
                    ]
                  },
                  {
                    "tag": "item-2",
                    "isFixed": true,
                    "showDragButton": true,
                    "size": "300px",
                    "paddingSize": "large",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_ls9sa6g2",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_ls9sa6g7",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "物资明细",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_ls9sa6g8",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableEdit",
                                "elementOptions": {
                                  "__nodeId": "tableEdit_lsa5e7x9",
                                  "__nodeName": "tableEdit",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "modelName": "rdsFormModel.qReceiveMoreMaterials",
                                    "columnConfigs": [
                                      {
                                        "dataKey": "rowIndex",
                                        "title": "序号",
                                        "align": "center",
                                        "width": 60,
                                        "fixed": "left",
                                        "id": "0_item_config_luaj1zzn"
                                      },
                                      {
                                        "dataKey": "materialName",
                                        "title": "物资名称",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "1_item_config_luaj1zzo"
                                      },
                                      {
                                        "dataKey": "materialModel",
                                        "title": "规格型号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 100,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "2_item_config_luaj1zzp"
                                      },
                                      {
                                        "dataKey": "materialUnit",
                                        "title": "计量单位",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "fixed": "left",
                                        "id": "3_item_config_luaj1zzq"
                                      },
                                      {
                                        "dataKey": "netQuantity",
                                        "title": "收/发料量",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e7y3",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_lsa5e7y2",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": null,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "netQuantity",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n\n                                                    const quantitySettings = this.$dataModels.globalConfig.singleTable.quantitySettings || 4\n                                                    if ( !isNaN(parseFloat(row.netQuantity)) & (parseFloat(row.netQuantity) >= 0)) {\n                                                      row.netQuantity = Number(\n                                                        new Decimal(row.netQuantity).toFixed(quantitySettings)\n                                                      )\n                                                      if (!isNaN(parseFloat(row.surplusQuantity))) {\n                                                        if (row.netQuantity > Number(row.surplusQuantity)) {\n                                                          row.netQuantity = Number(\n                                                            new Decimal(row.surplusQuantity).toFixed(netQuantitySettings)\n                                                          )\n                                                        }\n                                                      }\n                                                    } else {\n                                                      row.netQuantity = 0\n                                                    }\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_lsa5e7y2",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e7y3",
                                          "__description": ""
                                        },
                                        "id": "4_item_config_luaj1zzr"
                                      },
                                      {
                                        "dataKey": "priceType",
                                        "title": "价格类型",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": true,
                                        "sortable": false,
                                        "width": 140,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsb3xvyx",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "select",
                                            "elementOptions": {
                                              "__nodeId": "select_lsb3xvyw",
                                              "__nodeName": "select",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "multiple": false,
                                                "disabled": false,
                                                "size": "default",
                                                "clearable": false,
                                                "collapseTags": false,
                                                "collapseTagsTooltip": false,
                                                "multipleLimit": 0,
                                                "clearIcon": "CircleClose",
                                                "fitInputWidth": false,
                                                "filterable": false,
                                                "valueKey": "value",
                                                "placeholder": "请选择",
                                                "modelName": "priceType",
                                                "itemData": [
                                                  {
                                                    "value": "合同价",
                                                    "label": "合同价"
                                                  },
                                                  {
                                                    "value": "调查价",
                                                    "label": "调查价"
                                                  }
                                                ],
                                                "defaultProps": {
                                                  "label": "label",
                                                  "value": "value"
                                                },
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_select_lsb3xvyw",
                                              "__description": "请选择"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsb3xvyx",
                                          "__description": ""
                                        },
                                        "id": "5_item_config_luaj1zzs"
                                      },
                                      {
                                        "dataKey": "taxRate",
                                        "title": "税率(%)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 130,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e7yj",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "select",
                                            "elementOptions": {
                                              "__nodeId": "select_lsa5e7yi",
                                              "__nodeName": "select",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "multiple": false,
                                                "disabled": false,
                                                "size": "small",
                                                "clearable": false,
                                                "collapseTags": false,
                                                "collapseTagsTooltip": false,
                                                "multipleLimit": 0,
                                                "clearIcon": "CircleClose",
                                                "fitInputWidth": false,
                                                "filterable": false,
                                                "valueKey": "value",
                                                "placeholder": "请选择",
                                                "modelName": "taxRate",
                                                "itemData": [],
                                                "defaultProps": {
                                                  "label": "name",
                                                  "value": "value"
                                                },
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {
                                                "onMounted": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function onMountedFn() {\n\n                                                    this.$currentInstance.exposed.model.elementOption.value = {\n                                                      defaultProps: { \"label\": \"name\", \"value\": \"value\" }\n                                                    };\n                                                    this.$currentInstance.exposed.model.itemData.value = this.$dataModels.dicData.taxRate\n                                                    if ([20, -21].includes(this.$dataModels.rdsFormModel.qReceive.serviceType)) {\n                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                        disabled: true\n                                                      };\n                                                    } else {\n                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                        disabled: false\n                                                      };\n                                                    }\n\n                                                  }"
                                                },
                                                "onChange": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(val,row){\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                    if (!isNaN(parseFloat(row.taxFreePrice)) && (parseFloat(row.taxFreePrice) >= 0)) {\n                                                      row.taxIncludedPrice = Number(\n                                                        new Decimal(row.taxFreePrice * (parseFloat(val) / 100 + 1)).toFixed(priceSettings)\n                                                      )\n                                                    } else {\n                                                      if (!isNaN(parseFloat(row.taxIncludedPrice)) && (parseFloat(row.taxIncludedPrice) > 0)) {\n                                                        row.taxFreePrice = Number(\n                                                          new Decimal(row.taxIncludedPrice / (1 + parseFloat(val) / 100)).toFixed(priceSettings)\n                                                        )\n                                                      }\n                                                    }\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_select_lsa5e7yi",
                                              "__description": "请选择"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e7yj",
                                          "__description": ""
                                        },
                                        "id": "6_item_config_luaj1zzt"
                                      },
                                      {
                                        "dataKey": "taxFreePrice",
                                        "title": "不含税单价(元)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 170,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e7yz",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_lsa5e7yy",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "taxFreePrice",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row) {\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n\n                                                    if (!Number(row.taxFreePrice)) {\n                                                      row.taxFreePrice = 0\n                                                      row.taxFreeSum = 0\n                                                      row.taxIncludedPrice = 0\n                                                      row.taxIncludedSum=0\n                                                    } else {\n                                                      row.taxFreePrice = Number(Number(row.taxFreePrice).toFixed(priceSettings))\n                                                      row.taxFreeSum = Number(Number(row.taxFreePrice*row.netQuantity).toFixed(priceSettings))\n                                                      if (!row.taxRate) {\n                                                        row.taxIncludedPrice = row.taxFreePrice\n                                                        row.taxIncludedSum = row.taxFreeSum\n                                                      } else {\n                                                        const taxRatePrice = 1 + (row.taxRate * 0.01)\n                                                        row.taxIncludedPrice = Number(new Decimal(row.taxFreePrice).mul(taxRatePrice).toFixed(priceSettings))\n                                                        row.taxIncludedSum = Number(Number(row.taxIncludedPrice * row.netQuantity).toFixed(priceSettings))\n                                                      }\n                                                    }\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_lsa5e7yy",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e7yz",
                                          "__description": ""
                                        },
                                        "id": "7_item_config_luaj1zzu"
                                      },
                                      {
                                        "dataKey": "taxIncludedPrice",
                                        "title": "含税单价(元)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 160,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e7zf",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "inputNumber",
                                            "elementOptions": {
                                              "__nodeId": "inputNumber_lsa5e7ze",
                                              "__nodeName": "inputNumber",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "controls": false,
                                                "step": 1,
                                                "stepStrictly": false,
                                                "type": "primary",
                                                "placeholder": "",
                                                "modelName": "taxIncludedPrice",
                                                "display": true,
                                                "permissionSetting": "",
                                                "min": 0
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row) {\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                    if (!Number(row.taxIncludedPrice)) {\n                                                      row.taxIncludedPrice = 0\n                                                      row.taxIncludedSum = 0\n                                                      row.taxIFreePrice = 0\n                                                      row.taxFreeSum = 0\n                                                    } else {\n                                                      row.taxIncludedPrice = Number(Number(row.taxIncludedPrice).toFixed(priceSettings))\n                                                      row.taxIncludedSum = Number(Number(row.taxIncludedPrice*row.netQuantity).toFixed(priceSettings))\n                                                      if (!row.taxRate) {\n                                                        row.taxFreePrice = row.taxIncludedPrice\n                                                        row.taxFreeSum = row.taxIncludedSum\n                                                      } else {\n                                                        const taxRatePrice = 1 + (row.taxRate * 0.01)\n                                                        row.taxFreePrice = Number(new Decimal(row.taxIncludedPrice).div(taxRatePrice).toFixed(priceSettings))\n                                                        row.taxFreeSum = Number(Number(row.taxFreePrice * row.netQuantity).toFixed(priceSettings))\n                                                      }\n                                                    }\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_inputNumber_lsa5e7ze",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e7zf",
                                          "__description": ""
                                        },
                                        "id": "8_item_config_luaj1zzv"
                                      },
                                      {
                                        "dataKey": "freight",
                                        "title": "运费(元)",
                                        "align": "right",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ltju0z74",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ltju0z73",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "freight",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {
                                                "onBlur": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnInputBlur(row) {\n                                                    console.log(row);\n                                                    debugger\n                                                    const priceSettings = this.$dataModels.globalConfig.singleTable.priceSettings || 8\n                                                    if (isNaN(parseInt(row.freight))) {\n                                                      row.freight = 0\n                                                      return\n                                                    }\n                                                    row.freight = parseFloat(row.freight)\n\n                                                    row.freight = Number(new Decimal(row.freight).toFixed(priceSettings))\n\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_input_ltju0z73",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ltju0z74",
                                          "__description": ""
                                        },
                                        "id": "9_item_config_luaj1zzw"
                                      },
                                      {
                                        "dataKey": "storagePlace",
                                        "title": "存放地",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e7zv",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "select",
                                            "elementOptions": {
                                              "__nodeId": "select_lsa5e7zu",
                                              "__nodeName": "select",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "multiple": false,
                                                "disabled": false,
                                                "size": "small",
                                                "clearable": false,
                                                "collapseTags": false,
                                                "collapseTagsTooltip": false,
                                                "multipleLimit": 0,
                                                "clearIcon": "CircleClose",
                                                "fitInputWidth": false,
                                                "filterable": false,
                                                "valueKey": "value",
                                                "placeholder": "请选择",
                                                "modelName": "storagePlace",
                                                "itemData": [],
                                                "defaultProps": {
                                                  "label": "name",
                                                  "value": "value"
                                                },
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {
                                                "onMounted": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function onMountedFn() {\n                                                    this.$currentInstance.exposed.model.itemData.value = this.$dataModels.dicData.storagePlace\n                                                  }"
                                                },
                                                "onChange": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(val,row){\n                                                    const { storagePlace } = this.$dataModels.dicData\n                                                    const  { id,name,fullName} = storagePlace.find(s => s.value ==val)\n                                                    row.stockbinId = id\n                                                    row.stockbinFullName = fullName\n                                                    row.oriStockbinId = row.oriDicId\n                                                    row.storagePlace = name\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_select_lsa5e7zu",
                                              "__description": "请选择"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e7zv",
                                          "__description": ""
                                        },
                                        "id": "10_item_config_luaj1zzx"
                                      },
                                      {
                                        "dataKey": "batchNo",
                                        "title": "炉批号",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ltju0z77",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ltju0z76",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "batchNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_ltju0z76",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ltju0z77",
                                          "__description": ""
                                        },
                                        "id": "11_item_config_luaj1zzy"
                                      },
                                      {
                                        "dataKey": "testReportNo",
                                        "title": "实验报告号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 120,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e80b",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lsa5e80a",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "testReportNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lsa5e80a",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e80b",
                                          "__description": ""
                                        },
                                        "id": "12_item_config_luaj1zzz"
                                      },
                                      {
                                        "dataKey": "skillCardNo",
                                        "title": "技证号",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e80r",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lsa5e80q",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "skillCardNo",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lsa5e80q",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e80r",
                                          "__description": ""
                                        },
                                        "id": "13_item_config_luaj2000"
                                      },
                                      {
                                        "dataKey": "acceptanceRecord",
                                        "title": "验收情况记录",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ltju0z9v",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ltju0z9u",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "acceptanceRecord",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_ltju0z9u",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ltju0z9v",
                                          "__description": ""
                                        },
                                        "id": "14_item_config_luaj2001"
                                      },
                                      {
                                        "dataKey": "manufacturer",
                                        "title": "生产厂商",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_ltju0z9x",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_ltju0z9w",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "manufacturer",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_ltju0z9w",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_ltju0z9x",
                                          "__description": ""
                                        },
                                        "id": "15_item_config_luaj2002"
                                      },
                                      {
                                        "dataKey": "remark",
                                        "title": "物资备注",
                                        "align": "left",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 220,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e817",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_lsa5e816",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "remark",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_lsa5e816",
                                              "__description": "请输入"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e817",
                                          "__description": ""
                                        },
                                        "id": "16_item_config_luaj2003"
                                      },
                                      {
                                        "dataKey": "detailRemark",
                                        "title": "明细备注",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 150,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_luaj1zx4",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "input",
                                            "elementOptions": {
                                              "__nodeId": "input_luaj1zx3",
                                              "__nodeName": "input",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "size": "small",
                                                "plain": false,
                                                "clearable": true,
                                                "readonly": false,
                                                "disabled": false,
                                                "type": "text",
                                                "placeholder": "请输入",
                                                "modelName": "detailRemark",
                                                "display": true,
                                                "permissionSetting": ""
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_input_luaj1zx3",
                                              "__description": ""
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_luaj1zx4",
                                          "__description": ""
                                        },
                                        "id": "17_item_config_luaj2004"
                                      },
                                      {
                                        "dataKey": "code",
                                        "title": "操作",
                                        "align": "center",
                                        "headerClass": "",
                                        "hidden": false,
                                        "sortable": false,
                                        "width": 80,
                                        "maxWidth": "",
                                        "minWidth": "",
                                        "defaultSlot": {
                                          "__nodeId": "lineElementRender_lsa5e81n",
                                          "__nodeName": "lineElementRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "button",
                                            "elementOptions": {
                                              "__nodeId": "button_lsa5e81m",
                                              "__nodeName": "button",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "size": "small",
                                                "plain": true,
                                                "content": "删除",
                                                "type": "danger",
                                                "text": false,
                                                "link": true,
                                                "round": false,
                                                "circle": false,
                                                "loading": false,
                                                "disabled": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "tooltip": false,
                                                "tooltipEffect": "dark",
                                                "tooltipContent": "显示的内容",
                                                "tooltipPlacement": "bottom",
                                                "icon": "Delete"
                                              },
                                              "__nodeEvent": {
                                                "onClick": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n                                                    const { rdsFormModel } = this.$dataModels\n                                                    if (row.id) {\n                                                      rdsFormModel.deleteItems.push({ id: row.id, orgId: row.orgId, orderId: row.orderId, isRemoved: true, materialId: row.materialId, itemBarCode: row.itemBarCode})\n                                                    }\n                                                    rdsFormModel.qReceiveMoreMaterials.splice(row.sortCode, 1)\n                                                    this.$sharedFns.resetSortCode('rds');\n                                                    this.$sharedFns.resetEditPageBtnState('rds');\n\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_button_lsa5e81m",
                                              "__description": "按钮"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_lineElementRender_lsa5e81n",
                                          "__description": ""
                                        },
                                        "id": "18_item_config_luaj2005"
                                      }
                                    ],
                                    "mapConfig": {
                                      "addSource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "orderId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "id",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "auxiliaryUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "auxiliaryUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "oriMaterialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "oriMaterialId",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "netQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "roughQuantity",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "receivePrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxFreePrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "taxFreePrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxRate",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "taxRate",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxIncludedPrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "taxIncludedPrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "priceType",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "priceType",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "trunItemBarCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "trunItemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "batchNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "batchNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "freight",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        }
                                      ],
                                      "planSource": [
                                        {
                                          "prop": "orgId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "orgId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "oriPlanId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "id",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "id",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "surplusQuantity",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "surplusQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "orderId",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "orderId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "priceType",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "priceType",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "taxFreePrice",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxRate",
                                          "isReplace": true,
                                          "defaultVal": 13,
                                          "selprop": "taxRate",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "taxIncludedPrice",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "freight",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "materialCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialModel",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialModel",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "materialUnit",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "materialUnit",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "oriMaterialId",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "oriMaterialId",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "netQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "surplusQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "roughQuantity",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "surplusQuantity",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "itemBarCode",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "receivePrice",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "purchasePrice",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "manufacturer",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "batchNo",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "batchNo",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "skillCardNo",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "testReportNo",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "storagePlace",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "storagePlace",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "stockbinId",
                                          "isReplace": true,
                                          "defaultVal": 0,
                                          "selprop": "stockbinId",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "stockbinFullName",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "stockbinFullName",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "remark",
                                          "isReplace": false,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "priceType",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "priceType",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "trunItemBarCode",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "trunItemBarCode",
                                          "defaultValType": "string"
                                        },
                                        {
                                          "prop": "freight",
                                          "isReplace": false,
                                          "defaultVal": 0,
                                          "selprop": "",
                                          "defaultValType": "number"
                                        },
                                        {
                                          "prop": "",
                                          "isReplace": true,
                                          "defaultVal": "",
                                          "selprop": "",
                                          "defaultValType": "string"
                                        }
                                      ]
                                    },
                                    "sumRowConfig": {
                                      "disabled": true,
                                      "sumText": "合计",
                                      "items": {},
                                      "_items": []
                                    },
                                    "notRepeatFiled": [],
                                    "rowsLimit": 10000
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": false,
                                      "fn": "async function onMountedFn(){\n\n                                        if(window.assemBoxIsEdit){this.$currentInstance.exposed.methods.growData(\"addSource\",[{},{}]);}\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_tableEdit_lsa5e7x9",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_ls9sa6g8",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_ls9sa6g9",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_ls9sa6g9",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_ls9sa6g7",
                          "__description": "物资明细"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_ls9sa6g2",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-3",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_ls9sa6g3",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_ls9sa6ga",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "出入库凭证",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_ls9sa6gb",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lsvsi8bi",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "vertical",
                                    "wrap": false,
                                    "fill": true,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "100%",
                                      "height": "auto",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lsvsi8bj",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lsvsi8bm",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 2,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lsvsi8c5",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "rawHtml",
                                                    "elementOptions": {
                                                      "__nodeId": "rawHtml_lsvsi8c8",
                                                      "__nodeName": "rawHtml",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "content": "<span style=\"\">rawTxt渲染文本</span>",
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "modelName": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            let text = row.cameraPosition + '照片'\n                                                            if (row.isRequired) {\n                                                              text = ` <div style=\"color:var(--el-text-color-secondary)\"><span style=\"color:red\">*</span>${text}</div>`\n                                                            } else {\n                                                              text = ` <div style=\"color:var(--el-text-color-secondary)\">${text}</div>`\n                                                            }\n                                                            return { content: text }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_rawHtml_lsvsi8c8",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lsvsi8c5",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lsvsi8bm",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lsvsi8bp",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 22,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lsvsi8c7",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "upload",
                                                    "elementOptions": {
                                                      "__nodeId": "upload_lsvsi8c9",
                                                      "__nodeName": "upload",
                                                      "__nodeType": "baseNode",
                                                      "__nodeEvent": {
                                                        "onBeforeUpload": {
                                                          "isOn": true,
                                                          "type": "system",
                                                          "fn": "async function fnOnBeforeUpload(){\n\n\n\n                                                          }"
                                                        },
                                                        "onExceed": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnExceed(uploadFile, uploadFiles) {\n                                                            this.$vueGlobal.$message({\n                                                              type: 'error',\n                                                              message: '已超出允许上传的最大数量'\n                                                            })\n                                                          }"
                                                        },
                                                        "onMounted": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function onMountedFn(row) {\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              limit: row.total\n                                                            }\n\n                                                            // photoList=[{name:'',key:'photoUrl'},{name:'',key:'photoUrl'}]\n                                                            this.$currentInstance.exposed.model.fileList.value = row.photoList\n                                                            // this.$currentInstance.exposed.model.fileList.value = [{ name: '运单', key:'微信图片_20230614165501.jpg'}]\n\n                                                          }"
                                                        },
                                                        "onBeforeRemove": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnName(file,row) {\n                                                            const { rdsFormModel } = this.$dataModels\n                                                            const idx = rdsFormModel.qDeliveryPhotos.findIndex(t => t.photoUrl == file.key)\n                                                            const rIdx = row.photoList.findIndex(t => t.key == file.key)\n                                                            if (file.id) {\n                                                              rdsFormModel.deletePhotos.push({ id: file.id, orgId: file.orgId, orderId: file.orderId, isRemoved: true })\n                                                              rdsFormModel.qDeliveryPhotos[idx].isRemoved=true\n                                                            } else {\n                                                              rdsFormModel.qDeliveryPhotos.splice(idx,1)\n                                                            }\n                                                            // row.photoList.splice(rIdx, 1)\n                                                            row.photoList[rIdx].isRemoved=true\n                                                          }"
                                                        },
                                                        "onChange": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnChange(uploadFile, uploadFiles, row) {\n                                                            if (uploadFile) {\n                                                              const { rdsFormModel } = this.$dataModels\n                                                              row.photoList.push({\n                                                                orgId: rdsFormModel.qReceive.orgId,\n                                                                orderId: rdsFormModel.qReceive.id || 0,\n                                                                photoUrl: uploadFile.savedKey,\n                                                                key: uploadFile.savedKey,\n                                                                cameraPosition: row.cameraPosition,\n                                                                photoType: row.photoType\n                                                              })\n                                                              rdsFormModel.qDeliveryPhotos.push({\n                                                                orgId: rdsFormModel.qDelivery.orgId,\n                                                                orderId: rdsFormModel.qDelivery.id || 0,\n                                                                photoUrl: uploadFile.savedKey,\n                                                                cameraPosition: row.cameraPosition,\n                                                                photoType: '出场'\n                                                              })\n                                                            }\n                                                          }"
                                                        },
                                                        "onPreview": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnOnPreview(uploadFile) {\n                                                            this.$dataModels.currentPreviewImg.singleTable.src = uploadFile.url\n                                                            this.$exposeds.get('dialog_lta29tkc').model.dialogShow.value = true\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeOptions": {
                                                        "uploadParams": {
                                                          "tempFile": false,
                                                          "product": "mquantity",
                                                          "autoGenerated": true,
                                                          "isAllowRepeated": false,
                                                          "singleSignatureURL": "/shared-data/fs/form-signature"
                                                        },
                                                        "downloadParams": {
                                                          "type": "img",
                                                          "product": "mquantity",
                                                          "expires": 15
                                                        },
                                                        "product": "mquantity",
                                                        "moduleName": "",
                                                        "prefix": "",
                                                        "multiple": false,
                                                        "showFileList": true,
                                                        "drag": false,
                                                        "accept": "['.jpg', '.png', '.jpeg', '.gif', '.bmp']",
                                                        "listType": "picture-card",
                                                        "autoUpload": true,
                                                        "disabled": false,
                                                        "limit": 0,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "defaultSlot": {
                                                          "__nodeId": "elementRender_lswk9qii",
                                                          "__nodeName": "elementRender",
                                                          "__nodeType": "renderNode",
                                                          "__nodeOptions": {
                                                            "renderType": "button",
                                                            "elementOptions": {
                                                              "__nodeId": "button_lswk9qij",
                                                              "__nodeName": "button",
                                                              "__nodeType": "baseNode",
                                                              "__nodeOptions": {
                                                                "modelName": "",
                                                                "size": "default",
                                                                "plain": true,
                                                                "content": "",
                                                                "type": "info",
                                                                "text": false,
                                                                "link": true,
                                                                "round": false,
                                                                "circle": false,
                                                                "loading": false,
                                                                "disabled": false,
                                                                "display": true,
                                                                "permissionSetting": "",
                                                                "tooltip": false,
                                                                "tooltipEffect": "dark",
                                                                "tooltipContent": "显示的内容",
                                                                "tooltipPlacement": "bottom",
                                                                "icon": "Plus"
                                                              },
                                                              "__nodeEvent": {},
                                                              "__nodeKey": "nodeKey_button_lswk9qij",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeKey": "nodeKey_elementRender_lswk9qii",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_upload_lsvsi8c9",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lsvsi8c7",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lsvsi8bp",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lsvsi8bj",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        // 当前代码编辑器下有效\n                                        // if(window.assemBoxIsEdit){ this.$currentInstance.exposed.model.listData.value= [{},{}];}\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.rdsFormModel.qReceivePhotos\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lsvsi8bi",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_ls9sa6gb",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_ls9sa6gc",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_ls9sa6gc",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_ls9sa6ga",
                          "__description": "出入库凭证"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_ls9sa6g3",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-4",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lu9dadz1",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lu9dadz2",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "高拍仪",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lu9dadz3",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lu9dadz5",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": false,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lu9dadz6",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lu9dadz9",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu9dadzb",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lu9dadzc",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row){\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              content: row.photoUrl\n                                                            }\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lu9dadzc",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "100%",
                                                        "height": "115%"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu9dadzb",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu9dadz9",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "gridItem_lu9g5zb9",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu9glxfm",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "button",
                                                    "elementOptions": {
                                                      "__nodeId": "button_lu9glxfn",
                                                      "__nodeName": "button",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "size": "default",
                                                        "plain": true,
                                                        "content": "删除",
                                                        "type": "danger",
                                                        "text": false,
                                                        "link": true,
                                                        "round": false,
                                                        "circle": false,
                                                        "loading": false,
                                                        "disabled": false,
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "tooltip": false,
                                                        "tooltipEffect": "dark",
                                                        "tooltipContent": "显示的内容",
                                                        "tooltipPlacement": "bottom",
                                                        "icon": "delete"
                                                      },
                                                      "__nodeEvent": {
                                                        "onClick": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "async function fnName(row){\n                                                            let photoList = this.$exposeds.get('listOnly_lu9dadz5').model.listData.value\n                                                            photoList.forEach((item, index) => {\n                                                              if (item.photoUrl === row.photoUrl) {\n                                                                photoList.splice(index, 1)\n                                                                this.$dataModels.rdsFormModel.qReceiveGpys.splice(index, 1)\n                                                                // this.$dataModels.receiveFormModel.qReceiveGpys.splice(index, 1)\n                                                              }\n                                                            })\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_button_lu9glxfn",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "marginTop": "35px"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu9glxfm",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu9g5zb9",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "display": "flex",
                                                "justifyContent": "flex-end"
                                              }
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lu9dadz6",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        if (this.$dataModels.rdsFormModel.qReceiveGpys.length) {\n                                          const file = {\n                                            keys: []\n                                          }\n                                          this.$dataModels.rdsFormModel.qReceiveGpys.forEach(item => {\n                                            file.keys.push(item.gpyPhotoUrl)\n                                          })\n                                          const result = await this.$sharedFns.downloadFile(file);\n                                          let arr = []\n                                          for (let key in result) {\n                                            arr.push({ photoUrl: result[key], orgId: this.$dataModels.rdsFormModel.qReceive.orgId })\n                                          }\n                                          this.$currentInstance.exposed.model.listData.value.push(...arr)\n                                        }\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lu9dadz5",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lu9dadz3",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lu9dadz4",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [
                                  {
                                    "__nodeId": "elementRender_lu9dadzm",
                                    "__nodeName": "elementRender",
                                    "__nodeType": "renderNode",
                                    "__nodeOptions": {
                                      "renderType": "button",
                                      "elementOptions": {
                                        "__nodeId": "button_lu9dadzn",
                                        "__nodeName": "button",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "modelName": "",
                                          "size": "default",
                                          "plain": true,
                                          "content": "拍照",
                                          "type": "primary",
                                          "text": false,
                                          "link": false,
                                          "round": false,
                                          "circle": false,
                                          "loading": false,
                                          "disabled": false,
                                          "display": true,
                                          "permissionSetting": "",
                                          "tooltip": false,
                                          "tooltipEffect": "dark",
                                          "tooltipContent": "显示的内容",
                                          "tooltipPlacement": "bottom",
                                          "icon": "FullScreen"
                                        },
                                        "__nodeEvent": {
                                          "onClick": {
                                            "type": "system",
                                            "isOn": true,
                                            "fn": "async function fnName(){\n                                              // this.$exposeds.get('dialog_lu9dagdy').model.dialogShow.value = true\n\n                                              if (this.$exposeds.get('listOnly_lu9dadz5').model.listData.value.length >= this.$dataModels.gpyPhotoList.singleTable.photoNumber) {\n\n                                                this.$vueGlobal.$message({\n                                                  type: 'error',\n                                                  message: '已超出允许上传的最大数量'\n                                                })\n\n\n                                              } else {\n                                                this.$exposeds.get('dialog_lu9dagdy').model.dialogShow.value = true\n                                              }\n\n                                            }"
                                          }
                                        },
                                        "__nodeKey": "nodeKey_button_lu9dadzn",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_elementRender_lu9dadzm",
                                    "__description": ""
                                  }
                                ],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lu9dadz4",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lu9dadz2",
                          "__description": ""
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lu9dadz1",
                      "__description": ""
                    }
                  }
                ]
              },
              "__nodeEvent": {
                "onMounted": {
                  "type": "system",
                  "isOn": true,
                  "fn": "async function onMountedFn() {\n                    const { serviceType } = this.$dataModels.deliveryFormModel.qDelivery\n                    const itemConfig = this.$exposeds.get('flexBox_ls9sa6g0').model.elementOption.value.itemConfig\n                    itemConfig.forEach(item => {\n                      if (item.tag == 'item-4') {\n                        item.isHidden = this.$dataModels.gpyPhotoList.singleTable.isShow ? false : true\n                      }\n                    })\n                  }"
                }
              },
              "__nodeKey": "nodeKey_flexBox_ls9sa6g0",
              "__description": ""
            }
          },
          "__nodeKey": "nodeKey_plane_ls9sa6fs",
          "__description": ""
        },
        "dialogOptions": [
          {
            "__nodeId": "dialog_ls9yqgp4",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "常用库选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_ls9yqgp5",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls9yqgp6",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls9yqf4r",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "base",
                              "clearPadding": [
                                "left",
                                "top",
                                "right",
                                "bottom"
                              ],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls9yqf4s",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "selectFromComMaterial",
                                  "elementOptions": {
                                    "__nodeId": "selectFromComMaterial_ls9yqf4t",
                                    "__nodeName": "selectFromComMaterial",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {
                                      "onSelectRows": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnName(item) {\n                                          const { rdsFormModel } = this.$dataModels\n                                          const { taxRate } = rdsFormModel.qReceive\n                                          const arr = []\n                                          item.forEach(t => {\n                                            t.orgId = rdsFormModel.qReceive.orgId\n                                            t.orderId = rdsFormModel.qReceive.id\n                                            t.serviceType = rdsFormModel.qReceive.serviceType\n                                            t.orderType = rdsFormModel.qReceive.orderType\n                                            if ([20, -21].includes(rdsFormModel.qReceive.serviceType)) {\n                                              t.taxRate = 0\n                                            } else {\n                                              t.taxRate = taxRate || 0\n                                            }\n                                            arr.push(t)\n\n                                          })\n\n                                          this.$exposeds.get('tableEdit_lsa5e7x9').methods.growData('addSource', arr);\n                                          this.$sharedFns.resetSortCode('rds');\n                                          this.$sharedFns.resetEditPageBtnState('rds');\n\n                                          // this.$exposeds.get('dialog_ls9yqgp4').model.dialogShow.value = false\n                                        }"
                                      },
                                      "onClose": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnOnClose(){\n\n                                          this.$exposeds.get('dialog_ls9yqgp4').model.dialogShow.value = false\n\n                                        }"
                                      }
                                    },
                                    "__nodeOptions": {
                                      "addButton": false,
                                      "downloadIcon": false,
                                      "selectSingle": false,
                                      "display": true,
                                      "permissionSetting": ""
                                    },
                                    "__nodeKey": "nodeKey_selectFromComMaterial_ls9yqf4t",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls9yqf4s",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls9yqf4r",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls9yqgp6",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_ls9yqgp5",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_ls9yqgp4",
            "__description": "常用库选材",
            "__nodeEvent": {
              "onClose": {
                "isOn": true,
                "type": "system",
                "fn": "async function fnName(){\n\n\n\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_ls9yqgp7",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "采购计划选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_ls9yqgp8",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 4,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls9yqgp9",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls9yqf4x",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_ls9yqf4z",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [
                                    {
                                      "__nodeId": "elementRender_ls9yqf50",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "dictionarySelect",
                                        "elementOptions": {
                                          "__nodeId": "dictionarySelect_ls9yqf51",
                                          "__nodeName": "dictionarySelect",
                                          "__nodeType": "baseNode",
                                          "__nodeEvent": {
                                            "onSelectionChange": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(item, props) {\n\n                                                this.$exposeds.get('tableAsync_ls9yqf5a').model.tableLoading.value = true\n                                                this.$exposeds.get('tableAsync_ls9yqf5a').methods.loadData(true);\n                                                this.$exposeds.get('tableAsync_ls9yqf5a').model.tableLoading.value = false\n\n\n                                              }"
                                            },
                                            "onClear": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(item, props) {\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = true\n                                                this.$exposeds.get('tableAsync_lrvsiyni').methods.loadData(true);\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = false\n                                              }"
                                            }
                                          },
                                          "__nodeOptions": {
                                            "defaultText": "",
                                            "limit": 20,
                                            "defaultProps": {
                                              "label": "name",
                                              "subLabel": "fullName",
                                              "value": "name"
                                            },
                                            "width": "100%",
                                            "dropdownHeight": "300px",
                                            "dropdownWidth": "240px",
                                            "clearable": true,
                                            "placeholder": "请选择计划类型",
                                            "searchPlaceholder": "请输入关键字搜索",
                                            "disabled": false,
                                            "searchEnable": true,
                                            "size": "default",
                                            "code": "PurchasePlanType",
                                            "orgId": 0,
                                            "isLeaf": true,
                                            "display": true,
                                            "permissionSetting": "",
                                            "modelName": "filterPlanModel.singleTable.purchaseMethod"
                                          },
                                          "__nodeKey": "nodeKey_dictionarySelect_ls9yqf51",
                                          "__description": ""
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls9yqf50",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls9yqf52",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls9yqf53",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入单据编号",
                                            "modelName": "filterPlanModel.singleTable.orderCode",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls9yqf53",
                                          "__description": "请输入单据编号",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls9yqf52",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls9yqf54",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "input",
                                        "elementOptions": {
                                          "__nodeId": "input_ls9yqf55",
                                          "__nodeName": "input",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "size": "default",
                                            "plain": false,
                                            "clearable": true,
                                            "readonly": false,
                                            "disabled": false,
                                            "type": "text",
                                            "placeholder": "请输入计划名称",
                                            "modelName": "filterPlanModel.singleTable.planName",
                                            "display": true,
                                            "permissionSetting": ""
                                          },
                                          "__nodeEvent": {},
                                          "__nodeKey": "nodeKey_input_ls9yqf55",
                                          "__description": "请输入计划名称",
                                          "__nodeStyle": {
                                            "width": "200px"
                                          }
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls9yqf54",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls9yqf56",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls9yqf57",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "查询",
                                            "type": "info",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "icon": "Search"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                this.$exposeds.get('tableAsync_ls9yqf5a').model.tableLoading.value = true\n                                                this.$exposeds.get('tableAsync_ls9yqf5a').methods.loadData(true);\n                                                this.$exposeds.get('tableAsync_ls9yqf5a').model.tableLoading.value = false\n                                              }"
                                            },
                                            "": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = true\n                                                this.$exposeds.get('tableAsync_lrvsiyni').methods.loadData(true);\n                                                this.$exposeds.get('tableAsync_lrvsiyni').model.tableLoading.value = false\n\n\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls9yqf57",
                                          "__description": "查询"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls9yqf56",
                                      "__description": ""
                                    }
                                  ],
                                  "rightSlot": null,
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls9yqf4z",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls9yqf4x",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls9yqgp9",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": true,
                      "showDragButton": true,
                      "size": "300px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls9yqf4u",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls9yqf58",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls9yqf59",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableAsync",
                                  "elementOptions": {
                                    "__nodeId": "tableAsync_ls9yqf5a",
                                    "__nodeName": "tableAsync",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "queryPurchasePlanMaterials",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "index",
                                            "label": "序号",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "0_item_config_lthzzff9"
                                        },
                                        {
                                          "attr": {
                                            "prop": "purchaseMethod",
                                            "label": "计划类型",
                                            "width": "90",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "purchaseMethod"
                                          },
                                          "id": "1_item_config_lthzzffa"
                                        },
                                        {
                                          "attr": {
                                            "prop": "orderCode",
                                            "label": "单据编号",
                                            "width": "200",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "2_item_config_lthzzffb"
                                        },
                                        {
                                          "attr": {
                                            "prop": "planName",
                                            "label": "计划名称",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "3_item_config_lthzzffc"
                                        },
                                        {
                                          "attr": {
                                            "prop": "maker",
                                            "label": "编制人",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "4_item_config_lthzzffd"
                                        },
                                        {
                                          "attr": {
                                            "prop": "makerDate",
                                            "label": "编制时间",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_lthzzffe"
                                        },
                                        {
                                          "attr": {
                                            "prop": "submittor",
                                            "label": "提交人",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "6_item_config_lthzzfff"
                                        },
                                        {
                                          "attr": {
                                            "prop": "submitDate",
                                            "label": "提交时间",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "7_item_config_lthzzffg"
                                        }
                                      ],
                                      "columnSlots": [
                                        {
                                          "code": "purchaseMethod",
                                          "columRender": {
                                            "__nodeId": "columRender_ls9yqf64",
                                            "__nodeName": "columRender",
                                            "__nodeType": "renderNode",
                                            "__nodeOptions": {
                                              "renderType": "tag",
                                              "elementOptions": {
                                                "__nodeId": "tag_ls9yqf63",
                                                "__nodeName": "tag",
                                                "__nodeType": "columnNode",
                                                "__nodeOptions": {
                                                  "modelName": "",
                                                  "content": "标签",
                                                  "closable": false,
                                                  "hit": false,
                                                  "round": false,
                                                  "effect": "light",
                                                  "display": true,
                                                  "permissionSetting": ""
                                                },
                                                "__nodeEvent": {
                                                  "onValueRender": {
                                                    "type": "system",
                                                    "isOn": true,
                                                    "fn": "function onValueRenderFn(row) {\n                                                      const content = row.purchaseMethod\n                                                      let type = 'primary'\n                                                      switch (content) {\n                                                        case '内部采购':\n                                                          type = 'success'\n                                                          break;\n                                                        case '招标采购':\n                                                          type = ''\n                                                          break;\n                                                        case '战略采购':\n                                                          type = ''\n                                                          break;\n                                                        case '其他采购':\n                                                          type = 'success'\n                                                          break\n                                                        case '电商采购':\n                                                          type = 'danger'\n                                                          break\n                                                        default:\n                                                          type = 'primary'\n                                                          break\n                                                      }\n                                                      return { content, type }\n                                                    }"
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_tag_ls9yqf63",
                                                "__description": "标签"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_columRender_ls9yqf64",
                                            "__description": ""
                                          },
                                          "propName": "计划类型"
                                        }
                                      ],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeEvent": {
                                      "onMounted": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function onMountedFn(){\n                                          const { lastProject } = this.$globalVars.$context\n                                          const { filterPlanModel } = this.$dataModels\n                                          filterPlanModel.singleTable.orgId = [lastProject.id]\n                                          this.$currentInstance.exposed.model.tableLoading.value = true\n                                          this.$currentInstance.exposed.methods.loadData(true);\n                                          this.$currentInstance.exposed.model.tableLoading.value = false\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(row, column) {\n                                          this.$exposeds.get('tableReport_ls9yqf7f').model.tableLoading.value = true\n                                          const res = await this.$requestFns.queryurchasePlanItems({ id: row.id, orgId: row.orgId });\n\n                                          this.$exposeds.get('tableReport_ls9yqf7f').model.tableData.value = res.data\n                                          this.$exposeds.get('tableReport_ls9yqf7f').model.tableLoading.value = false\n\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_tableAsync_ls9yqf5a",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls9yqf59",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls9yqf58",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls9yqf4u",
                        "__description": ""
                      },
                      "dragButtonPosition": "bottom"
                    },
                    {
                      "tag": "item-3",
                      "isFixed": true,
                      "showDragButton": false,
                      "size": "230px",
                      "paddingSize": "large",
                      "clearPadding": [
                        "top",
                        "bottom"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls9yqf4v",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "panel",
                          "containerOptions": {
                            "__nodeId": "panel_ls9yqf5j",
                            "__nodeName": "panel",
                            "__nodeType": "baseNode",
                            "__nodeOptions": {
                              "showHeader": true,
                              "title": "选择物资信息",
                              "border": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_ls9yqf5k",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "tableReport",
                                  "elementOptions": {
                                    "__nodeId": "tableReport_ls9yqf7f",
                                    "__nodeName": "tableReport",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {
                                      "onSelectionChange": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnSelectionChange(rows){\n                                          this.$dataModels.selectRows.items = rows\n                                        }"
                                      },
                                      "onRowClick": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "async function fnRowClick(row, column){\n                                          const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                          ref._.setupState.toggleRowSelection(row)\n\n\n                                        }"
                                      }
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "requestFn": "",
                                      "columnConfigs": [
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "type": "selection",
                                            "label": "选择",
                                            "width": 60,
                                            "headerAlign": "center",
                                            "align": "center"
                                          },
                                          "id": "0_item_config_lthzzfhx"
                                        },
                                        {
                                          "attr": {
                                            "prop": "code",
                                            "label": "序号",
                                            "width": "60",
                                            "headerAlign": "center",
                                            "align": "center",
                                            "scopedSlot": "",
                                            "type": "index"
                                          },
                                          "id": "1_item_config_lthzzfhy"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialName",
                                            "label": "物资名称",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "2_item_config_lthzzfhz"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialModel",
                                            "label": "规格型号",
                                            "width": 150,
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "3_item_config_lthzzfi0"
                                        },
                                        {
                                          "attr": {
                                            "prop": "materialUnit",
                                            "label": "计量单位",
                                            "width": "80",
                                            "headerAlign": "center",
                                            "align": "left",
                                            "scopedSlot": ""
                                          },
                                          "id": "4_item_config_lthzzfi1"
                                        },
                                        {
                                          "attr": {
                                            "prop": "quantity",
                                            "label": "采购数量",
                                            "width": "100",
                                            "headerAlign": "center",
                                            "align": "right",
                                            "scopedSlot": ""
                                          },
                                          "id": "5_item_config_lthzzfi2"
                                        }
                                      ],
                                      "columnSlots": [],
                                      "columnHeaderSlots": [],
                                      "showSummary": false,
                                      "pagination": {
                                        "currentSize": 20,
                                        "pageSizes": [
                                          10,
                                          20,
                                          30,
                                          50
                                        ],
                                        "layout": "sizes, prev, pager, next, total"
                                      },
                                      "tableCodeRemark": "",
                                      "tableCode": "",
                                      "isCustom": false
                                    },
                                    "__nodeKey": "nodeKey_tableReport_ls9yqf7f",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_ls9yqf5k",
                                "__description": ""
                              },
                              "toolSlot": {
                                "__nodeId": "flexLine_ls9yqf5l",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls9yqf5l",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_panel_ls9yqf5j",
                            "__description": "选择物资信息"
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls9yqf4v",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-4",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_ls9yqf4w",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_ls9yqf5b",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_ls9yqf5d",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": false,
                                  "rightPadding": false,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_ls9yqf5e",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls9yqf5f",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": true,
                                            "content": "取消",
                                            "type": "primary",
                                            "text": false,
                                            "link": true,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                const { filterPlanModel} = this.$dataModels\n                                                filterPlanModel.singleTable.orderCode = ''\n                                                filterPlanModel.singleTable.orgId = 0\n                                                filterPlanModel.singleTable.planName = ''\n                                                filterPlanModel.singleTable.purchaseMethod = ''\n                                                this.$dataModels.selectRows.items = []\n                                                this.$exposeds.get('dialog_ls9yqgp7').model.dialogShow.value = false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls9yqf5f",
                                          "__description": "取消"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls9yqf5e",
                                      "__description": ""
                                    },
                                    {
                                      "__nodeId": "elementRender_ls9yqf5g",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_ls9yqf5h",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "确定",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "iconFont": "icon cs-common baocun"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName(){\n                                                const { selectRows,rdsFormModel} = this.$dataModels\n                                                const errData = selectRows.items.reduce((arr,row)=>{\n                                                  if (row.surplusQuantity <= 0){\n                                                    arr.push(row.materialName)\n                                                  }\n                                                  return arr\n                                                },[])\n                                                if (errData.length) {\n                                                  this.$vueGlobal.$message({\n                                                    type: 'warning',\n                                                    message: `物资${errData.join()}的剩余采购量不足,请重新选择`\n                                                  })\n                                                  return\n                                                }\n                                                const { orgId, id, taxRate, serviceType, orderType} = rdsFormModel.qReceive\n                                                selectRows.items.forEach(t => {\n                                                  t.orgId = orgId\n                                                  t.orderId = id\n                                                  t.serviceType = serviceType\n                                                  t.orderType = orderType\n                                                  if ([20, -21].includes(rdsFormModel.qReceive.serviceType)) {\n                                                    t.taxRate = 0\n                                                  } else {\n                                                    t.taxRate = taxRate || 0\n                                                  }\n                                                  t.oriMaterialId = t.oriMaterialId || ''\n                                                })\n\n                                                this.$exposeds.get('tableEdit_lsa5e7x9').methods.growData('planSource', selectRows.items);\n                                                this.$sharedFns.resetSortCode('rds');\n                                                this.$sharedFns.resetEditPageBtnState('rds');\n                                                this.$exposeds.get('dialog_ls9yqgp7').model.dialogShow.value   =false\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_ls9yqf5h",
                                          "__description": "确定"
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_ls9yqf5g",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_ls9yqf5d",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_ls9yqf5b",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_ls9yqf4w",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_ls9yqgp8",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_ls9yqgp7",
            "__description": "采购计划选材框",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n                  const { filterPlanModel} = this.$dataModels\n                  filterPlanModel.singleTable.orderCode = ''\n                  filterPlanModel.singleTable.orgId = 0\n                  filterPlanModel.singleTable.planName = ''\n                  filterPlanModel.singleTable.purchaseMethod = ''\n                  this.$dataModels.selectRows.items = []\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_lta29tkc",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "",
              "title": "凭证预览",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lta29tkd",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "400px",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lta29tke",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lta29rg1",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lta29rg2",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "image",
                                  "elementOptions": {
                                    "__nodeId": "image_lta29rg3",
                                    "__nodeName": "image",
                                    "__nodeType": "baseNode",
                                    "__nodeOptions": {
                                      "modelName": "",
                                      "content": "",
                                      "initialIndex": 0,
                                      "hideOnClickModal": false,
                                      "loading": "eager",
                                      "lazy": false,
                                      "alt": "",
                                      "previewSrcList": [],
                                      "fit": "",
                                      "display": true,
                                      "permissionSetting": ""
                                    },
                                    "__nodeEvent": {
                                      "onValueRender": {
                                        "type": "system",
                                        "isOn": true,
                                        "fn": "function onValueRenderFn(row){\n\n                                          this.$currentInstance.exposed.model.elementOption.value = {\n                                            content: this.$dataModels.currentPreviewImg.singleTable.src\n                                          };\n\n                                        }"
                                      }
                                    },
                                    "__nodeKey": "nodeKey_image_lta29rg3",
                                    "__description": "",
                                    "__nodeStyle": {
                                      "display": "block",
                                      "width": "100%",
                                      "height": "100%"
                                    }
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lta29rg2",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lta29rg1",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lta29tke",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lta29tkd",
                "__description": ""
              },
              "modal": true,
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lta29tkc",
            "__description": "凭证预览"
          },
          {
            "__nodeId": "dialog_lte5d1fw",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "采购合同选材框",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lte5d1fx",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": false,
                      "size": "",
                      "paddingSize": "base",
                      "clearPadding": [
                        "left",
                        "top",
                        "right",
                        "bottom"
                      ],
                      "contentType": "flexBox",
                      "defaultSlot": {
                        "__nodeId": "flexBox_lte5czft",
                        "__nodeName": "flexBox",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "display": true,
                          "permissionSetting": "",
                          "isRow": false,
                          "itemNum": 4,
                          "width": "100%",
                          "height": "100%",
                          "itemConfig": [
                            {
                              "tag": "item-1",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "",
                              "contentType": "container",
                              "paddingSize": "large",
                              "isHidden": false,
                              "defaultSlot": {
                                "__nodeId": "containerRender_lte5czfu",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_lte5czfy",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": true,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [
                                        "top",
                                        "bottom"
                                      ],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "flexLine",
                                      "defaultSlot": {
                                        "__nodeId": "flexLine_lte5d09k",
                                        "__nodeName": "flexLine",
                                        "__nodeType": "baseNode",
                                        "__nodeStyle": {},
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "leftWidth": "80%",
                                          "background": false,
                                          "leftPadding": true,
                                          "rightPadding": true,
                                          "paddingSize": "",
                                          "leftClearPadding": [
                                            "left"
                                          ],
                                          "rightClearPadding": [],
                                          "__activeSlot": "defaultSlot",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "elementRender_lte5d0o9",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "basisCommonSelect",
                                                "elementOptions": {
                                                  "__nodeId": "basisCommonSelect_lte5d0oa",
                                                  "__nodeName": "basisCommonSelect",
                                                  "__nodeType": "baseNode",
                                                  "__nodeEvent": {
                                                    "onClear": {
                                                      "type": "system",
                                                      "isOn": true,
                                                      "fn": "async function onFnClear(){\n\n                                                        this.$exposeds.get('tableAsync_lte5czg4').methods.loadData();\n\n\n                                                      }"
                                                    },
                                                    "onMounted": {
                                                      "type": "system",
                                                      "isOn": true,
                                                      "fn": "async function onMountedFn(){\n                                                        const { orgId, userId, tenantId, lastProject } = this.$globalVars.$context\n\n                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                          parameter: {\n                                                            \"url\": \"/ma3-contract/m-contract-supply-data-params\",\n                                                            \"basisDataType\": \"supplier\",\n                                                            \"orgId\": lastProject.id,\n                                                            \"fieldName\": \"supplierName\",\n                                                            \"condtionItems\": [],\n                                                            \"queryDataJson\": {}\n                                                          },\n                                                          defaultProps: {\n                                                            \"label\": \"supplierName\",\n                                                            \"value\": \"supplierId\",\n                                                            \"subLabel\": \"creditCode\",\n                                                            \"nextLabel\": \"nextLabel\"\n                                                          }\n                                                        };\n\n\n\n                                                      }"
                                                    },
                                                    "onSelectionChange": {
                                                      "type": "system",
                                                      "isOn": true,
                                                      "fn": "async function onFnSelectionChange(item){\n\n                                                        this.$exposeds.get('tableAsync_lte5czg4').methods.loadData();\n\n                                                      }"
                                                    }
                                                  },
                                                  "__nodeOptions": {
                                                    "defaultText": "",
                                                    "limit": 10,
                                                    "defaultProps": {
                                                      "label": "supplierName",
                                                      "subLabel": "creditCode",
                                                      "nextLabel": "nextLabel",
                                                      "value": "supplierId"
                                                    },
                                                    "width": "100%",
                                                    "dropdownHeight": "300px",
                                                    "dropdownWidth": "240px",
                                                    "clearable": true,
                                                    "placeholder": "请选择",
                                                    "searchPlaceholder": "请输入关键字搜索",
                                                    "disabled": false,
                                                    "searchEnable": true,
                                                    "parameter": {
                                                      "url": "",
                                                      "basisDataType": "supplier",
                                                      "orgId": 0,
                                                      "fieldName": "",
                                                      "condtionItems": [],
                                                      "queryDataJson": {}
                                                    },
                                                    "addButton": false,
                                                    "downloadIcon": false,
                                                    "size": "default",
                                                    "display": true,
                                                    "permissionSetting": "",
                                                    "modelName": "contractModel.singleTable.supplierId"
                                                  },
                                                  "__nodeKey": "nodeKey_basisCommonSelect_lte5d0oa",
                                                  "__description": "",
                                                  "__nodeStyle": {
                                                    "width": "200px"
                                                  }
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_lte5d0o9",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "elementRender_lte5d0t7",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "input",
                                                "elementOptions": {
                                                  "__nodeId": "input_lte5d0t8",
                                                  "__nodeName": "input",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "size": "default",
                                                    "plain": false,
                                                    "clearable": true,
                                                    "readonly": false,
                                                    "disabled": false,
                                                    "type": "text",
                                                    "placeholder": "请输入合同编号",
                                                    "modelName": "contractModel.singleTable.contractCode",
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeEvent": {},
                                                  "__nodeKey": "nodeKey_input_lte5d0t8",
                                                  "__description": "请输入合同编号",
                                                  "__nodeStyle": {
                                                    "width": "200px"
                                                  }
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_lte5d0t7",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "elementRender_lte5d0y5",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "input",
                                                "elementOptions": {
                                                  "__nodeId": "input_lte5d0y6",
                                                  "__nodeName": "input",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "size": "default",
                                                    "plain": false,
                                                    "clearable": true,
                                                    "readonly": false,
                                                    "disabled": false,
                                                    "type": "text",
                                                    "placeholder": "请输入物资名称",
                                                    "modelName": "contractModel.singleTable.materialName",
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeEvent": {},
                                                  "__nodeKey": "nodeKey_input_lte5d0y6",
                                                  "__description": "请输入物资名称",
                                                  "__nodeStyle": {
                                                    "width": "200px"
                                                  }
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_lte5d0y5",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "elementRender_lte5d1hr",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "input",
                                                "elementOptions": {
                                                  "__nodeId": "input_lte5d1hs",
                                                  "__nodeName": "input",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "size": "default",
                                                    "plain": false,
                                                    "clearable": true,
                                                    "readonly": false,
                                                    "disabled": false,
                                                    "type": "text",
                                                    "placeholder": "请输入规格型号",
                                                    "modelName": "contractModel.singleTable.materialModel",
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeEvent": {},
                                                  "__nodeKey": "nodeKey_input_lte5d1hs",
                                                  "__description": "请输入规格型号",
                                                  "__nodeStyle": {
                                                    "width": "200px"
                                                  }
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_lte5d1hr",
                                              "__description": ""
                                            }
                                          ],
                                          "rightSlot": [
                                            {
                                              "__nodeId": "elementRender_lte5d1mp",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "button",
                                                "elementOptions": {
                                                  "__nodeId": "button_lte5d1mq",
                                                  "__nodeName": "button",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "modelName": "",
                                                    "size": "default",
                                                    "plain": true,
                                                    "content": "查询",
                                                    "type": "info",
                                                    "text": false,
                                                    "link": false,
                                                    "round": false,
                                                    "circle": false,
                                                    "loading": false,
                                                    "disabled": false,
                                                    "display": true,
                                                    "permissionSetting": "",
                                                    "tooltip": false,
                                                    "tooltipEffect": "dark",
                                                    "tooltipContent": "显示的内容",
                                                    "tooltipPlacement": "bottom",
                                                    "iconFont": "icon cs-common search"
                                                  },
                                                  "__nodeEvent": {
                                                    "onClick": {
                                                      "type": "system",
                                                      "isOn": true,
                                                      "fn": "async function fnName(){\n\n                                                        this.$exposeds.get('tableAsync_lte5czg4').methods.loadData();\n                                                      }"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_button_lte5d1mq",
                                                  "__description": "查询"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_lte5d1mp",
                                              "__description": ""
                                            }
                                          ],
                                          "display": true,
                                          "permissionSetting": ""
                                        },
                                        "__nodeKey": "nodeKey_flexLine_lte5d09k",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_lte5czfy",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_lte5czfu",
                                "__description": ""
                              },
                              "dragButtonPosition": "bottom",
                              "clearPadding": [
                                "bottom"
                              ]
                            },
                            {
                              "tag": "item-2",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "240px",
                              "paddingSize": "large",
                              "clearPadding": [
                                "bottom"
                              ],
                              "contentType": "container",
                              "isHidden": false,
                              "defaultSlot": {
                                "__nodeId": "containerRender_lte5czfv",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_lte5czg0",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": true,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "element",
                                      "defaultSlot": {
                                        "__nodeId": "elementRender_lte5czg1",
                                        "__nodeName": "elementRender",
                                        "__nodeType": "renderNode",
                                        "__nodeOptions": {
                                          "renderType": "tableAsync",
                                          "elementOptions": {
                                            "__nodeId": "tableAsync_lte5czg4",
                                            "__nodeName": "tableAsync",
                                            "__nodeType": "baseNode",
                                            "__nodeOptions": {
                                              "display": true,
                                              "permissionSetting": "",
                                              "requestFn": "",
                                              "columnConfigs": [
                                                {
                                                  "attr": {
                                                    "prop": "code",
                                                    "type": "selection",
                                                    "label": "编码",
                                                    "width": 60,
                                                    "headerAlign": "center",
                                                    "align": "center"
                                                  },
                                                  "id": "0_item_config_ltfxcm6j"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "index",
                                                    "label": "序号",
                                                    "width": "60",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": "",
                                                    "type": "index"
                                                  },
                                                  "id": "1_item_config_ltfxcm6k"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "contractCode",
                                                    "label": "合同编号",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "2_item_config_ltfxcm6l"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "contractName",
                                                    "label": "合同名称",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "3_item_config_ltfxcm6m"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "supplierName",
                                                    "label": "供应单位",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "4_item_config_ltfxcm6n"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "purchaseMethod",
                                                    "label": "采购方式",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "5_item_config_ltfxcm6o"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialName",
                                                    "label": "物资名称",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "6_item_config_ltfxcm6p"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialModel",
                                                    "label": "规格型号",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "7_item_config_ltfxcm6q"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialUnit",
                                                    "label": "计量单位",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "8_item_config_ltfxcm6r"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "netQuantity",
                                                    "label": "数量",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "9_item_config_ltfxcm6s"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "taxRate",
                                                    "label": "税率",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "10_item_config_ltfxcm6t"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "taxFreePrice",
                                                    "label": "不含税单价",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "11_item_config_ltfxcm6u"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "taxIncludedPrice",
                                                    "label": "含税单价",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "12_item_config_ltfxcm6v"
                                                }
                                              ],
                                              "columnSlots": [],
                                              "columnHeaderSlots": [],
                                              "showSummary": false,
                                              "pagination": {
                                                "currentSize": 20,
                                                "pageSizes": [
                                                  10,
                                                  20,
                                                  30,
                                                  50
                                                ],
                                                "layout": "sizes, prev, pager, next, total"
                                              },
                                              "tableCodeRemark": "",
                                              "tableCode": "",
                                              "isCustom": false
                                            },
                                            "__nodeEvent": {
                                              "onLoadData": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function fnLoadData(params) {\n                                                  // 保留其他页数据\n                                                  this.$dataModels.selectRelaObj.otherPageSelect = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n                                                  this.$currentInstance.exposed.model.tableLoading.value = true\n                                                  const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n\n                                                  await this.$requestFns.queryPurchaseContractMaterial(params).then(data => {\n                                                    this.$currentInstance.exposed.model.tableData.value = data.data\n                                                    this.$currentInstance.exposed.model.tableLoading.value = false\n                                                  })\n\n\n                                                  // 处理勾选\n                                                  this.$currentInstance.exposed.model.tableData.value.rows.forEach(row => {\n                                                    let otherRow = {}\n                                                    let otherRowIndex = -1\n                                                    const exist = this.$dataModels.selectRelaObj.otherPageSelect.forEach((item, i) => {\n                                                      if (row.id === item.id) {\n                                                        otherRow = item\n                                                        otherRowIndex = i\n                                                      }\n                                                    })\n                                                    // 将本页存在的重新勾选\n                                                    if (otherRow.id) {\n                                                      this.$dataModels.selectRelaObj.otherPageSelect.splice(otherRowIndex, 1)\n                                                      ref._.setupState.toggleRowSelection(row)\n                                                    }\n                                                  })\n\n\n                                                }"
                                              },
                                              "onMounted": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function onMountedFn() {\n\n\n                                                  this.$currentInstance.exposed.methods.loadData();\n\n\n                                                }"
                                              },
                                              "onRowClick": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function fnRowClick(row, column) {\n                                                  row.taxRate = row.taxRate + '%'\n                                                  console.log('rowClick')\n                                                  const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                                  ref._.setupState.toggleRowSelection(row)\n                                                }"
                                              },
                                              "onSelectionChange": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function fnSelectionChange(rows){\n\n                                                  if (rows !== null) {\n                                                    this.$dataModels.selectRelaObj.selectRows = []\n                                                    this.$dataModels.selectRelaObj.selectRows = this.$dataModels.selectRelaObj.selectRows.concat(rows)\n                                                    this.$dataModels.selectRelaObj.items = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n\n                                                    this.$exposeds.get('tableOnly_lte5czg5').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                  }\n\n\n                                                }"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_tableAsync_lte5czg4",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_elementRender_lte5czg1",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_lte5czg0",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_lte5czfv",
                                "__description": ""
                              }
                            },
                            {
                              "tag": "item-3",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "240px",
                              "paddingSize": "large",
                              "clearPadding": [
                                "bottom"
                              ],
                              "contentType": "container",
                              "isHidden": false,
                              "permissionSetting": "",
                              "defaultSlot": {
                                "__nodeId": "containerRender_lte5czfw",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_lte5czg2",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": true,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "element",
                                      "defaultSlot": {
                                        "__nodeId": "elementRender_lte5czg3",
                                        "__nodeName": "elementRender",
                                        "__nodeType": "renderNode",
                                        "__nodeOptions": {
                                          "renderType": "tableOnly",
                                          "elementOptions": {
                                            "__nodeId": "tableOnly_lte5czg5",
                                            "__nodeName": "tableOnly",
                                            "__nodeType": "baseNode",
                                            "__nodeOptions": {
                                              "display": true,
                                              "permissionSetting": "",
                                              "requestFn": "",
                                              "columnConfigs": [
                                                {
                                                  "attr": {
                                                    "prop": "code",
                                                    "type": "index",
                                                    "label": "序号",
                                                    "width": 60,
                                                    "headerAlign": "center",
                                                    "align": "center"
                                                  },
                                                  "id": "0_item_config_ltft1dh7"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialName",
                                                    "label": "物资名称",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "1_item_config_ltft1dh8"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialModel",
                                                    "label": "规格型号",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "2_item_config_ltft1dh9"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialUnit",
                                                    "label": "计量单位",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "3_item_config_ltft1dha"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "op",
                                                    "label": "操作",
                                                    "width": "100",
                                                    "headerAlign": "center",
                                                    "align": "center",
                                                    "scopedSlot": "op",
                                                    "fixed": "right"
                                                  },
                                                  "id": "4_item_config_ltft1dhb"
                                                }
                                              ],
                                              "columnSlots": [
                                                {
                                                  "code": "op",
                                                  "columRender": {
                                                    "__nodeId": "columRender_ltf451w1",
                                                    "__nodeName": "columRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "button",
                                                      "elementOptions": {
                                                        "__nodeId": "button_ltf451w0",
                                                        "__nodeName": "button",
                                                        "__nodeType": "columnNode",
                                                        "__nodeOptions": {
                                                          "modelName": "",
                                                          "size": "small",
                                                          "plain": true,
                                                          "content": "删除",
                                                          "type": "danger",
                                                          "text": true,
                                                          "link": false,
                                                          "round": false,
                                                          "circle": false,
                                                          "loading": false,
                                                          "disabled": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "tooltip": false,
                                                          "tooltipEffect": "dark",
                                                          "tooltipContent": "显示的内容",
                                                          "tooltipPlacement": "bottom",
                                                          "icon": "Delete"
                                                        },
                                                        "__nodeEvent": {
                                                          "onClick": {
                                                            "type": "system",
                                                            "isOn": true,
                                                            "fn": "async function fnName(row, a) {\n                                                              console.log(row, a);\n\n                                                              let index = this.$dataModels.selectRelaObj.items.indexOf(row)\n\n                                                              this.$dataModels.selectRelaObj.items.splice(index, 1)\n                                                              this.$exposeds.get('tableOnly_lte5czg5').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                              const ref = this.$exposeds.get('tableAsync_lte5czg4').methods.getNativeRefs();\n                                                              // 移除上方表格数据,判断存在则只改本页勾选状态。不存在则修改其他页数据\n                                                              const existData = this.$exposeds.get('tableAsync_lte5czg4').model.tableData.value.rows.filter(item => {\n                                                                return item.id === row.id\n                                                              })\n                                                              if (existData.length) {\n                                                                ref._.setupState.toggleRowSelection(existData[0])\n                                                              } else {\n                                                                index = this.$dataModels.selectRelaObj.otherPageSelect.indexOf(row)\n                                                                this.$dataModels.selectRelaObj.otherPageSelect.splice(index, 1)\n                                                              }\n\n\n                                                            }"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_button_ltf451w0",
                                                        "__description": "删除"
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_columRender_ltf451w1",
                                                    "__description": ""
                                                  },
                                                  "propName": "操作"
                                                }
                                              ],
                                              "columnHeaderSlots": [],
                                              "showSummary": false,
                                              "pagination": {
                                                "currentSize": 20,
                                                "pageSizes": [
                                                  10,
                                                  20,
                                                  30,
                                                  50
                                                ],
                                                "layout": "sizes, prev, pager, next, total"
                                              },
                                              "defaultExpandAll": false,
                                              "rowKey": "id",
                                              "lazy": false,
                                              "treeProps": {
                                                "hasChildren": "hasChildren",
                                                "children": "children"
                                              },
                                              "expandRowKeys": [],
                                              "tableCodeRemark": "",
                                              "tableCode": "",
                                              "isCustom": false
                                            },
                                            "__nodeEvent": {},
                                            "__nodeKey": "nodeKey_tableOnly_lte5czg5",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_elementRender_lte5czg3",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_lte5czg2",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_lte5czfw",
                                "__description": ""
                              }
                            },
                            {
                              "tag": "item-4",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "",
                              "paddingSize": "large",
                              "clearPadding": [],
                              "contentType": "container",
                              "isHidden": false,
                              "permissionSetting": "",
                              "defaultSlot": {
                                "__nodeId": "containerRender_lte5czfx",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_ltf455de",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": false,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "flexLine",
                                      "defaultSlot": {
                                        "__nodeId": "flexLine_ltf457jt",
                                        "__nodeName": "flexLine",
                                        "__nodeType": "baseNode",
                                        "__nodeStyle": {},
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "leftWidth": "50%",
                                          "background": false,
                                          "leftPadding": true,
                                          "rightPadding": true,
                                          "paddingSize": "",
                                          "leftClearPadding": [],
                                          "rightClearPadding": [],
                                          "__activeSlot": "defaultSlot",
                                          "defaultSlot": [],
                                          "rightSlot": [
                                            {
                                              "__nodeId": "elementRender_ltf4583e",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "button",
                                                "elementOptions": {
                                                  "__nodeId": "button_ltf4583f",
                                                  "__nodeName": "button",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "modelName": "",
                                                    "size": "default",
                                                    "plain": false,
                                                    "content": "确定",
                                                    "type": "primary",
                                                    "text": false,
                                                    "link": false,
                                                    "round": false,
                                                    "circle": false,
                                                    "loading": false,
                                                    "disabled": false,
                                                    "display": true,
                                                    "permissionSetting": "",
                                                    "tooltip": false,
                                                    "tooltipEffect": "dark",
                                                    "tooltipContent": "显示的内容",
                                                    "tooltipPlacement": "bottom",
                                                    "icon": "CircleCheck"
                                                  },
                                                  "__nodeEvent": {
                                                    "onClick": {
                                                      "type": "system",
                                                      "isOn": true,
                                                      "fn": "async function fnName(){\n\n                                                        const { rdsFormModel } = this.$dataModels\n                                                        const { taxRate } = rdsFormModel.qReceive\n                                                        const arr = []\n\n\n                                                        this.$dataModels.selectRelaObj.items.forEach(t => {\n                                                          t.orgId = rdsFormModel.qReceive.orgId\n                                                          t.orderId = rdsFormModel.qReceive.id\n\n                                                          t.serviceType = rdsFormModel.qReceive.serviceType\n                                                          t.orderType = rdsFormModel.qReceive.orderType\n                                                          if ([20, -21].includes(rdsFormModel.qReceive.serviceType)) {\n                                                            t.taxRate = 0\n                                                            t.taxIncludedPrice = t.taxFreePrice\n                                                          } else {\n                                                            t.taxRate = taxRate ? taxRate : t.taxRate || 0\n                                                          }\n                                                          t.id = t.materialId\n\n                                                          arr.push(t)\n\n                                                        })\n\n\n                                                        this.$exposeds.get('tableEdit_lsa5e7x9').methods.growData('addSource', arr);\n\n                                                        this.$sharedFns.resetSortCode('rds');\n                                                        this.$sharedFns.resetEditPageBtnState('rds');\n                                                        this.$dataModels.selectRelaObj.items.length = 0\n\n                                                        this.$assemCore.setForm('selectRelaObj');\n                                                        this.$assemCore.setForm('contractModel');\n                                                        this.$exposeds.get('dialog_lte5d1fw').model.dialogShow.value = false;\n\n                                                      }"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_button_ltf4583f",
                                                  "__description": "确定"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_ltf4583e",
                                              "__description": ""
                                            }
                                          ],
                                          "display": true,
                                          "permissionSetting": ""
                                        },
                                        "__nodeKey": "nodeKey_flexLine_ltf457jt",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_ltf455de",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_lte5czfx",
                                "__description": ""
                              }
                            }
                          ]
                        },
                        "__nodeEvent": {},
                        "__nodeKey": "nodeKey_flexBox_lte5czft",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lte5d1fx",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lte5d1fw",
            "__description": "采购合同选材框",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n\n                  this.$dataModels.selectRelaObj.items.length = 0\n                  this.$assemCore.setForm('selectRelaObj');\n                  this.$assemCore.setForm('contractModel');\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_ltf44vtt",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "总控计划选材",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_ltf44vtu",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": false,
                      "size": "",
                      "paddingSize": "base",
                      "clearPadding": [],
                      "contentType": "flexBox",
                      "defaultSlot": {
                        "__nodeId": "flexBox_ltf47ffc",
                        "__nodeName": "flexBox",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "display": true,
                          "permissionSetting": "",
                          "isRow": false,
                          "itemNum": 4,
                          "width": "100%",
                          "height": "100%",
                          "itemConfig": [
                            {
                              "tag": "item-1",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "",
                              "contentType": "container",
                              "paddingSize": "large",
                              "isHidden": false,
                              "defaultSlot": {
                                "__nodeId": "containerRender_ltf47ffd",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_ltf48nal",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": true,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "flexLine",
                                      "defaultSlot": {
                                        "__nodeId": "flexLine_ltf49sux",
                                        "__nodeName": "flexLine",
                                        "__nodeType": "baseNode",
                                        "__nodeStyle": {},
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "leftWidth": "50%",
                                          "background": false,
                                          "leftPadding": true,
                                          "rightPadding": true,
                                          "paddingSize": "",
                                          "leftClearPadding": [
                                            "left",
                                            "right",
                                            "top",
                                            "bottom"
                                          ],
                                          "rightClearPadding": [
                                            "left",
                                            "top",
                                            "right",
                                            "bottom"
                                          ],
                                          "__activeSlot": "defaultSlot",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "elementRender_ltf49v62",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "input",
                                                "elementOptions": {
                                                  "__nodeId": "input_ltf49v63",
                                                  "__nodeName": "input",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "size": "default",
                                                    "plain": false,
                                                    "clearable": true,
                                                    "readonly": false,
                                                    "disabled": false,
                                                    "type": "text",
                                                    "placeholder": "请输入物资名称",
                                                    "modelName": "receiveInventory.singleTable.materialName",
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeEvent": {},
                                                  "__nodeKey": "nodeKey_input_ltf49v63",
                                                  "__description": "请输入物资名称"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_ltf49v62",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "elementRender_ltf49xh8",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "input",
                                                "elementOptions": {
                                                  "__nodeId": "input_ltf49xh9",
                                                  "__nodeName": "input",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "size": "default",
                                                    "plain": false,
                                                    "clearable": true,
                                                    "readonly": false,
                                                    "disabled": false,
                                                    "type": "text",
                                                    "placeholder": "请输入规格型号",
                                                    "modelName": "receiveInventory.singleTable.materialModel",
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeEvent": {},
                                                  "__nodeKey": "nodeKey_input_ltf49xh9",
                                                  "__description": "请输入规格型号"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_ltf49xh8",
                                              "__description": ""
                                            },
                                            {
                                              "__nodeId": "elementRender_ltgzxw3w",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "button",
                                                "elementOptions": {
                                                  "__nodeId": "button_ltgzxw3x",
                                                  "__nodeName": "button",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "modelName": "",
                                                    "size": "default",
                                                    "plain": true,
                                                    "content": "查询",
                                                    "type": "info",
                                                    "text": false,
                                                    "link": false,
                                                    "round": false,
                                                    "circle": false,
                                                    "loading": false,
                                                    "disabled": false,
                                                    "display": true,
                                                    "permissionSetting": "",
                                                    "tooltip": false,
                                                    "tooltipEffect": "dark",
                                                    "tooltipContent": "显示的内容",
                                                    "tooltipPlacement": "bottom",
                                                    "iconFont": "icon cs-common search"
                                                  },
                                                  "__nodeEvent": {
                                                    "onClick": {
                                                      "type": "system",
                                                      "isOn": true,
                                                      "fn": "async function fnName() {\n\n                                                        this.$exposeds.get('tableAsync_ltfrq9vf').methods.loadData();\n\n                                                      }"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_button_ltgzxw3x",
                                                  "__description": "查询"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_ltgzxw3w",
                                              "__description": ""
                                            }
                                          ],
                                          "rightSlot": [],
                                          "display": true,
                                          "permissionSetting": ""
                                        },
                                        "__nodeKey": "nodeKey_flexLine_ltf49sux",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_ltf48nal",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_ltf47ffd",
                                "__description": ""
                              },
                              "clearPadding": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ]
                            },
                            {
                              "tag": "item-2",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "240px",
                              "paddingSize": "large",
                              "clearPadding": [
                                "bottom",
                                "left",
                                "right"
                              ],
                              "contentType": "container",
                              "isHidden": false,
                              "defaultSlot": {
                                "__nodeId": "containerRender_ltf47ffe",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_ltf48plr",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": true,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "element",
                                      "defaultSlot": {
                                        "__nodeId": "elementRender_ltfrq9ve",
                                        "__nodeName": "elementRender",
                                        "__nodeType": "renderNode",
                                        "__nodeOptions": {
                                          "renderType": "tableAsync",
                                          "elementOptions": {
                                            "__nodeId": "tableAsync_ltfrq9vf",
                                            "__nodeName": "tableAsync",
                                            "__nodeType": "baseNode",
                                            "__nodeOptions": {
                                              "display": true,
                                              "permissionSetting": "",
                                              "requestFn": "",
                                              "columnConfigs": [
                                                {
                                                  "attr": {
                                                    "prop": "code",
                                                    "type": "selection",
                                                    "label": "编码",
                                                    "width": 60,
                                                    "headerAlign": "center",
                                                    "align": "center"
                                                  },
                                                  "id": "0_item_config_ltfxclms"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "code",
                                                    "label": "序号",
                                                    "width": "60",
                                                    "headerAlign": "center",
                                                    "align": "center",
                                                    "scopedSlot": "",
                                                    "type": "index"
                                                  },
                                                  "id": "1_item_config_ltfxclmt"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialName",
                                                    "label": "物资名称",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "2_item_config_ltfxclmu"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialModel",
                                                    "label": "规格型号",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "3_item_config_ltfxclmv"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialUnit",
                                                    "label": "计量单位",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "4_item_config_ltfxclmw"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "quantity",
                                                    "label": "计划量",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "5_item_config_ltfxclmx"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "alQuantity",
                                                    "label": "已验收量",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "6_item_config_ltfxclmy"
                                                }
                                              ],
                                              "columnSlots": [],
                                              "columnHeaderSlots": [],
                                              "showSummary": false,
                                              "pagination": {
                                                "currentSize": 20,
                                                "pageSizes": [
                                                  10,
                                                  20,
                                                  30,
                                                  50
                                                ],
                                                "layout": "sizes, prev, pager, next, total"
                                              },
                                              "tableCodeRemark": "",
                                              "tableCode": "",
                                              "isCustom": false
                                            },
                                            "__nodeEvent": {
                                              "onMounted": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function onMountedFn() {\n\n                                                  this.$currentInstance.exposed.methods.loadData();\n\n                                                }"
                                              },
                                              "onRowClick": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function fnRowClick(row, column) {\n\n                                                  const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n                                                  ref._.setupState.toggleRowSelection(row)\n\n                                                }"
                                              },
                                              "onLoadData": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function fnLoadData(params) {\n                                                  // 保留其他页数据\n                                                  this.$dataModels.selectRelaObj.otherPageSelect = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n                                                  this.$currentInstance.exposed.model.tableLoading.value = true\n                                                  const ref = this.$currentInstance.exposed.methods.getNativeRefs();\n\n\n                                                  const { orgId, lastProject } = this.$globalVars.$context\n\n                                                  this.$dataModels.receiveInventory.singleTable.lastOrgId = lastProject.id\n                                                  this.$dataModels.receiveInventory.singleTable.classId = 0\n                                                  this.$dataModels.receiveInventory.singleTable.orgId = orgId\n                                                  await this.$requestFns.queryReceiveGhPlanMaterials(params).then(data => {\n                                                    this.$currentInstance.exposed.model.tableData.value = data.data\n                                                    this.$currentInstance.exposed.model.tableLoading.value = false\n                                                  })\n\n\n                                                  // 处理勾选\n                                                  this.$currentInstance.exposed.model.tableData.value.rows.forEach(row => {\n                                                    let otherRow = {}\n                                                    let otherRowIndex = -1\n                                                    const exist = this.$dataModels.selectRelaObj.otherPageSelect.forEach((item, i) => {\n                                                      if (row.materialId === item.materialId) {\n                                                        otherRow = item\n                                                        otherRowIndex = i\n                                                      }\n                                                    })\n                                                    // 将本页存在的重新勾选\n                                                    if (otherRow.materialId) {\n                                                      this.$dataModels.selectRelaObj.otherPageSelect.splice(otherRowIndex, 1)\n                                                      ref._.setupState.toggleRowSelection(row)\n                                                    }\n                                                  })\n\n\n                                                }"
                                              },
                                              "onSelectionChange": {
                                                "type": "system",
                                                "isOn": true,
                                                "fn": "async function fnSelectionChange(rows) {\n\n                                                  if (rows !== null) {\n                                                    this.$dataModels.selectRelaObj.selectRows = []\n                                                    this.$dataModels.selectRelaObj.selectRows = this.$dataModels.selectRelaObj.selectRows.concat(rows)\n                                                    this.$dataModels.selectRelaObj.items = this.$dataModels.selectRelaObj.otherPageSelect.concat(this.$dataModels.selectRelaObj.selectRows)\n\n                                                    this.$exposeds.get('tableOnly_ltf4a4ep').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                  }\n\n                                                }"
                                              }
                                            },
                                            "__nodeKey": "nodeKey_tableAsync_ltfrq9vf",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_elementRender_ltfrq9ve",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_ltf48plr",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_ltf47ffe",
                                "__description": ""
                              }
                            },
                            {
                              "tag": "item-3",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "240px",
                              "paddingSize": "large",
                              "clearPadding": [
                                "bottom",
                                "left",
                                "right"
                              ],
                              "contentType": "container",
                              "isHidden": false,
                              "permissionSetting": "",
                              "defaultSlot": {
                                "__nodeId": "containerRender_ltf47hqj",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_ltf48rwx",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": true,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "element",
                                      "defaultSlot": {
                                        "__nodeId": "elementRender_ltf48rwy",
                                        "__nodeName": "elementRender",
                                        "__nodeType": "renderNode",
                                        "__nodeOptions": {
                                          "renderType": "tableOnly",
                                          "elementOptions": {
                                            "__nodeId": "tableOnly_ltf4a4ep",
                                            "__nodeName": "tableOnly",
                                            "__nodeType": "baseNode",
                                            "__nodeOptions": {
                                              "display": true,
                                              "permissionSetting": "",
                                              "requestFn": "",
                                              "columnConfigs": [
                                                {
                                                  "attr": {
                                                    "prop": "code",
                                                    "type": "index",
                                                    "label": "序号",
                                                    "width": 60,
                                                    "headerAlign": "center",
                                                    "align": "center"
                                                  },
                                                  "id": "0_item_config_ltfta3kf"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialName",
                                                    "label": "物资名称",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "1_item_config_ltfta3kg"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialModel",
                                                    "label": "规格型号",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "2_item_config_ltfta3kh"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "materialUnit",
                                                    "label": "计量单位",
                                                    "headerAlign": "center",
                                                    "align": "left",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "3_item_config_ltfta3ki"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "quantity",
                                                    "label": "计划量",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "4_item_config_ltfta3kj"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "alQuantity",
                                                    "label": "已验收量",
                                                    "width": 150,
                                                    "headerAlign": "center",
                                                    "align": "right",
                                                    "scopedSlot": ""
                                                  },
                                                  "id": "5_item_config_ltfta3kk"
                                                },
                                                {
                                                  "attr": {
                                                    "prop": "op",
                                                    "label": "操作",
                                                    "width": "100",
                                                    "headerAlign": "center",
                                                    "align": "center",
                                                    "scopedSlot": "op",
                                                    "fixed": "right"
                                                  },
                                                  "id": "6_item_config_ltfta3kl"
                                                }
                                              ],
                                              "columnSlots": [
                                                {
                                                  "code": "op",
                                                  "columRender": {
                                                    "__nodeId": "columRender_ltf4edxo",
                                                    "__nodeName": "columRender",
                                                    "__nodeType": "renderNode",
                                                    "__nodeOptions": {
                                                      "renderType": "button",
                                                      "elementOptions": {
                                                        "__nodeId": "button_ltf4edxn",
                                                        "__nodeName": "button",
                                                        "__nodeType": "columnNode",
                                                        "__nodeOptions": {
                                                          "modelName": "",
                                                          "size": "small",
                                                          "plain": true,
                                                          "content": "删除",
                                                          "type": "danger",
                                                          "text": true,
                                                          "link": false,
                                                          "round": false,
                                                          "circle": false,
                                                          "loading": false,
                                                          "disabled": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "tooltip": false,
                                                          "tooltipEffect": "dark",
                                                          "tooltipContent": "显示的内容",
                                                          "tooltipPlacement": "bottom",
                                                          "icon": "Delete"
                                                        },
                                                        "__nodeEvent": {
                                                          "onClick": {
                                                            "type": "system",
                                                            "isOn": true,
                                                            "fn": "async function fnName(row) {\n\n                                                              let index = this.$dataModels.selectRelaObj.items.indexOf(row)\n\n                                                              this.$dataModels.selectRelaObj.items.splice(index, 1)\n                                                              this.$exposeds.get('tableOnly_ltf4a4ep').model.tableData.value = this.$dataModels.selectRelaObj.items\n                                                              const ref = this.$exposeds.get('tableAsync_ltfrq9vf').methods.getNativeRefs();\n                                                              // 移除上方表格数据,判断存在则只改本页勾选状态。不存在则修改其他页数据\n                                                              debugger\n                                                              const existData = this.$exposeds.get('tableAsync_ltfrq9vf').model.tableData.value.rows.filter(item => {\n                                                                return item.materialId === row.materialId\n                                                              })\n                                                              if (existData.length) {\n                                                                ref._.setupState.toggleRowSelection(existData[0])\n                                                              } else {\n                                                                index = this.$dataModels.selectRelaObj.otherPageSelect.indexOf(row)\n                                                                this.$dataModels.selectRelaObj.otherPageSelect.splice(index, 1)\n                                                              }\n\n\n                                                            }"
                                                          }
                                                        },
                                                        "__nodeKey": "nodeKey_button_ltf4edxn",
                                                        "__description": "按钮"
                                                      }
                                                    },
                                                    "__nodeKey": "nodeKey_columRender_ltf4edxo",
                                                    "__description": ""
                                                  },
                                                  "propName": "操作"
                                                }
                                              ],
                                              "columnHeaderSlots": [],
                                              "showSummary": false,
                                              "pagination": {
                                                "currentSize": 20,
                                                "pageSizes": [
                                                  10,
                                                  20,
                                                  30,
                                                  50
                                                ],
                                                "layout": "sizes, prev, pager, next, total"
                                              },
                                              "defaultExpandAll": false,
                                              "rowKey": "id",
                                              "lazy": false,
                                              "treeProps": {
                                                "hasChildren": "hasChildren",
                                                "children": "children"
                                              },
                                              "expandRowKeys": [],
                                              "tableCodeRemark": "",
                                              "tableCode": "",
                                              "isCustom": false
                                            },
                                            "__nodeEvent": {},
                                            "__nodeKey": "nodeKey_tableOnly_ltf4a4ep",
                                            "__description": ""
                                          }
                                        },
                                        "__nodeKey": "nodeKey_elementRender_ltf48rwy",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_ltf48rwx",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_ltf47hqj",
                                "__description": ""
                              }
                            },
                            {
                              "tag": "item-4",
                              "isFixed": true,
                              "showDragButton": false,
                              "size": "",
                              "paddingSize": "large",
                              "clearPadding": [
                                "left",
                                "right"
                              ],
                              "contentType": "container",
                              "isHidden": false,
                              "permissionSetting": "",
                              "defaultSlot": {
                                "__nodeId": "containerRender_ltf47k1o",
                                "__nodeName": "containerRender",
                                "__nodeType": "renderNode",
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "renderType": "box",
                                  "containerOptions": {
                                    "__nodeId": "box_ltf48u83",
                                    "__nodeName": "box",
                                    "__nodeType": "baseNode",
                                    "__nodeEvent": {},
                                    "__nodeOptions": {
                                      "shadow": false,
                                      "border": false,
                                      "background": true,
                                      "paddingSize": "small",
                                      "clearPadding": [],
                                      "clearBorder": [],
                                      "height": "100%",
                                      "display": true,
                                      "permissionSetting": "",
                                      "contentType": "flexLine",
                                      "defaultSlot": {
                                        "__nodeId": "flexLine_ltf49hb9",
                                        "__nodeName": "flexLine",
                                        "__nodeType": "baseNode",
                                        "__nodeStyle": {},
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "leftWidth": "50%",
                                          "background": false,
                                          "leftPadding": true,
                                          "rightPadding": true,
                                          "paddingSize": "",
                                          "leftClearPadding": [],
                                          "rightClearPadding": [],
                                          "__activeSlot": "defaultSlot",
                                          "defaultSlot": [],
                                          "rightSlot": [
                                            {
                                              "__nodeId": "elementRender_ltf49lxi",
                                              "__nodeName": "elementRender",
                                              "__nodeType": "renderNode",
                                              "__nodeOptions": {
                                                "renderType": "button",
                                                "elementOptions": {
                                                  "__nodeId": "button_ltf49lxj",
                                                  "__nodeName": "button",
                                                  "__nodeType": "baseNode",
                                                  "__nodeOptions": {
                                                    "modelName": "",
                                                    "size": "default",
                                                    "plain": false,
                                                    "content": "确定",
                                                    "type": "primary",
                                                    "text": false,
                                                    "link": false,
                                                    "round": false,
                                                    "circle": false,
                                                    "loading": false,
                                                    "disabled": false,
                                                    "display": true,
                                                    "permissionSetting": "",
                                                    "tooltip": false,
                                                    "tooltipEffect": "dark",
                                                    "tooltipContent": "显示的内容",
                                                    "tooltipPlacement": "bottom",
                                                    "icon": "CircleCheckFilled"
                                                  },
                                                  "__nodeEvent": {
                                                    "onClick": {
                                                      "type": "system",
                                                      "isOn": true,
                                                      "fn": "async function fnName() {\n                                                        const { rdsFormModel } = this.$dataModels\n                                                        const { taxRate } = rdsFormModel.qReceive\n                                                        const arr = []\n                                                        if (this.$dataModels.selectRelaObj.items && this.$dataModels.selectRelaObj.items.length > 0) {\n                                                          this.$dataModels.selectRelaObj.items.forEach(item => {\n                                                            item.orgId = rdsFormModel.qReceive.orgId\n                                                            item.orderId = rdsFormModel.qReceive.id\n                                                            item.serviceType = rdsFormModel.qReceive.serviceType\n                                                            item.orderType = rdsFormModel.qReceive.orderType\n                                                            item.taxFreePrice = 0\n                                                            item.taxIncludedPrice = 0\n                                                            if ([20, -21].includes(rdsFormModel.qReceive.serviceType)) {\n                                                              item.taxRate = 0\n                                                            } else {\n                                                              item.taxRate = taxRate || 0\n                                                            }\n                                                            item.netQuantity = item.quantity - item.alQuantity > 0 ? item.quantity - item.alQuantity : 0\n                                                            item.id = item.materialId\n\n\n                                                            arr.push(item)\n\n                                                          })\n                                                        }\n                                                        // 验收卡控逻辑\n                                                        // const newRows = await this.$sharedFns.editReceiveControl(arr);\n\n                                                        this.$exposeds.get('tableEdit_lsa5e7x9').methods.growData('addSource', arr);\n                                                        this.$sharedFns.resetSortCode('rds');\n                                                        this.$sharedFns.resetEditPageBtnState('rds');\n                                                        this.$dataModels.selectRelaObj.items.length = 0\n                                                        this.$dataModels.selectRelaObj.otherPageSelect.length = 0\n                                                        this.$assemCore.setForm('selectRelaObj');\n                                                        this.$assemCore.setForm('receiveInventory');\n                                                        this.$exposeds.get('dialog_ltf44vtt').model.dialogShow.value = false;\n\n\n                                                      }"
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_button_ltf49lxj",
                                                  "__description": "确定"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_elementRender_ltf49lxi",
                                              "__description": ""
                                            }
                                          ],
                                          "display": true,
                                          "permissionSetting": ""
                                        },
                                        "__nodeKey": "nodeKey_flexLine_ltf49hb9",
                                        "__description": ""
                                      }
                                    },
                                    "__nodeKey": "nodeKey_box_ltf48u83",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_containerRender_ltf47k1o",
                                "__description": ""
                              }
                            }
                          ]
                        },
                        "__nodeEvent": {},
                        "__nodeKey": "nodeKey_flexBox_ltf47ffc",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_ltf44vtu",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_ltf44vtt",
            "__description": "总控计划选材框",
            "__nodeEvent": {
              "onClose": {
                "type": "system",
                "isOn": true,
                "fn": "async function fnName(){\n\n                  this.$dataModels.selectRelaObj.items.length = 0\n                  this.$assemCore.setForm('selectRelaObj');\n\n                  this.$assemCore.setForm('receiveInventory');\n                }"
              }
            }
          },
          {
            "__nodeId": "dialog_lu9dagdy",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "35%",
              "title": "高拍仪拍照",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lu9dagdz",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 2,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lu9dage0",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lu9dadzj",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "element",
                              "defaultSlot": {
                                "__nodeId": "elementRender_lu9dadzk",
                                "__nodeName": "elementRender",
                                "__nodeType": "renderNode",
                                "__nodeOptions": {
                                  "renderType": "webCamera",
                                  "elementOptions": {
                                    "__nodeId": "webCamera_lu9dadzl",
                                    "__nodeName": "webCamera",
                                    "__nodeType": "baseNode",
                                    "__nodeStyle": {
                                      "width": "100%",
                                      "height": "100%"
                                    },
                                    "__nodeOptions": {
                                      "display": true,
                                      "permissionSetting": "",
                                      "width": 4000,
                                      "height": 2000
                                    },
                                    "__nodeEvent": {},
                                    "__nodeKey": "nodeKey_webCamera_lu9dadzl",
                                    "__description": ""
                                  }
                                },
                                "__nodeKey": "nodeKey_elementRender_lu9dadzk",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lu9dadzj",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lu9dage0",
                        "__description": ""
                      }
                    },
                    {
                      "tag": "item-2",
                      "isFixed": false,
                      "showDragButton": false,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "top"
                      ],
                      "contentType": "container",
                      "isHidden": false,
                      "permissionSetting": "",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lu9dadzd",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeEvent": {},
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lu9dadze",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": true,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [
                                "left",
                                "top",
                                "right",
                                "bottom"
                              ],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexLine",
                              "defaultSlot": {
                                "__nodeId": "flexLine_lu9dadzg",
                                "__nodeName": "flexLine",
                                "__nodeType": "baseNode",
                                "__nodeStyle": {},
                                "__nodeEvent": {},
                                "__nodeOptions": {
                                  "leftWidth": "50%",
                                  "background": false,
                                  "leftPadding": true,
                                  "rightPadding": true,
                                  "paddingSize": "",
                                  "leftClearPadding": [],
                                  "rightClearPadding": [],
                                  "__activeSlot": "defaultSlot",
                                  "defaultSlot": [],
                                  "rightSlot": [
                                    {
                                      "__nodeId": "elementRender_lu9dadzh",
                                      "__nodeName": "elementRender",
                                      "__nodeType": "renderNode",
                                      "__nodeOptions": {
                                        "renderType": "button",
                                        "elementOptions": {
                                          "__nodeId": "button_lu9dadzi",
                                          "__nodeName": "button",
                                          "__nodeType": "baseNode",
                                          "__nodeOptions": {
                                            "modelName": "",
                                            "size": "default",
                                            "plain": false,
                                            "content": "拍照",
                                            "type": "primary",
                                            "text": false,
                                            "link": false,
                                            "round": false,
                                            "circle": false,
                                            "loading": false,
                                            "disabled": false,
                                            "display": true,
                                            "permissionSetting": "",
                                            "tooltip": false,
                                            "tooltipEffect": "dark",
                                            "tooltipContent": "显示的内容",
                                            "tooltipPlacement": "bottom",
                                            "icon": "CameraFilled"
                                          },
                                          "__nodeEvent": {
                                            "onClick": {
                                              "type": "system",
                                              "isOn": true,
                                              "fn": "async function fnName() {\n\n                                                const { orgId } = this.$globalVars.$context\n\n                                                this.$exposeds.get('dialog_lu9dagdy').model.dialogShow.value = false\n                                                const data = this.$exposeds.get('webCamera_lu9dadzl').methods.getPhotoBase64();\n                                                const result = await this.$requestFns.uploadGpy({ file: data, fileName: Math.random().toString(36).slice(-8) + '.png' });\n                                                if (result.data.success) {\n                                                  const photoObj = {\n                                                    photoUrl: data,\n                                                    index: this.$exposeds.get('listOnly_lu9dadz5').model.listData.value.length + 1\n                                                  }\n                                                  if (data) {\n                                                    this.$dataModels.rdsFormModel.qReceiveGpys.push({\n                                                      gpyPhotoUrl: result.data.fileKey,\n                                                      orgId: this.$dataModels.rdsFormModel.qReceive.orgId\n                                                    })\n                                                    this.$exposeds.get('listOnly_lu9dadz5').model.listData.value.push(photoObj)\n                                                    this.$exposeds.get('image_lu9dadzc').model.elementOption.value = {\n                                                      content: data\n                                                    }\n                                                  } else {\n                                                    this.$vueGlobal.$message({\n                                                      type: 'error',\n                                                      message: '上传失败！'\n                                                    })\n                                                  }\n                                                } else {\n                                                  this.$vueGlobal.$message({\n                                                    type: 'error',\n                                                    message: '上传失败！'\n                                                  })\n                                                }\n                                              }"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_button_lu9dadzi",
                                          "__description": ""
                                        }
                                      },
                                      "__nodeKey": "nodeKey_elementRender_lu9dadzh",
                                      "__description": ""
                                    }
                                  ],
                                  "display": true,
                                  "permissionSetting": ""
                                },
                                "__nodeKey": "nodeKey_flexLine_lu9dadzg",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lu9dadze",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lu9dadzd",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lu9dagdz",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lu9dagdy",
            "__description": ""
          }
        ],
        "drawerOptions": []
      },
      "__nodeKey": "nodeKey_views_ls9sa6fr",
      "__description": "直收直发编辑"
    },
    "receiveDetail": {
      "__nodeId": "views_lra2glni",
      "__nodeName": "views",
      "__nodeType": "baseNode",
      "__nodeEvent": {},
      "__nodeOptions": {
        "planeOptions": {
          "__nodeId": "plane_lra2glnj",
          "__nodeName": "plane",
          "__nodeType": "baseNode",
          "__nodeEvent": {},
          "__nodeOptions": {
            "isShowNav": true,
            "navigationOptions": {
              "__nodeId": "navigationBar_lra2glnk",
              "__nodeName": "navigationBar",
              "__nodeType": "baseNode",
              "__nodeEvent": {},
              "__nodeOptions": {
                "defaultSlot": [
                  {
                    "__nodeId": "elementRender_lra2glnl",
                    "__nodeName": "elementRender",
                    "__nodeType": "renderNode",
                    "__nodeOptions": {
                      "renderType": "button",
                      "elementOptions": {
                        "__nodeId": "button_lra2glnm",
                        "__nodeName": "button",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "size": "default",
                          "plain": false,
                          "content": "关闭",
                          "type": "primary",
                          "text": true,
                          "link": false,
                          "round": false,
                          "circle": false,
                          "loading": false,
                          "disabled": false
                        },
                        "__nodeEvent": {
                          "onMounted": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          },
                          "onClick": {
                            "isOn": true,
                            "fn": "async function(){\n\n                              this.$globalVars.$router.push({path:\"/\"})\n\n                            }"
                          },
                          "onChange": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          }
                        },
                        "__nodeKey": "nodeKey_button_lra2glnm",
                        "__description": "关闭"
                      }
                    },
                    "__nodeKey": "nodeKey_elementRender_lra2glnl",
                    "__description": ""
                  }
                ],
                "display": true,
                "isSysRouter": true,
                "permissionSetting": "",
                "routers": [
                  {
                    "title": "详情",
                    "to": "/"
                  }
                ]
              },
              "__nodeKey": "nodeKey_navigationBar_lra2glnk",
              "__description": ""
            },
            "flexBoxOptions": {
              "__nodeId": "flexBox_lra2glnr",
              "__nodeName": "flexBox",
              "__nodeType": "baseNode",
              "__nodeOptions": {
                "display": true,
                "permissionSetting": "",
                "isRow": false,
                "itemNum": 4,
                "width": "100%",
                "height": "100%",
                "itemConfig": [
                  {
                    "tag": "item-1",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "base",
                    "clearPadding": [
                      "bottom"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrh61mse",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "dynamicDescription",
                        "containerOptions": {
                          "__nodeId": "dynamicDescription_lrh61o79",
                          "__nodeName": "dynamicDescription",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "descCode": "qReceiveOrderMessage",
                            "title": "单据信息",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "size": "small",
                            "description": true,
                            "layout": {
                              "tag": "div",
                              "gutter": 0,
                              "justify": "start",
                              "align": ""
                            },
                            "display": true,
                            "permissionSetting": "",
                            "descItems": [
                              {
                                "name": "orgName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pysh",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pysi",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.orgName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pysi",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pysh",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "orderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltls39tn",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltls39to",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.orderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltls39to",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltls39tn",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "exitTime",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pysj",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pysk",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.exitTime",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pysk",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pysj",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "originalOrderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pysl",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pysm",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.originalOrderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pysm",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pysl",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "plateNumber",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pysn",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pyso",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.plateNumber",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pyso",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pysn",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "purchaseMethod",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pysp",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pysq",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.purchaseMethod",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pysq",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pysp",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "supplierName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pysr",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pyss",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.supplierName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pyss",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pysr",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "settlementName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pyst",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pysu",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.settlementName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pysu",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pyst",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "remark",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrh6pysv",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrh6pysw",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "receiveFormModel.qReceive.remark",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrh6pysw",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrh6pysv",
                                  "__description": ""
                                }
                              }
                            ],
                            "toolLeftWidth": "50%",
                            "toolLeftPadding": false,
                            "toolLeftClearPadding": [],
                            "toolRightPadding": false,
                            "toolRightClearPadding": [],
                            "toolLeftSlot": [],
                            "toolRightSlot": [],
                            "labelWidth": "80px"
                          },
                          "__nodeEvent": {},
                          "__nodeKey": "nodeKey_dynamicDescription_lrh61o79",
                          "__description": "收料详情主表"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrh61mse",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-2",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "bottom"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lra2glnt",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lra2glny",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "材料清单",
                            "border": false,
                            "paddingSize": "base",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lra2glnz",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableReport",
                                "elementOptions": {
                                  "__nodeId": "tableReport_lra2glog",
                                  "__nodeName": "tableReport",
                                  "__nodeType": "baseNode",
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        this.$currentInstance.exposed.model.tableData.value = this.$dataModels.receiveFormModel.qReceiveMoreMaterials\n\n\n                                      }"
                                    }
                                  },
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "columnConfigs": [
                                      {
                                        "attr": {
                                          "prop": "id",
                                          "label": "选择"
                                        },
                                        "id": "0_item_config_lu6z2tms"
                                      },
                                      {
                                        "attr": {
                                          "prop": "orgId",
                                          "label": "序号",
                                          "type": "index"
                                        },
                                        "id": "1_item_config_lu6z2tmt"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialName",
                                          "label": "物资名称"
                                        },
                                        "id": "2_item_config_lu6z2tmu"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialModel",
                                          "label": "规格型号"
                                        },
                                        "id": "3_item_config_lu6z2tmv"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialUnit",
                                          "label": "计量单位"
                                        },
                                        "id": "4_item_config_lu6z2tmw"
                                      },
                                      {
                                        "attr": {
                                          "prop": "netQuantity",
                                          "label": "收料数量"
                                        },
                                        "id": "5_item_config_lu6z2tmx"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxRate",
                                          "label": "税率(%)"
                                        },
                                        "id": "6_item_config_lu6z2tmy"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxIncludedPrice",
                                          "label": "含税单价(元)"
                                        },
                                        "id": "7_item_config_lu6z2tmz"
                                      },
                                      {
                                        "attr": {
                                          "prop": "freight",
                                          "label": "运费(元)"
                                        },
                                        "id": "8_item_config_lu6z2tn0"
                                      },
                                      {
                                        "attr": {
                                          "prop": "manufacturer",
                                          "label": "生产厂商"
                                        },
                                        "id": "9_item_config_lu6z2tn1"
                                      },
                                      {
                                        "attr": {
                                          "prop": "batchNo",
                                          "label": "炉批号"
                                        },
                                        "id": "10_item_config_lu6z2tn2"
                                      },
                                      {
                                        "attr": {
                                          "prop": "storagePlace",
                                          "label": "存放地"
                                        },
                                        "id": "11_item_config_lu6z2tn3"
                                      },
                                      {
                                        "attr": {
                                          "prop": "testReportNo",
                                          "label": "实验报告号"
                                        },
                                        "id": "12_item_config_lu6z2tn4"
                                      },
                                      {
                                        "attr": {
                                          "prop": "acceptanceRecord",
                                          "label": "验收情况记录"
                                        },
                                        "id": "13_item_config_lu6z2tn5"
                                      },
                                      {
                                        "attr": {
                                          "prop": "qualityCertificate",
                                          "label": "质量证明文件"
                                        },
                                        "id": "14_item_config_lu6z2tn6"
                                      },
                                      {
                                        "attr": {
                                          "prop": "remark",
                                          "label": "材料备注"
                                        },
                                        "id": "15_item_config_lu6z2tn7"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialCode",
                                          "label": "物资编码"
                                        },
                                        "id": "16_item_config_lu6z2tn8"
                                      },
                                      {
                                        "attr": {
                                          "prop": "auxiliaryUnit",
                                          "label": "辅单位"
                                        },
                                        "id": "17_item_config_lu6z2tn9"
                                      },
                                      {
                                        "attr": {
                                          "prop": "classFullId",
                                          "label": "材料类别fullId"
                                        },
                                        "id": "18_item_config_lu6z2tna"
                                      },
                                      {
                                        "attr": {
                                          "prop": "roughQuantity",
                                          "label": "毛重"
                                        },
                                        "id": "19_item_config_lu6z2tnb"
                                      },
                                      {
                                        "attr": {
                                          "prop": "conversionRate",
                                          "label": "转化率"
                                        },
                                        "id": "20_item_config_lu6z2tnc"
                                      },
                                      {
                                        "attr": {
                                          "prop": "deductRate",
                                          "label": "扣率"
                                        },
                                        "id": "21_item_config_lu6z2tnd"
                                      },
                                      {
                                        "attr": {
                                          "prop": "deductQuantity",
                                          "label": "扣吨"
                                        },
                                        "id": "22_item_config_lu6z2tne"
                                      },
                                      {
                                        "attr": {
                                          "prop": "oriNetQuantity",
                                          "label": "原始净重"
                                        },
                                        "id": "23_item_config_lu6z2tnf"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialId",
                                          "label": "主材主键"
                                        },
                                        "id": "24_item_config_lu6z2tng"
                                      },
                                      {
                                        "attr": {
                                          "prop": "orderId",
                                          "label": "主表主键"
                                        },
                                        "id": "25_item_config_lu6z2tnh"
                                      },
                                      {
                                        "attr": {
                                          "prop": "auxiliaryNetQuantity",
                                          "label": "辅单位净重"
                                        },
                                        "id": "26_item_config_lu6z2tni"
                                      },
                                      {
                                        "attr": {
                                          "prop": "mainNetQuantity",
                                          "label": "净重主单位"
                                        },
                                        "id": "27_item_config_lu6z2tnj"
                                      },
                                      {
                                        "attr": {
                                          "prop": "itemBarCode",
                                          "label": null
                                        },
                                        "id": "28_item_config_lu6z2tnk"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxFreePrice",
                                          "label": null
                                        },
                                        "id": "29_item_config_lu6z2tnl"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accountOrderId",
                                          "label": null
                                        },
                                        "id": "30_item_config_lu6z2tnm"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accountor",
                                          "label": null
                                        },
                                        "id": "31_item_config_lu6z2tnn"
                                      },
                                      {
                                        "attr": {
                                          "prop": "classId",
                                          "label": "材料类别id"
                                        },
                                        "id": "32_item_config_lu6z2tno"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accountDate",
                                          "label": null
                                        },
                                        "id": "33_item_config_lu6z2tnp"
                                      },
                                      {
                                        "attr": {
                                          "prop": "isAccounted",
                                          "label": null
                                        },
                                        "id": "34_item_config_lu6z2tnq"
                                      },
                                      {
                                        "attr": {
                                          "prop": "oriMaterialId",
                                          "label": "材料信息varchar主键"
                                        },
                                        "id": "35_item_config_lu6z2tnr"
                                      },
                                      {
                                        "attr": {
                                          "prop": "skillCardNo",
                                          "label": null
                                        },
                                        "id": "36_item_config_lu6z2tns"
                                      },
                                      {
                                        "attr": {
                                          "prop": "purchaseMethodFullNames",
                                          "label": "采购方式全称"
                                        },
                                        "id": "37_item_config_lu6z2tnt"
                                      },
                                      {
                                        "attr": {
                                          "prop": "orderType",
                                          "label": null
                                        },
                                        "id": "38_item_config_lu6z2tnu"
                                      },
                                      {
                                        "attr": {
                                          "prop": "technicalRequest",
                                          "label": "技术要求"
                                        },
                                        "id": "39_item_config_lu6z2tnv"
                                      },
                                      {
                                        "attr": {
                                          "prop": "stockbinFullName",
                                          "label": "存放地"
                                        },
                                        "id": "40_item_config_lu6z2tnw"
                                      },
                                      {
                                        "attr": {
                                          "prop": "itemContractCode",
                                          "label": "合同编号"
                                        },
                                        "id": "41_item_config_lu6z2tnx"
                                      },
                                      {
                                        "attr": {
                                          "prop": "diffRemark",
                                          "label": "调差备注"
                                        },
                                        "id": "42_item_config_lu6z2tny"
                                      },
                                      {
                                        "attr": {
                                          "prop": "serviceType",
                                          "label": null
                                        },
                                        "id": "43_item_config_lu6z2tnz"
                                      },
                                      {
                                        "attr": {
                                          "prop": "labDeductRate",
                                          "label": "实验室测定扣率"
                                        },
                                        "id": "44_item_config_lu6z2to0"
                                      },
                                      {
                                        "attr": {
                                          "prop": "purchaseMethods",
                                          "label": "采购方式"
                                        },
                                        "id": "45_item_config_lu6z2to1"
                                      },
                                      {
                                        "attr": {
                                          "prop": "waybillWeight",
                                          "label": null
                                        },
                                        "id": "46_item_config_lu6z2to2"
                                      },
                                      {
                                        "attr": {
                                          "prop": "receivePrice",
                                          "label": null
                                        },
                                        "id": "47_item_config_lu6z2to3"
                                      },
                                      {
                                        "attr": {
                                          "prop": "labDeductQuantity",
                                          "label": "实验室测定扣重"
                                        },
                                        "id": "48_item_config_lu6z2to4"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialSpec",
                                          "label": "材料规格"
                                        },
                                        "id": "49_item_config_lu6z2to5"
                                      },
                                      {
                                        "attr": {
                                          "prop": "isRed",
                                          "label": null
                                        },
                                        "id": "50_item_config_lu6z2to6"
                                      },
                                      {
                                        "attr": {
                                          "prop": "sortCode",
                                          "label": null
                                        },
                                        "id": "51_item_config_lu6z2to7"
                                      },
                                      {
                                        "attr": {
                                          "prop": "isNew",
                                          "label": null
                                        },
                                        "id": "52_item_config_lu6z2to8"
                                      },
                                      {
                                        "attr": {
                                          "prop": "declarationState",
                                          "label": "报验情况"
                                        },
                                        "id": "53_item_config_lu6z2to9"
                                      },
                                      {
                                        "attr": {
                                          "prop": "submitDate",
                                          "label": null
                                        },
                                        "id": "54_item_config_lu6z2toa"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxFreeSum",
                                          "label": null
                                        },
                                        "id": "55_item_config_lu6z2tob"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxIncludedSum",
                                          "label": null
                                        },
                                        "id": "56_item_config_lu6z2toc"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxAmount",
                                          "label": null
                                        },
                                        "id": "57_item_config_lu6z2tod"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accountQuantity",
                                          "label": null
                                        },
                                        "id": "58_item_config_lu6z2toe"
                                      },
                                      {
                                        "attr": {
                                          "prop": "checkState",
                                          "label": null
                                        },
                                        "id": "59_item_config_lu6z2tof"
                                      },
                                      {
                                        "attr": {
                                          "prop": "priceType",
                                          "label": "价格类型,合同价调查价"
                                        },
                                        "id": "60_item_config_lu6z2tog"
                                      },
                                      {
                                        "attr": {
                                          "prop": "createdAt",
                                          "label": "创建时间"
                                        },
                                        "id": "61_item_config_lu6z2toh"
                                      },
                                      {
                                        "attr": {
                                          "prop": "updatedAt",
                                          "label": null
                                        },
                                        "id": "62_item_config_lu6z2toi"
                                      },
                                      {
                                        "attr": {
                                          "prop": "isRemoved",
                                          "label": "删除标记"
                                        },
                                        "id": "63_item_config_lu6z2toj"
                                      },
                                      {
                                        "attr": {
                                          "prop": "stockbinId",
                                          "label": "存放地id"
                                        },
                                        "id": "64_item_config_lu6z2tok"
                                      },
                                      {
                                        "attr": {
                                          "prop": "originalOrgId",
                                          "label": "原条码orgId"
                                        },
                                        "id": "65_item_config_lu6z2tol"
                                      },
                                      {
                                        "attr": {
                                          "prop": "oriStockbinId",
                                          "label": "存放地第三方id"
                                        },
                                        "id": "66_item_config_lu6z2tom"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accTaxRate",
                                          "label": "对账税率"
                                        },
                                        "id": "67_item_config_lu6z2ton"
                                      },
                                      {
                                        "attr": {
                                          "prop": "summaryId",
                                          "label": "收料汇总id"
                                        },
                                        "id": "68_item_config_lu6z2too"
                                      },
                                      {
                                        "attr": {
                                          "prop": "isVoid",
                                          "label": "是否作废"
                                        },
                                        "id": "69_item_config_lu6z2top"
                                      },
                                      {
                                        "attr": {
                                          "prop": "oriPlanId",
                                          "label": "采购计划id"
                                        },
                                        "id": "70_item_config_lu6z2toq"
                                      },
                                      {
                                        "attr": {
                                          "prop": "typeMark",
                                          "label": "原发料id"
                                        },
                                        "id": "71_item_config_lu6z2tor"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accTaxIncludedPrice",
                                          "label": "对账单价"
                                        },
                                        "id": "72_item_config_lu6z2tos"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accDeductQuantity",
                                          "label": "对账扣吨"
                                        },
                                        "id": "73_item_config_lu6z2tot"
                                      },
                                      {
                                        "attr": {
                                          "prop": "accDeductRate",
                                          "label": "对账扣率"
                                        },
                                        "id": "74_item_config_lu6z2tou"
                                      },
                                      {
                                        "attr": {
                                          "prop": "receiveType",
                                          "label": "单据类型"
                                        },
                                        "id": "75_item_config_lu6z2tov"
                                      },
                                      {
                                        "attr": {
                                          "prop": "itemContractId",
                                          "label": "合同id"
                                        },
                                        "id": "76_item_config_lu6z2tow"
                                      },
                                      {
                                        "attr": {
                                          "prop": "colVarchar_50No_01",
                                          "label": "字符串50-01"
                                        },
                                        "id": "77_item_config_lu6z2tox"
                                      },
                                      {
                                        "attr": {
                                          "prop": "colVarchar_50No_02",
                                          "label": "字符串50-02"
                                        },
                                        "id": "78_item_config_lu6z2toy"
                                      },
                                      {
                                        "attr": {
                                          "prop": "colVarchar_50No_03",
                                          "label": "字符串50-03"
                                        },
                                        "id": "79_item_config_lu6z2toz"
                                      },
                                      {
                                        "attr": {
                                          "prop": "colVarchar_50No_04",
                                          "label": "字符串50-04"
                                        },
                                        "id": "80_item_config_lu6z2tp0"
                                      },
                                      {
                                        "attr": {
                                          "prop": "colBigint_20No_01",
                                          "label": "整型-主键类-01"
                                        },
                                        "id": "81_item_config_lu6z2tp1"
                                      },
                                      {
                                        "attr": {
                                          "prop": "colBigint_20No_02",
                                          "label": "整型-主键类-02"
                                        },
                                        "id": "82_item_config_lu6z2tp2"
                                      }
                                    ],
                                    "columnSlots": [],
                                    "columnHeaderSlots": [],
                                    "showSummary": false,
                                    "pagination": {
                                      "currentSize": 20,
                                      "pageSizes": [
                                        10,
                                        20,
                                        30,
                                        50
                                      ],
                                      "layout": "sizes,prev,pager,next,total"
                                    },
                                    "tableCodeRemark": "",
                                    "tableCode": "qReceiveOrderItemTable",
                                    "isCustom": true
                                  },
                                  "__nodeKey": "nodeKey_tableReport_lra2glog",
                                  "__description": "收料详情材料table"
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lra2glnz",
                              "__description": ""
                            },
                            "toolSlot": null
                          },
                          "__nodeKey": "nodeKey_panel_lra2glny",
                          "__description": "材料清单"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lra2glnt",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-3",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "base",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrhiy8z9",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrhiy8za",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "凭证",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrfsjq4u",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lrfsjq4v",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": true,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lrq0m5x1",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lrq0u4pa",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lrq0u4pj",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lrq0u4pk",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            const idx = this.$dataModels.previewSrcList.items.findIndex(src => src == row._photoUrl) || 0\n                                                            return { content: row._photoUrl, previewSrcList: this.$dataModels.previewSrcList.items, initialIndex: idx }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lrq0u4pk",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "320px",
                                                        "height": "180px"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lrq0u4pj",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {
                                                "onValueRender": {
                                                  "isOn": true,
                                                  "fn": "function onValueRenderFn(row){\n                                                    return { content: row._photoUrl, previewSrcList: this.$dataModels.previewSrcList.items }\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_gridItem_lrq0u4pa",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "textAlign": "center",
                                                "display": "flex",
                                                "justifyContent": "center"
                                              }
                                            },
                                            {
                                              "__nodeId": "gridItem_lrq0u4pd",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lrq0u4pm",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "rawHtml",
                                                    "elementOptions": {
                                                      "__nodeId": "rawHtml_lrq0u4pn",
                                                      "__nodeName": "rawHtml",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "content": "<span style=\"\">rawTxt渲染文本</span>",
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "modelName": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row){\n                                                            return { content: `<div style=' text-align: center'> ${row.cameraPosition} 照片</div>` }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_rawHtml_lrq0u4pn",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lrq0u4pm",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrq0u4pd",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "textAlign": "center"
                                              }
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lrq0m5x1",
                                        "__description": "",
                                        "__nodeEvent": {},
                                        "__nodeStyle": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        // 当前代码编辑器下有效\n                                        // if(window.assemBoxIsEdit){ this.$currentInstance.exposed.model.listData.value= [{},{},{},{},{},{}];}\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.receiveFormModel.photos\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lrfsjq4v",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrfsjq4u",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrhiy8zc",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lrhiy8zc",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrhiy8za",
                          "__description": "出入库凭证"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrhiy8z9",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-4",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lu6z2dxe",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lu6z2g0f",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "高拍仪",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "toolSlot": {
                              "__nodeId": "flexLine_lu6z2g0h",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lu6z2g0h",
                              "__description": ""
                            },
                            "defaultSlot": {
                              "__nodeId": "elementRender_lu6z2jmk",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lu6z2jml",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": true,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lu6z2jmm",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lu6z2o7p",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "elementRender_lu71gb5s",
                                                  "__nodeName": "elementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lu71gb5t",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row){\n\n                                                            const idx = this.$dataModels.gpyPreviewList.items.findIndex(src => src == row.gpyPhotoUrl) || 0\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              content: row.gpyPhotoUrl\n                                                            };\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              previewSrcList: this.$dataModels.gpyPreviewList.items\n                                                            };\n\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              initialIndex: idx\n                                                            };\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lu71gb5t",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "100%",
                                                        "height": "106%"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_elementRender_lu71gb5s",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu6z2o7p",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lu6z2jmm",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        // 当前代码编辑器下有效\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.receiveFormModel.gpyPhotos\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lu6z2jml",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lu6z2jmk",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lu6z2g0f",
                          "__description": ""
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lu6z2dxe",
                      "__description": ""
                    }
                  }
                ]
              },
              "__nodeEvent": {
                "onMounted": {
                  "type": "system",
                  "isOn": false,
                  "fn": "async function onMountedFn(){\n\n                    const { query } = this.$globalVars.$router.currentRoute\n                    const {orgId,id} = query\n                    const { previewSrcList, receiveFormModel} = this.$dataModels\n                    const res = await this.$requestFns.getReceive({ orgId, id});\n\n                    const { qReceive, qReceiveMoreMaterials, qReceivePhotos } = res.data\n\n                    Object.assign(this.$dataModels.receiveFormModel.qReceive, qReceive)\n                    Object.assign(this.$dataModels.receiveFormModel.qReceiveMoreMaterials, qReceiveMoreMaterials)\n                    Object.assign(this.$dataModels.receiveFormModel.qReceivePhotos, qReceivePhotos)\n\n\n                    this.$exposeds.get('tableReport_lra2glog').model.tableData.value = this.$dataModels.receiveFormModel.qReceiveMoreMaterials\n                    console.log(qReceivePhotos);\n                    previewSrcList.items = []\n                    let keys = []\n                    res.data.qReceivePhotos.forEach(p => {\n                      p.photoUrl ? keys.push(p.photoUrl) : ''\n                    })\n                    if (keys.length) {\n                      const ps = await this.$sharedFns.downloadFile({ keys: keys });\n                      res.data.qReceivePhotos.forEach(t => {\n                        receiveFormModel.photos.push(Object.assign(t, { _photoUrl: ps[t.photoUrl] }))\n                        previewSrcList.items.push(ps[t.photoUrl])\n                      })\n                    }\n\n\n\n\n                  }"
                }
              },
              "__nodeKey": "nodeKey_flexBox_lra2glnr",
              "__description": "收料详情页面"
            }
          },
          "__nodeKey": "nodeKey_plane_lra2glnj",
          "__description": ""
        },
        "dialogOptions": [],
        "drawerOptions": []
      },
      "__nodeKey": "nodeKey_views_lra2glni",
      "__description": ""
    },
    "rdsDetail": {
      "__nodeId": "views_lrizo533",
      "__nodeName": "views",
      "__nodeType": "baseNode",
      "__nodeEvent": {},
      "__nodeOptions": {
        "planeOptions": {
          "__nodeId": "plane_lrizo534",
          "__nodeName": "plane",
          "__nodeType": "baseNode",
          "__nodeEvent": {},
          "__nodeOptions": {
            "isShowNav": true,
            "navigationOptions": {
              "__nodeId": "navigationBar_lrizo535",
              "__nodeName": "navigationBar",
              "__nodeType": "baseNode",
              "__nodeEvent": {},
              "__nodeOptions": {
                "defaultSlot": [
                  {
                    "__nodeId": "elementRender_lrizo536",
                    "__nodeName": "elementRender",
                    "__nodeType": "renderNode",
                    "__nodeOptions": {
                      "renderType": "button",
                      "elementOptions": {
                        "__nodeId": "button_lrizo537",
                        "__nodeName": "button",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "size": "default",
                          "plain": false,
                          "content": "关闭",
                          "type": "primary",
                          "text": true,
                          "link": false,
                          "round": false,
                          "circle": false,
                          "loading": false,
                          "disabled": false
                        },
                        "__nodeEvent": {
                          "onMounted": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          },
                          "onClick": {
                            "isOn": true,
                            "fn": "async function(){\n\n                              this.$globalVars.$router.push({path:\"/\"})\n\n                            }"
                          },
                          "onChange": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          }
                        },
                        "__nodeKey": "nodeKey_button_lrizo537",
                        "__description": "关闭"
                      }
                    },
                    "__nodeKey": "nodeKey_elementRender_lrizo536",
                    "__description": ""
                  }
                ],
                "display": true,
                "isSysRouter": true,
                "permissionSetting": "",
                "routers": [
                  {
                    "title": "详情",
                    "to": "/"
                  }
                ]
              },
              "__nodeKey": "nodeKey_navigationBar_lrizo535",
              "__description": ""
            },
            "flexBoxOptions": {
              "__nodeId": "flexBox_lrizo53c",
              "__nodeName": "flexBox",
              "__nodeType": "baseNode",
              "__nodeOptions": {
                "display": true,
                "permissionSetting": "",
                "isRow": false,
                "itemNum": 4,
                "width": "100%",
                "height": "100%",
                "itemConfig": [
                  {
                    "tag": "item-1",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "contentType": "container",
                    "paddingSize": "large",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrizo53d",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "dynamicDescription",
                        "containerOptions": {
                          "__nodeId": "dynamicDescription_lrizo53g",
                          "__nodeName": "dynamicDescription",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "descCode": "qRdsOrderMessage",
                            "title": "单据信息",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "size": "small",
                            "description": true,
                            "layout": {
                              "tag": "div",
                              "gutter": 0,
                              "justify": "start",
                              "align": ""
                            },
                            "display": true,
                            "permissionSetting": "",
                            "descItems": [
                              {
                                "name": "orgName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2l",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i2m",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceiveToDelivery.orgName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i2m",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2l",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "orderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltls39tv",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltls39tw",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceive.orderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltls39tw",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltls39tv",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "exitTime",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2n",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i2o",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceive.exitTime",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i2o",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2n",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "originalOrderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2p",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i2q",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceiveToDelivery.originalOrderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i2q",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2p",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "plateNumber",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2r",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i2s",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceive.plateNumber",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i2s",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2r",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "purchaseMethod",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2t",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i2u",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceive.purchaseMethod",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i2u",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2t",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "supplierName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2v",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i2w",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceive.supplierName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i2w",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2v",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "settlementName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2x",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i2y",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceive.settlementName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i2y",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2x",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "labourName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i2z",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i30",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qDelivery.labourName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i30",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i2z",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "teamName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i31",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i32",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qDelivery.teamName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i32",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i31",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "ghFullName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i33",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i34",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qDelivery.ghFullName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i34",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i33",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "remark",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i35",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i36",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "rdsFormModel.qReceiveToDelivery.remark",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i36",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i35",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "purchaseMethod#1",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i37",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i38",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i38",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i37",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "purchaseMethod#2",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrj14i39",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrj14i3a",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrj14i3a",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrj14i39",
                                  "__description": ""
                                }
                              }
                            ],
                            "toolLeftWidth": "50%",
                            "toolLeftPadding": false,
                            "toolLeftClearPadding": [],
                            "toolRightPadding": false,
                            "toolRightClearPadding": [],
                            "toolLeftSlot": [],
                            "toolRightSlot": [],
                            "labelWidth": "80px"
                          },
                          "__nodeEvent": {},
                          "__nodeKey": "nodeKey_dynamicDescription_lrizo53g",
                          "__description": "直进直出详情页信息面板"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrizo53d",
                      "__description": ""
                    },
                    "clearPadding": [
                      "bottom"
                    ]
                  },
                  {
                    "tag": "item-2",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "bottom"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrizo53e",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrizo53h",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "物资清单",
                            "border": false,
                            "paddingSize": "base",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrizo53i",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableReport",
                                "elementOptions": {
                                  "__nodeId": "tableReport_lrj14i3b",
                                  "__nodeName": "tableReport",
                                  "__nodeType": "baseNode",
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n\n                                        this.$currentInstance.exposed.model.tableData.value = this.$dataModels.rdsFormModel.qReceiveMoreMaterials\n                                      }"
                                    }
                                  },
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "columnConfigs": [
                                      {
                                        "attr": {
                                          "prop": "orgId",
                                          "label": "序号",
                                          "type": "index"
                                        },
                                        "id": "0_item_config_lu9ojpnh"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialName",
                                          "label": "物资名称"
                                        },
                                        "id": "1_item_config_lu9ojpni"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialModel",
                                          "label": "规格型号"
                                        },
                                        "id": "2_item_config_lu9ojpnj"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialUnit",
                                          "label": "计量单位"
                                        },
                                        "id": "3_item_config_lu9ojpnk"
                                      },
                                      {
                                        "attr": {
                                          "prop": "netQuantity",
                                          "label": "收/发料量"
                                        },
                                        "id": "4_item_config_lu9ojpnl"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxRate",
                                          "label": "税率(%)"
                                        },
                                        "id": "5_item_config_lu9ojpnm"
                                      },
                                      {
                                        "attr": {
                                          "prop": "taxIncludedPrice",
                                          "label": "含税单价(元)"
                                        },
                                        "id": "6_item_config_lu9ojpnn"
                                      },
                                      {
                                        "attr": {
                                          "prop": "freight",
                                          "label": "运费(元)"
                                        },
                                        "id": "7_item_config_lu9ojpno"
                                      },
                                      {
                                        "attr": {
                                          "prop": "storagePlace",
                                          "label": "存放地"
                                        },
                                        "id": "8_item_config_lu9ojpnp"
                                      },
                                      {
                                        "attr": {
                                          "prop": "testReportNo",
                                          "label": "实验报告号"
                                        },
                                        "id": "9_item_config_lu9ojpnq"
                                      },
                                      {
                                        "attr": {
                                          "prop": "skillCardNo",
                                          "label": "技证号"
                                        },
                                        "id": "10_item_config_lu9ojpnr"
                                      },
                                      {
                                        "attr": {
                                          "prop": "batchNo",
                                          "label": "炉批号"
                                        },
                                        "id": "11_item_config_lu9ojpns"
                                      },
                                      {
                                        "attr": {
                                          "prop": "acceptanceRecord",
                                          "label": "验收情况记录"
                                        },
                                        "id": "12_item_config_lu9ojpnt"
                                      },
                                      {
                                        "attr": {
                                          "prop": "manufacturer",
                                          "label": "生产厂商"
                                        },
                                        "id": "13_item_config_lu9ojpnu"
                                      },
                                      {
                                        "attr": {
                                          "prop": "remark",
                                          "label": "明细备注"
                                        },
                                        "id": "14_item_config_lu9ojpnv"
                                      }
                                    ],
                                    "columnSlots": [],
                                    "columnHeaderSlots": [],
                                    "showSummary": false,
                                    "pagination": {
                                      "currentSize": 20,
                                      "pageSizes": [
                                        10,
                                        20,
                                        30,
                                        50
                                      ],
                                      "layout": "sizes, prev, pager, next, total"
                                    },
                                    "tableCodeRemark": "",
                                    "tableCode": "qRdsOrderItemTable",
                                    "isCustom": true
                                  },
                                  "__nodeKey": "nodeKey_tableReport_lrj14i3b",
                                  "__description": "直进直出详情页明细表格"
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrizo53i",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrizo53j",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lrizo53j",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrizo53h",
                          "__description": "物资清单"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrizo53e",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-3",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrizo53f",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrizo53k",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "凭证",
                            "border": false,
                            "paddingSize": "base",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrizo53l",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lrj14i3c",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": true,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": false,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lrq6feda",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lrq6fee5",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lrq6feed",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lrq6fey8",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            const idx = this.$dataModels.previewSrcList.items.findIndex(src => src == row._photoUrl) || 0\n                                                            return { content: row._photoUrl, previewSrcList: this.$dataModels.previewSrcList.items, initialIndex: idx }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lrq6fey8",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "320px",
                                                        "height": "180px"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lrq6feed",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrq6fee5",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "textAlign": "center"
                                              }
                                            },
                                            {
                                              "__nodeId": "gridItem_lrq6fee3",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lrq6fee5",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "rawHtml",
                                                    "elementOptions": {
                                                      "__nodeId": "rawHtml_lrq6fee9",
                                                      "__nodeName": "rawHtml",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "content": "<span style=\"\">rawTxt渲染文本</span>",
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "modelName": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            return { content: `<div style=' text-align: center'> ${row.cameraPosition} 照片</div>` }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_rawHtml_lrq6fee9",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lrq6fee5",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrq6fee3",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "textAlign": "center"
                                              }
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lrq6feda",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        // 当前代码编辑器下有效\n                                        // if(window.assemBoxIsEdit){ this.$currentInstance.exposed.model.listData.value= [{},{}];}\n                                        console.log(this.$dataModels.rdsFormModel.photos);\n                                        debugger\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.rdsFormModel.photos\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lrj14i3c",
                                  "__description": "直进直出详情页图片"
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrizo53l",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrizo53m",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lrizo53m",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrizo53k",
                          "__description": "出入库凭证"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrizo53f",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-4",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lu9nzym1",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lu9nzznk",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "高拍仪",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lu9nzznl",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lu9o00p5",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": true,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lu9o00p6",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lu9o02fr",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu9ojpnx",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lu9op7wo",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row){\n\n                                                            const idx = this.$dataModels.gpyPreviewList.items.findIndex(src => src == row.gpyPhotoUrl) || 0\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              content: row.gpyPhotoUrl\n                                                            };\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              previewSrcList: this.$dataModels.gpyPreviewList.items\n                                                            };\n\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              initialIndex: idx\n                                                            };\n\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lu9op7wo",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "100%",
                                                        "height": "106%"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu9ojpnx",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu9o02fr",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lu9o00p6",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        // 当前代码编辑器下有效\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.rdsFormModel.gpyPhotos\n                                        // this.$currentInstance.exposed.model.listData.value  = [{},{}]\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lu9o00p5",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lu9nzznl",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lu9nzznm",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lu9nzznm",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lu9nzznk",
                          "__description": ""
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lu9nzym1",
                      "__description": ""
                    }
                  }
                ]
              },
              "__nodeEvent": {
                "onMounted": {
                  "type": "system",
                  "isOn": false,
                  "fn": "async function onMountedFn() {\n                    const { rdsFormModel, previewSrcList } = this.$dataModels\n                    previewSrcList.items = []\n                    const { query } = this.$globalVars.$router.currentRoute\n                    const { orgId, id } = query\n\n                    const res = await this.$requestFns.getRdsOrderItems({ orgId, id });\n\n                    const {\n                      qReceiveToDeliverys,\n                      qReceives,\n                      qReceiveMoreMaterials,\n                      qReceivePhotos,\n                      deliveryS\n                    } = res.data\n\n                    Object.assign(this.$dataModels.rdsFormModel.qReceiveToDelivery, qReceiveToDeliverys)\n                    Object.assign(this.$dataModels.rdsFormModel.qReceive, qReceives)\n                    Object.assign(this.$dataModels.rdsFormModel.qDelivery, deliveryS[0])\n                    Object.assign(this.$dataModels.rdsFormModel.qReceiveMoreMaterials, qReceiveMoreMaterials)\n\n                    rdsFormModel.photos = []\n                    rdsFormModel.materials = res.data.qReceiveMoreMaterials\n\n                    this.$exposeds.get('tableReport_lrj14i3b').model.tableData.value = this.$dataModels.rdsFormModel.qReceiveMoreMaterials\n                    console.log(qReceivePhotos);\n\n                    let keys = []\n                    res.data.qReceivePhotos.forEach(p => {\n                      p.photoUrl ? keys.push(p.photoUrl) : ''\n                    })\n                    if (keys.length) {\n                      const ps = await this.$sharedFns.downloadFile({ keys: keys });\n                      res.data.qReceivePhotos.forEach(t => {\n                        rdsFormModel.photos.push(Object.assign(t, { _photoUrl: ps[t.photoUrl] }))\n                        previewSrcList.items.push(ps[t.photoUrl])\n                      })\n                    }\n\n                  }"
                }
              },
              "__nodeKey": "nodeKey_flexBox_lrizo53c",
              "__description": ""
            }
          },
          "__nodeKey": "nodeKey_plane_lrizo534",
          "__description": ""
        },
        "dialogOptions": [],
        "drawerOptions": []
      },
      "__nodeKey": "nodeKey_views_lrizo533",
      "__description": "直进直出详情页面"
    },
    "deliveryDetail": {
      "__nodeId": "views_lrhj9f4o",
      "__nodeName": "views",
      "__nodeType": "baseNode",
      "__nodeEvent": {},
      "__nodeOptions": {
        "planeOptions": {
          "__nodeId": "plane_lrhj9f4p",
          "__nodeName": "plane",
          "__nodeType": "baseNode",
          "__nodeEvent": {},
          "__nodeOptions": {
            "isShowNav": true,
            "navigationOptions": {
              "__nodeId": "navigationBar_lrhj9f4q",
              "__nodeName": "navigationBar",
              "__nodeType": "baseNode",
              "__nodeEvent": {},
              "__nodeOptions": {
                "defaultSlot": [
                  {
                    "__nodeId": "elementRender_lrhj9f4r",
                    "__nodeName": "elementRender",
                    "__nodeType": "renderNode",
                    "__nodeOptions": {
                      "renderType": "button",
                      "elementOptions": {
                        "__nodeId": "button_lrhj9f4s",
                        "__nodeName": "button",
                        "__nodeType": "baseNode",
                        "__nodeOptions": {
                          "size": "default",
                          "plain": false,
                          "content": "关闭",
                          "type": "primary",
                          "text": true,
                          "link": false,
                          "round": false,
                          "circle": false,
                          "loading": false,
                          "disabled": false
                        },
                        "__nodeEvent": {
                          "onMounted": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          },
                          "onClick": {
                            "isOn": true,
                            "fn": "async function(){\n\n                              this.$globalVars.$router.push({path:\"/\"})\n\n                            }"
                          },
                          "onChange": {
                            "isOn": true,
                            "fn": "async function(){\n\n\n\n                            }"
                          }
                        },
                        "__nodeKey": "nodeKey_button_lrhj9f4s",
                        "__description": "关闭"
                      }
                    },
                    "__nodeKey": "nodeKey_elementRender_lrhj9f4r",
                    "__description": ""
                  }
                ],
                "display": true,
                "isSysRouter": true,
                "permissionSetting": "",
                "routers": [
                  {
                    "title": "详情",
                    "to": "/"
                  }
                ]
              },
              "__nodeKey": "nodeKey_navigationBar_lrhj9f4q",
              "__description": ""
            },
            "flexBoxOptions": {
              "__nodeId": "flexBox_lrhlx7id",
              "__nodeName": "flexBox",
              "__nodeType": "baseNode",
              "__nodeOptions": {
                "display": true,
                "permissionSetting": "",
                "isRow": false,
                "itemNum": 5,
                "width": "100%",
                "height": "100%",
                "itemConfig": [
                  {
                    "tag": "item-1",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "contentType": "container",
                    "paddingSize": "large",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrhlx7ie",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "dynamicDescription",
                        "containerOptions": {
                          "__nodeId": "dynamicDescription_lrhlx7ih",
                          "__nodeName": "dynamicDescription",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "descCode": "qDeliveryOrderMessage",
                            "title": "单据信息",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "size": "small",
                            "description": true,
                            "layout": {
                              "tag": "div",
                              "gutter": 0,
                              "justify": "start",
                              "align": ""
                            },
                            "display": true,
                            "permissionSetting": "",
                            "descItems": [
                              {
                                "name": "orgName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwhk",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwhl",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.orgName",
                                        "content": "",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwhl",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwhk",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "orderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltls39tr",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltls39ts",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.orderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltls39ts",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltls39tr",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "exitTime",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwhm",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwhn",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.exitTime",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwhn",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwhm",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "originalOrderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwho",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwhp",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.originalOrderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwhp",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwho",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "plateNumber",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwhq",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwhr",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.plateNumber",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwhr",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwhq",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "labourName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwhu",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwhv",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.labourName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwhv",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwhu",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "teamName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwhw",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwhx",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.teamName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwhx",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwhw",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "ghFullName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwhs",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwht",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.ghFullName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwht",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwhs",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "remark",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_lrhmbwhy",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_lrhmbwhz",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery. remark",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_lrhmbwhz",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_lrhmbwhy",
                                  "__description": ""
                                }
                              }
                            ],
                            "toolLeftWidth": "50%",
                            "toolLeftPadding": false,
                            "toolLeftClearPadding": [],
                            "toolRightPadding": false,
                            "toolRightClearPadding": [],
                            "toolLeftSlot": [],
                            "toolRightSlot": [],
                            "labelWidth": "80px"
                          },
                          "__nodeEvent": {},
                          "__nodeKey": "nodeKey_dynamicDescription_lrhlx7ih",
                          "__description": "发料详情主表"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrhlx7ie",
                      "__description": ""
                    },
                    "clearPadding": [
                      "bottom"
                    ]
                  },
                  {
                    "tag": "item-2",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "bottom"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_ltjnmgm1",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "dynamicDescription",
                        "containerOptions": {
                          "__nodeId": "dynamicDescription_ltjnmiob",
                          "__nodeName": "dynamicDescription",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "descCode": "qDeliveryScrapOrderMessage",
                            "title": "单据信息",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "size": "small",
                            "description": true,
                            "layout": {
                              "tag": "div",
                              "gutter": 0,
                              "justify": "start",
                              "align": ""
                            },
                            "display": true,
                            "permissionSetting": "",
                            "descItems": [
                              {
                                "name": "orgName",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltjnmj0p",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltjnmj0q",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.orgName",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltjnmj0q",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltjnmj0p",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "orderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltjnmj0r",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltjnmj0s",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.orderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltjnmj0s",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltjnmj0r",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "exitTime",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltjnmj0t",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltjnmj0u",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.exitTime",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltjnmj0u",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltjnmj0t",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "originalOrderCode",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltjnmj0v",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltjnmj0w",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.originalOrderCode",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltjnmj0w",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltjnmj0v",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "plateNumber",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltjnmj0x",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltjnmj0y",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.plateNumber",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltjnmj0y",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltjnmj0x",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "scrapReason",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltjnmj0z",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltjnmj10",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.scrapReason",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltjnmj10",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltjnmj0z",
                                  "__description": ""
                                }
                              },
                              {
                                "name": "methodHandle",
                                "defaultSlot": {
                                  "__nodeId": "elementRender_ltjnmj11",
                                  "__nodeName": "elementRender",
                                  "__nodeType": "renderNode",
                                  "__nodeOptions": {
                                    "renderType": "label",
                                    "elementOptions": {
                                      "__nodeId": "label_ltjnmj12",
                                      "__nodeName": "label",
                                      "__nodeType": "baseNode",
                                      "__nodeOptions": {
                                        "modelName": "deliveryFormModel.qDelivery.methodHandle",
                                        "content": "label文本",
                                        "display": true,
                                        "permissionSetting": ""
                                      },
                                      "__nodeEvent": {},
                                      "__nodeKey": "nodeKey_label_ltjnmj12",
                                      "__description": "label文本"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_elementRender_ltjnmj11",
                                  "__description": ""
                                }
                              }
                            ],
                            "toolLeftWidth": "50%",
                            "toolLeftPadding": false,
                            "toolLeftClearPadding": [],
                            "toolRightPadding": false,
                            "toolRightClearPadding": [],
                            "toolLeftSlot": [],
                            "toolRightSlot": [],
                            "labelWidth": "80px"
                          },
                          "__nodeEvent": {},
                          "__nodeKey": "nodeKey_dynamicDescription_ltjnmiob",
                          "__description": ""
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_ltjnmgm1",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-3",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "bottom"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrhlx7if",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrhlx7ii",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "物资清单",
                            "border": false,
                            "paddingSize": "base",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrhlx7ij",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "tableReport",
                                "elementOptions": {
                                  "__nodeId": "tableReport_lrhmbsg4",
                                  "__nodeName": "tableReport",
                                  "__nodeType": "baseNode",
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n\n\n                                        this.$currentInstance.exposed.model.tableData.value = this.$dataModels.deliveryFormModel.qDeliveryMoreOrders\n                                      }"
                                    }
                                  },
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "columnConfigs": [
                                      {
                                        "attr": {
                                          "prop": "orderId",
                                          "label": "序号",
                                          "type": "index"
                                        },
                                        "id": "0_item_config_ltkxt93i"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialName",
                                          "label": "物资名称"
                                        },
                                        "id": "1_item_config_ltkxt93j"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialModel",
                                          "label": "规格型号"
                                        },
                                        "id": "2_item_config_ltkxt93k"
                                      },
                                      {
                                        "attr": {
                                          "prop": "materialUnit",
                                          "label": "计量单位"
                                        },
                                        "id": "3_item_config_ltkxt93l"
                                      },
                                      {
                                        "attr": {
                                          "prop": "quantity",
                                          "label": "库存数量"
                                        },
                                        "id": "4_item_config_ltkxt93m"
                                      },
                                      {
                                        "attr": {
                                          "prop": "netQuantity",
                                          "label": "发料数量"
                                        },
                                        "id": "5_item_config_ltkxt93n"
                                      },
                                      {
                                        "attr": {
                                          "prop": "itemBarCode",
                                          "label": "物资条码"
                                        },
                                        "id": "6_item_config_ltkxt93o"
                                      },
                                      {
                                        "attr": {
                                          "prop": "remark",
                                          "label": "明细备注"
                                        },
                                        "id": "7_item_config_ltkxt93p"
                                      },
                                      {
                                        "attr": {
                                          "prop": "id",
                                          "label": "操作",
                                          "scopedSlot": "id"
                                        },
                                        "id": "8_item_config_ltkxt93q"
                                      }
                                    ],
                                    "columnSlots": [
                                      {
                                        "code": "id",
                                        "columRender": {
                                          "__nodeId": "columRender_ltkxt938",
                                          "__nodeName": "columRender",
                                          "__nodeType": "renderNode",
                                          "__nodeOptions": {
                                            "renderType": "button",
                                            "elementOptions": {
                                              "__nodeId": "button_ltkxt937",
                                              "__nodeName": "button",
                                              "__nodeType": "columnNode",
                                              "__nodeOptions": {
                                                "modelName": "",
                                                "size": "small",
                                                "plain": true,
                                                "content": "",
                                                "type": "info",
                                                "text": false,
                                                "link": false,
                                                "round": false,
                                                "circle": true,
                                                "loading": false,
                                                "disabled": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "tooltip": false,
                                                "tooltipEffect": "dark",
                                                "tooltipContent": "显示的内容",
                                                "tooltipPlacement": "bottom",
                                                "iconFont": "icon cs-common xiangqing"
                                              },
                                              "__nodeEvent": {
                                                "onValueRender": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "function onValueRenderFn(row){\n                                                    if(row.itemBarCode){\n\n                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                        disabled: true\n                                                      };\n                                                    }else{\n                                                      this.$currentInstance.exposed.model.elementOption.value = {\n                                                        disabled: false\n                                                      };\n                                                    }\n\n\n                                                  }"
                                                },
                                                "onClick": {
                                                  "type": "system",
                                                  "isOn": true,
                                                  "fn": "async function fnName(row){\n\n                                                    this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value = row\n                                                    this.$exposeds.get('dialog_lrimr0vi').model.dialogShow.value = true\n                                                  }"
                                                }
                                              },
                                              "__nodeKey": "nodeKey_button_ltkxt937",
                                              "__description": "按钮"
                                            }
                                          },
                                          "__nodeKey": "nodeKey_columRender_ltkxt938",
                                          "__description": ""
                                        },
                                        "propName": "操作"
                                      }
                                    ],
                                    "columnHeaderSlots": [],
                                    "showSummary": false,
                                    "pagination": {
                                      "currentSize": 20,
                                      "pageSizes": [
                                        10,
                                        20,
                                        30,
                                        50
                                      ],
                                      "layout": "sizes, prev, pager, next, total"
                                    },
                                    "tableCodeRemark": "",
                                    "tableCode": "qDeliveryOrderItemTable",
                                    "isCustom": true
                                  },
                                  "__nodeKey": "nodeKey_tableReport_lrhmbsg4",
                                  "__description": "发料详情明细"
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrhlx7ij",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrhlx7ik",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lrhlx7ik",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrhlx7ii",
                          "__description": "物资清单"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrhlx7if",
                      "__description": ""
                    }
                  },
                  {
                    "tag": "item-4",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lrhlx7ig",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lrhlx7il",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "凭证",
                            "border": false,
                            "paddingSize": "base",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lrhlx7im",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lrhmbtmj",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": true,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": false,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lrq6fedx",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lrq6fee0",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lrq6fee7",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lrq6fee8",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            const idx = this.$dataModels.previewSrcList.items.findIndex(src => src == row._photoUrl) || 0\n                                                            return { content: row._photoUrl, previewSrcList: this.$dataModels.previewSrcList.items, initialIndex: idx }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lrq6fee8",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "320px",
                                                        "height": "180px"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lrq6fee7",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrq6fee0",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "textAlign": "center"
                                              }
                                            },
                                            {
                                              "__nodeId": "gridItem_lrq6fee3",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lrq6fee5",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "rawHtml",
                                                    "elementOptions": {
                                                      "__nodeId": "rawHtml_lrq6fee9",
                                                      "__nodeName": "rawHtml",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "content": "<span style=\"\">rawTxt渲染文本</span>",
                                                        "display": true,
                                                        "permissionSetting": "",
                                                        "modelName": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            return { content: `<div style=' text-align: center'> ${row.cameraPosition} 照片</div>` }\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_rawHtml_lrq6fee9",
                                                      "__description": ""
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lrq6fee5",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lrq6fee3",
                                              "__description": "",
                                              "__nodeStyle": {
                                                "textAlign": "center"
                                              }
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lrq6fedx",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        // 当前代码编辑器下有效\n                                        // if(window.assemBoxIsEdit){ this.$currentInstance.exposed.model.listData.value= [{},{}];}\n\n\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.deliveryFormModel.photos\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lrhmbtmj",
                                  "__description": "发料详情照片"
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lrhlx7im",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lrhlx7in",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lrhlx7in",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lrhlx7il",
                          "__description": "出库凭证"
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lrhlx7ig",
                      "__description": ""
                    },
                    "dragButtonPosition": "left"
                  },
                  {
                    "tag": "item-5",
                    "isFixed": true,
                    "showDragButton": false,
                    "size": "",
                    "paddingSize": "large",
                    "clearPadding": [
                      "top"
                    ],
                    "contentType": "container",
                    "isHidden": false,
                    "permissionSetting": "",
                    "defaultSlot": {
                      "__nodeId": "containerRender_lu980iui",
                      "__nodeName": "containerRender",
                      "__nodeType": "renderNode",
                      "__nodeEvent": {},
                      "__nodeOptions": {
                        "renderType": "panel",
                        "containerOptions": {
                          "__nodeId": "panel_lu980jyj",
                          "__nodeName": "panel",
                          "__nodeType": "baseNode",
                          "__nodeOptions": {
                            "showHeader": true,
                            "title": "高拍仪",
                            "border": false,
                            "paddingSize": "small",
                            "clearPadding": [],
                            "height": "100%",
                            "display": true,
                            "permissionSetting": "",
                            "contentType": "element",
                            "defaultSlot": {
                              "__nodeId": "elementRender_lu980jyk",
                              "__nodeName": "elementRender",
                              "__nodeType": "renderNode",
                              "__nodeOptions": {
                                "renderType": "listOnly",
                                "elementOptions": {
                                  "__nodeId": "listOnly_lu980nam",
                                  "__nodeName": "listOnly",
                                  "__nodeType": "baseNode",
                                  "__nodeOptions": {
                                    "display": true,
                                    "permissionSetting": "",
                                    "requestFn": "",
                                    "height": "100%",
                                    "direction": "horizontal",
                                    "wrap": false,
                                    "fill": false,
                                    "fillRatio": 100,
                                    "spaceSize": 6,
                                    "alignment": "center",
                                    "contentType": "gridBox",
                                    "spaceStyle": "width: 100%",
                                    "listItemProps": {
                                      "width": "300px",
                                      "height": "100%",
                                      "border": true,
                                      "shadow": true,
                                      "background": false,
                                      "paddingSize": "small"
                                    },
                                    "defaultSlot": [
                                      {
                                        "__nodeId": "gridBox_lu980nan",
                                        "__nodeName": "gridBox",
                                        "__nodeType": "baseNode",
                                        "__nodeOptions": {
                                          "gutter": 10,
                                          "justify": "start",
                                          "align": "top",
                                          "tag": "div",
                                          "defaultSlot": [
                                            {
                                              "__nodeId": "gridItem_lu980oyq",
                                              "__nodeName": "gridItem",
                                              "__nodeType": "baseNode",
                                              "__nodeOptions": {
                                                "xs": 24,
                                                "sm": 12,
                                                "md": 8,
                                                "lg": 6,
                                                "xl": 4,
                                                "span": 24,
                                                "offset": 0,
                                                "push": 0,
                                                "pull": 0,
                                                "canHidden": false,
                                                "responsive": false,
                                                "display": true,
                                                "permissionSetting": "",
                                                "contentType": "columElement",
                                                "defaultSlot": {
                                                  "__nodeId": "columElementRender_lu98i8g6",
                                                  "__nodeName": "columElementRender",
                                                  "__nodeType": "renderNode",
                                                  "__nodeOptions": {
                                                    "renderType": "image",
                                                    "elementOptions": {
                                                      "__nodeId": "image_lu98i8ip",
                                                      "__nodeName": "image",
                                                      "__nodeType": "baseNode",
                                                      "__nodeOptions": {
                                                        "modelName": "",
                                                        "content": "",
                                                        "initialIndex": 0,
                                                        "hideOnClickModal": false,
                                                        "loading": "eager",
                                                        "lazy": false,
                                                        "alt": "",
                                                        "previewSrcList": [],
                                                        "fit": "",
                                                        "display": true,
                                                        "permissionSetting": ""
                                                      },
                                                      "__nodeEvent": {
                                                        "onValueRender": {
                                                          "type": "system",
                                                          "isOn": true,
                                                          "fn": "function onValueRenderFn(row) {\n                                                            console.log(row,'row');\n\n                                                            const idx = this.$dataModels.gpyPreviewList.items.findIndex(src => src == row.gpyPhotoUrl) || 0\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              content: row.gpyPhotoUrl\n                                                            };\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              previewSrcList: this.$dataModels.gpyPreviewList.items\n                                                            };\n\n\n                                                            this.$currentInstance.exposed.model.elementOption.value = {\n                                                              initialIndex: idx\n                                                            };\n\n                                                          }"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_image_lu98i8ip",
                                                      "__description": "",
                                                      "__nodeStyle": {
                                                        "width": "100%",
                                                        "height": "106%"
                                                      }
                                                    }
                                                  },
                                                  "__nodeKey": "nodeKey_columElementRender_lu98i8g6",
                                                  "__description": ""
                                                }
                                              },
                                              "__nodeEvent": {},
                                              "__nodeKey": "nodeKey_gridItem_lu980oyq",
                                              "__description": ""
                                            }
                                          ]
                                        },
                                        "__nodeKey": "nodeKey_gridBox_lu980nan",
                                        "__description": "",
                                        "__nodeEvent": {}
                                      }
                                    ]
                                  },
                                  "__nodeEvent": {
                                    "onMounted": {
                                      "type": "system",
                                      "isOn": true,
                                      "fn": "async function onMountedFn(){\n\n                                        this.$currentInstance.exposed.model.listData.value = this.$dataModels.deliveryFormModel.gpyPhotos\n                                        // 当前代码编辑器下有效\n                                        // if(window.assemBoxIsEdit){ this.$currentInstance.exposed.model.listData.value= [{},{}];}\n\n                                      }"
                                    }
                                  },
                                  "__nodeKey": "nodeKey_listOnly_lu980nam",
                                  "__description": ""
                                }
                              },
                              "__nodeKey": "nodeKey_elementRender_lu980jyk",
                              "__description": ""
                            },
                            "toolSlot": {
                              "__nodeId": "flexLine_lu980jyl",
                              "__nodeName": "flexLine",
                              "__nodeType": "baseNode",
                              "__nodeStyle": {},
                              "__nodeEvent": {},
                              "__nodeOptions": {
                                "leftWidth": "50%",
                                "background": false,
                                "leftPadding": true,
                                "rightPadding": true,
                                "paddingSize": "",
                                "leftClearPadding": [],
                                "rightClearPadding": [],
                                "__activeSlot": "defaultSlot",
                                "defaultSlot": [],
                                "rightSlot": [],
                                "display": true,
                                "permissionSetting": ""
                              },
                              "__nodeKey": "nodeKey_flexLine_lu980jyl",
                              "__description": ""
                            }
                          },
                          "__nodeKey": "nodeKey_panel_lu980jyj",
                          "__description": ""
                        }
                      },
                      "__nodeKey": "nodeKey_containerRender_lu980iui",
                      "__description": ""
                    }
                  }
                ]
              },
              "__nodeEvent": {
                "onMounted": {
                  "type": "system",
                  "isOn": true,
                  "fn": "async function onMountedFn(){\n\n                    const { itemConfig } = this.$currentInstance.exposed.model.elementOption.value\n                    debugger\n                    if (this.$dataModels.deliveryFormModel.qDelivery.serviceType == 40){\n                      itemConfig.forEach(box => {\n                        if (box.tag == 'item-1') {\n                          box.isHidden = true\n                        }\n                        if (box.tag == 'item-2') {\n                          box.isHidden = false\n                        }\n                      })\n                    } else {\n                      itemConfig.forEach(box => {\n                        if (box.tag == 'item-1') {\n                          box.isHidden = false\n                        }\n                        if (box.tag == 'item-2') {\n                          box.isHidden = true\n                        }\n                      })\n                    }\n\n\n\n                  }"
                }
              },
              "__nodeKey": "nodeKey_flexBox_lrhlx7id",
              "__description": "发料详情"
            }
          },
          "__nodeKey": "nodeKey_plane_lrhj9f4p",
          "__description": ""
        },
        "dialogOptions": [
          {
            "__nodeId": "dialog_lrimr0vi",
            "__nodeName": "dialog",
            "__nodeType": "baseNode",
            "__nodeOptions": {
              "width": "1000px",
              "title": "分解详情",
              "open": false,
              "defaultSlot": {
                "__nodeId": "flexBox_lrimr0vj",
                "__nodeName": "flexBox",
                "__nodeType": "baseNode",
                "__nodeOptions": {
                  "isRow": false,
                  "itemNum": 1,
                  "itemConfig": [
                    {
                      "tag": "item-1",
                      "isFixed": true,
                      "size": "",
                      "paddingSize": "large",
                      "clearPadding": [
                        "left",
                        "top",
                        "right",
                        "bottom"
                      ],
                      "contentType": "container",
                      "defaultSlot": {
                        "__nodeId": "containerRender_lrimr0vk",
                        "__nodeName": "containerRender",
                        "__nodeType": "renderNode",
                        "__nodeOptions": {
                          "renderType": "box",
                          "containerOptions": {
                            "__nodeId": "box_lrimr7b1",
                            "__nodeName": "box",
                            "__nodeType": "baseNode",
                            "__nodeEvent": {},
                            "__nodeOptions": {
                              "shadow": false,
                              "border": false,
                              "background": true,
                              "paddingSize": "small",
                              "clearPadding": [
                                "left",
                                "top",
                                "right",
                                "bottom"
                              ],
                              "clearBorder": [],
                              "height": "100%",
                              "display": true,
                              "permissionSetting": "",
                              "contentType": "flexBox",
                              "defaultSlot": {
                                "__nodeId": "flexBox_lrimr85j",
                                "__nodeName": "flexBox",
                                "__nodeType": "baseNode",
                                "__nodeOptions": {
                                  "display": true,
                                  "permissionSetting": "",
                                  "isRow": false,
                                  "itemNum": 2,
                                  "width": "100%",
                                  "height": "100%",
                                  "itemConfig": [
                                    {
                                      "tag": "item-1",
                                      "isFixed": true,
                                      "showDragButton": false,
                                      "size": "",
                                      "contentType": "container",
                                      "paddingSize": "large",
                                      "isHidden": false,
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lrimr85k",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "panel",
                                          "containerOptions": {
                                            "__nodeId": "panel_lrimrgm4",
                                            "__nodeName": "panel",
                                            "__nodeType": "baseNode",
                                            "__nodeOptions": {
                                              "showHeader": true,
                                              "title": "材料信息",
                                              "border": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "gridBox",
                                              "toolSlot": null,
                                              "defaultSlot": [
                                                {
                                                  "__nodeId": "gridBox_lrimv1pq",
                                                  "__nodeName": "gridBox",
                                                  "__nodeType": "baseNode",
                                                  "__nodeEvent": {},
                                                  "__nodeOptions": {
                                                    "gutter": 10,
                                                    "justify": "start",
                                                    "align": "top",
                                                    "defaultSlot": [
                                                      {
                                                        "__nodeId": "gridItem_lrimv376",
                                                        "__nodeName": "gridItem",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "xs": 24,
                                                          "sm": 12,
                                                          "md": 8,
                                                          "lg": 6,
                                                          "xl": 4,
                                                          "span": 6,
                                                          "offset": 0,
                                                          "push": 0,
                                                          "pull": 0,
                                                          "canHidden": false,
                                                          "responsive": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "contentType": "element",
                                                          "clearPadding": [
                                                            "bottom",
                                                            "right",
                                                            "top",
                                                            "left"
                                                          ],
                                                          "paddingSize": "small",
                                                          "defaultSlot": {
                                                            "__nodeId": "elementRender_lrpsrot7",
                                                            "__nodeName": "elementRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "filterItem",
                                                              "elementOptions": {
                                                                "__nodeId": "filterItem_lrpsrot8",
                                                                "__nodeName": "filterItem",
                                                                "__nodeType": "baseNode",
                                                                "__nodeOptions": {
                                                                  "label": "物资名称",
                                                                  "labelWidth": "75px",
                                                                  "labelPosition": "right",
                                                                  "size": "small",
                                                                  "description": false,
                                                                  "display": true,
                                                                  "permissionSetting": "",
                                                                  "defaultSlot": {
                                                                    "__nodeId": "elementRender_lrpsrpal",
                                                                    "__nodeName": "elementRender",
                                                                    "__nodeType": "renderNode",
                                                                    "__nodeOptions": {
                                                                      "renderType": "label",
                                                                      "elementOptions": {
                                                                        "__nodeId": "label_lrpsrpam",
                                                                        "__nodeName": "label",
                                                                        "__nodeType": "baseNode",
                                                                        "__nodeOptions": {
                                                                          "modelName": "",
                                                                          "content": "label文本",
                                                                          "display": true,
                                                                          "permissionSetting": ""
                                                                        },
                                                                        "__nodeEvent": {
                                                                          "onValueRender": {
                                                                            "isOn": true,
                                                                            "fn": "function onValueRenderFn(row){\n\n\n                                                                              this.$currentInstance.exposed.model.elementOption.value = {\n                                                                                content: this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialName\n                                                                              };\n\n                                                                            }"
                                                                          }
                                                                        },
                                                                        "__nodeKey": "nodeKey_label_lrpsrpam",
                                                                        "__description": "label文本"
                                                                      }
                                                                    },
                                                                    "__nodeKey": "nodeKey_elementRender_lrpsrpal",
                                                                    "__description": ""
                                                                  }
                                                                },
                                                                "__nodeEvent": {},
                                                                "__nodeKey": "nodeKey_filterItem_lrpsrot8",
                                                                "__description": "物资名称"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_elementRender_lrpsrot7",
                                                            "__description": ""
                                                          }
                                                        },
                                                        "__nodeEvent": {},
                                                        "__nodeKey": "nodeKey_gridItem_lrimv376",
                                                        "__description": "",
                                                        "__nodeStyle": {
                                                          "height": "30px"
                                                        }
                                                      },
                                                      {
                                                        "__nodeId": "gridItem_lrimv4oo",
                                                        "__nodeName": "gridItem",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "xs": 24,
                                                          "sm": 12,
                                                          "md": 8,
                                                          "lg": 6,
                                                          "xl": 4,
                                                          "span": 6,
                                                          "offset": 0,
                                                          "push": 0,
                                                          "pull": 0,
                                                          "canHidden": false,
                                                          "responsive": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "contentType": "element",
                                                          "defaultSlot": {
                                                            "__nodeId": "elementRender_lrpsrprz",
                                                            "__nodeName": "elementRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "filterItem",
                                                              "elementOptions": {
                                                                "__nodeId": "filterItem_lrpsrps0",
                                                                "__nodeName": "filterItem",
                                                                "__nodeType": "baseNode",
                                                                "__nodeOptions": {
                                                                  "label": "规格型号",
                                                                  "labelWidth": "75px",
                                                                  "labelPosition": "right",
                                                                  "size": "small",
                                                                  "description": false,
                                                                  "display": true,
                                                                  "permissionSetting": "",
                                                                  "defaultSlot": {
                                                                    "__nodeId": "elementRender_lrpsrq9d",
                                                                    "__nodeName": "elementRender",
                                                                    "__nodeType": "renderNode",
                                                                    "__nodeOptions": {
                                                                      "renderType": "label",
                                                                      "elementOptions": {
                                                                        "__nodeId": "label_lrpsrq9e",
                                                                        "__nodeName": "label",
                                                                        "__nodeType": "baseNode",
                                                                        "__nodeOptions": {
                                                                          "modelName": "",
                                                                          "content": "label文本",
                                                                          "display": true,
                                                                          "permissionSetting": ""
                                                                        },
                                                                        "__nodeEvent": {
                                                                          "onValueRender": {
                                                                            "isOn": true,
                                                                            "fn": "function onValueRenderFn(row){\n\n                                                                              this.$currentInstance.exposed.model.elementOption.value = {\n                                                                                content: this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialModel\n                                                                              };\n\n\n                                                                            }"
                                                                          }
                                                                        },
                                                                        "__nodeKey": "nodeKey_label_lrpsrq9e",
                                                                        "__description": "label文本"
                                                                      }
                                                                    },
                                                                    "__nodeKey": "nodeKey_elementRender_lrpsrq9d",
                                                                    "__description": ""
                                                                  }
                                                                },
                                                                "__nodeEvent": {},
                                                                "__nodeKey": "nodeKey_filterItem_lrpsrps0",
                                                                "__description": "规格型号"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_elementRender_lrpsrprz",
                                                            "__description": ""
                                                          }
                                                        },
                                                        "__nodeEvent": {},
                                                        "__nodeKey": "nodeKey_gridItem_lrimv4oo",
                                                        "__description": "",
                                                        "__nodeStyle": {
                                                          "height": "30px"
                                                        }
                                                      },
                                                      {
                                                        "__nodeId": "gridItem_lrimv666",
                                                        "__nodeName": "gridItem",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "xs": 24,
                                                          "sm": 12,
                                                          "md": 8,
                                                          "lg": 6,
                                                          "xl": 4,
                                                          "span": 6,
                                                          "offset": 0,
                                                          "push": 0,
                                                          "pull": 0,
                                                          "canHidden": false,
                                                          "responsive": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "contentType": "element",
                                                          "defaultSlot": {
                                                            "__nodeId": "elementRender_lrpsrsff",
                                                            "__nodeName": "elementRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "filterItem",
                                                              "elementOptions": {
                                                                "__nodeId": "filterItem_lrpsrsfg",
                                                                "__nodeName": "filterItem",
                                                                "__nodeType": "baseNode",
                                                                "__nodeOptions": {
                                                                  "label": "计量单位",
                                                                  "labelWidth": "75px",
                                                                  "labelPosition": "right",
                                                                  "size": "small",
                                                                  "description": false,
                                                                  "display": true,
                                                                  "permissionSetting": "",
                                                                  "defaultSlot": {
                                                                    "__nodeId": "elementRender_lrpsrswt",
                                                                    "__nodeName": "elementRender",
                                                                    "__nodeType": "renderNode",
                                                                    "__nodeOptions": {
                                                                      "renderType": "label",
                                                                      "elementOptions": {
                                                                        "__nodeId": "label_lrpsrswu",
                                                                        "__nodeName": "label",
                                                                        "__nodeType": "baseNode",
                                                                        "__nodeOptions": {
                                                                          "modelName": "",
                                                                          "content": "label文本",
                                                                          "display": true,
                                                                          "permissionSetting": ""
                                                                        },
                                                                        "__nodeEvent": {
                                                                          "onValueRender": {
                                                                            "isOn": true,
                                                                            "fn": "function onValueRenderFn(row){\n\n                                                                              this.$currentInstance.exposed.model.elementOption.value = {\n                                                                                content: this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                              };\n\n\n                                                                            }"
                                                                          }
                                                                        },
                                                                        "__nodeKey": "nodeKey_label_lrpsrswu",
                                                                        "__description": "label文本"
                                                                      }
                                                                    },
                                                                    "__nodeKey": "nodeKey_elementRender_lrpsrswt",
                                                                    "__description": ""
                                                                  }
                                                                },
                                                                "__nodeEvent": {},
                                                                "__nodeKey": "nodeKey_filterItem_lrpsrsfg",
                                                                "__description": "计量单位"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_elementRender_lrpsrsff",
                                                            "__description": ""
                                                          }
                                                        },
                                                        "__nodeEvent": {},
                                                        "__nodeKey": "nodeKey_gridItem_lrimv666",
                                                        "__description": "",
                                                        "__nodeStyle": {
                                                          "height": "30px"
                                                        }
                                                      },
                                                      {
                                                        "__nodeId": "gridItem_lrimv7no",
                                                        "__nodeName": "gridItem",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "xs": 24,
                                                          "sm": 12,
                                                          "md": 8,
                                                          "lg": 6,
                                                          "xl": 4,
                                                          "span": 6,
                                                          "offset": 0,
                                                          "push": 0,
                                                          "pull": 0,
                                                          "canHidden": false,
                                                          "responsive": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "contentType": "element",
                                                          "paddingSize": "small",
                                                          "defaultSlot": {
                                                            "__nodeId": "elementRender_lrpsrte7",
                                                            "__nodeName": "elementRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "filterItem",
                                                              "elementOptions": {
                                                                "__nodeId": "filterItem_lrpsrte8",
                                                                "__nodeName": "filterItem",
                                                                "__nodeType": "baseNode",
                                                                "__nodeOptions": {
                                                                  "label": "库存量",
                                                                  "labelWidth": "75px",
                                                                  "labelPosition": "right",
                                                                  "size": "small",
                                                                  "description": false,
                                                                  "display": true,
                                                                  "permissionSetting": "",
                                                                  "defaultSlot": {
                                                                    "__nodeId": "elementRender_lrpsrtvl",
                                                                    "__nodeName": "elementRender",
                                                                    "__nodeType": "renderNode",
                                                                    "__nodeOptions": {
                                                                      "renderType": "label",
                                                                      "elementOptions": {
                                                                        "__nodeId": "label_lrpsrtvm",
                                                                        "__nodeName": "label",
                                                                        "__nodeType": "baseNode",
                                                                        "__nodeOptions": {
                                                                          "modelName": "",
                                                                          "content": "label文本",
                                                                          "display": true,
                                                                          "permissionSetting": ""
                                                                        },
                                                                        "__nodeEvent": {
                                                                          "onValueRender": {
                                                                            "type": "system",
                                                                            "isOn": false,
                                                                            "fn": "function onValueRenderFn(row){\n\n\n                                                                              this.$currentInstance.exposed.model.elementOption.value = {\n                                                                                content: this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.quantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                              };\n\n                                                                            }"
                                                                          }
                                                                        },
                                                                        "__nodeKey": "nodeKey_label_lrpsrtvm",
                                                                        "__description": "label文本"
                                                                      }
                                                                    },
                                                                    "__nodeKey": "nodeKey_elementRender_lrpsrtvl",
                                                                    "__description": ""
                                                                  }
                                                                },
                                                                "__nodeEvent": {},
                                                                "__nodeKey": "nodeKey_filterItem_lrpsrte8",
                                                                "__description": "库存量"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_elementRender_lrpsrte7",
                                                            "__description": ""
                                                          }
                                                        },
                                                        "__nodeEvent": {},
                                                        "__nodeKey": "nodeKey_gridItem_lrimv7no",
                                                        "__description": "",
                                                        "__nodeStyle": {
                                                          "height": "30px"
                                                        }
                                                      },
                                                      {
                                                        "__nodeId": "gridItem_lrimv956",
                                                        "__nodeName": "gridItem",
                                                        "__nodeType": "baseNode",
                                                        "__nodeOptions": {
                                                          "xs": 24,
                                                          "sm": 12,
                                                          "md": 8,
                                                          "lg": 6,
                                                          "xl": 4,
                                                          "span": 6,
                                                          "offset": 0,
                                                          "push": 0,
                                                          "pull": 0,
                                                          "canHidden": false,
                                                          "responsive": false,
                                                          "display": true,
                                                          "permissionSetting": "",
                                                          "contentType": "element",
                                                          "clearPadding": [
                                                            "left"
                                                          ],
                                                          "defaultSlot": {
                                                            "__nodeId": "elementRender_lrpsruln",
                                                            "__nodeName": "elementRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "filterItem",
                                                              "elementOptions": {
                                                                "__nodeId": "filterItem_lrpsrulo",
                                                                "__nodeName": "filterItem",
                                                                "__nodeType": "baseNode",
                                                                "__nodeOptions": {
                                                                  "label": "发料量",
                                                                  "labelWidth": "75px",
                                                                  "labelPosition": "right",
                                                                  "size": "small",
                                                                  "description": false,
                                                                  "display": true,
                                                                  "permissionSetting": "",
                                                                  "defaultSlot": {
                                                                    "__nodeId": "elementRender_lrpsrv31",
                                                                    "__nodeName": "elementRender",
                                                                    "__nodeType": "renderNode",
                                                                    "__nodeOptions": {
                                                                      "renderType": "label",
                                                                      "elementOptions": {
                                                                        "__nodeId": "label_lrpsrv32",
                                                                        "__nodeName": "label",
                                                                        "__nodeType": "baseNode",
                                                                        "__nodeOptions": {
                                                                          "modelName": "",
                                                                          "content": "label文本",
                                                                          "display": true,
                                                                          "permissionSetting": ""
                                                                        },
                                                                        "__nodeEvent": {
                                                                          "onValueRender": {
                                                                            "isOn": true,
                                                                            "fn": "function onValueRenderFn(row){\n\n                                                                              this.$currentInstance.exposed.model.elementOption.value = {\n                                                                                content: this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.netQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                              };\n\n\n                                                                            }"
                                                                          }
                                                                        },
                                                                        "__nodeKey": "nodeKey_label_lrpsrv32",
                                                                        "__description": "label文本"
                                                                      }
                                                                    },
                                                                    "__nodeKey": "nodeKey_elementRender_lrpsrv31",
                                                                    "__description": ""
                                                                  }
                                                                },
                                                                "__nodeEvent": {},
                                                                "__nodeKey": "nodeKey_filterItem_lrpsrulo",
                                                                "__description": "发料量"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_elementRender_lrpsruln",
                                                            "__description": ""
                                                          }
                                                        },
                                                        "__nodeEvent": {},
                                                        "__nodeKey": "nodeKey_gridItem_lrimv956",
                                                        "__description": ""
                                                      }
                                                    ],
                                                    "display": true,
                                                    "permissionSetting": ""
                                                  },
                                                  "__nodeKey": "nodeKey_gridBox_lrimv1pq",
                                                  "__description": ""
                                                }
                                              ]
                                            },
                                            "__nodeKey": "nodeKey_panel_lrimrgm4",
                                            "__description": "材料信息",
                                            "__nodeEvent": {}
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lrimr85k",
                                        "__description": ""
                                      },
                                      "clearPadding": [
                                        "bottom"
                                      ]
                                    },
                                    {
                                      "tag": "item-2",
                                      "isFixed": false,
                                      "showDragButton": false,
                                      "size": "",
                                      "paddingSize": "large",
                                      "clearPadding": [],
                                      "contentType": "container",
                                      "isHidden": false,
                                      "defaultSlot": {
                                        "__nodeId": "containerRender_lrimr85l",
                                        "__nodeName": "containerRender",
                                        "__nodeType": "renderNode",
                                        "__nodeEvent": {},
                                        "__nodeOptions": {
                                          "renderType": "panel",
                                          "containerOptions": {
                                            "__nodeId": "panel_lrimrhgn",
                                            "__nodeName": "panel",
                                            "__nodeType": "baseNode",
                                            "__nodeOptions": {
                                              "showHeader": true,
                                              "title": "分解详情",
                                              "border": true,
                                              "paddingSize": "small",
                                              "clearPadding": [],
                                              "height": "100%",
                                              "display": true,
                                              "permissionSetting": "",
                                              "contentType": "element",
                                              "defaultSlot": {
                                                "__nodeId": "elementRender_lrimrhgo",
                                                "__nodeName": "elementRender",
                                                "__nodeType": "renderNode",
                                                "__nodeOptions": {
                                                  "renderType": "tableReport",
                                                  "elementOptions": {
                                                    "__nodeId": "tableReport_lrims616",
                                                    "__nodeName": "tableReport",
                                                    "__nodeType": "baseNode",
                                                    "__nodeEvent": {
                                                      "onMounted": {
                                                        "type": "system",
                                                        "isOn": true,
                                                        "fn": "async function onMountedFn(){\n                                                          debugger\n\n                                                          this.$currentInstance.exposed.model.tableLoading.value = true\n                                                          const { materialId, orgId, orderId } = this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value\n                                                          const { date, supplierId, orderOrigin } = this.$dataModels.deliveryDetailFilter.row\n                                                          let params = { materialId, orgId, orderId }\n                                                          if (date) {\n                                                            params.startDate = ''\n                                                            params.endDate = ''\n                                                          }\n                                                          if (supplierId > 0) {\n                                                            params.supplierId = supplierId\n                                                          }\n                                                          if (orderOrigin > 0) {\n                                                            params.orderOrigin = orderOrigin\n                                                          }\n\n                                                          const res = await this.$requestFns.queryDeliverydecMaterisls(params);\n                                                          const { result, tQuantity } = res.data\n\n                                                          this.$exposeds.get('label_lrpsrtvm').model.elementOption.value = {\n                                                            content: tQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                          };\n                                                          // 发料详情分解明细弹框表格\n                                                          this.$exposeds.get('tableReport_lrims616').model.tableData.value = result\n                                                          this.$currentInstance.exposed.model.tableLoading.value = false\n                                                          this.$dataModels.deliveryDetailFilter.row.orderOrigin = -1\n\n\n                                                        }"
                                                      }
                                                    },
                                                    "__nodeOptions": {
                                                      "display": true,
                                                      "permissionSetting": "",
                                                      "requestFn": "",
                                                      "columnConfigs": [
                                                        {
                                                          "attr": {
                                                            "prop": "code",
                                                            "type": "index",
                                                            "label": "序号",
                                                            "width": 60,
                                                            "headerAlign": "center",
                                                            "align": "center"
                                                          },
                                                          "id": "0_item_config_ltl0n6xs"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "exitTime",
                                                            "label": "入库时间",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "1_item_config_ltl0n6xt"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "materialName",
                                                            "label": "物资名称",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "2_item_config_ltl0n6xu"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "serviceType",
                                                            "label": "类型",
                                                            "width": "90",
                                                            "headerAlign": "center",
                                                            "align": "center",
                                                            "scopedSlot": "serviceType"
                                                          },
                                                          "id": "3_item_config_ltl0n6xv"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "orderOrigin",
                                                            "label": "单据来源",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "center",
                                                            "scopedSlot": "orderOrigin"
                                                          },
                                                          "id": "4_item_config_ltl0n6xw"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "supplierName",
                                                            "label": "供应单位",
                                                            "width": "220",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "5_item_config_ltl0n6xx"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "recQuantity",
                                                            "label": "收料量",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "6_item_config_ltl0n6xy"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "quantity",
                                                            "label": "库存量",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "7_item_config_ltl0n6xz"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "netQuantity",
                                                            "label": "发料量",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "8_item_config_ltl0n6y0"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "taxFreePrice",
                                                            "label": "不含税单价(元)",
                                                            "width": "150",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "9_item_config_ltl0n6y1"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "taxRate",
                                                            "label": "税率(%)",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "10_item_config_ltl0n6y2"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "taxIncludedPrice",
                                                            "label": "含税单价(元)",
                                                            "width": "100",
                                                            "headerAlign": "center",
                                                            "align": "right",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "11_item_config_ltl0n6y3"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "itemBarCode",
                                                            "label": "条码",
                                                            "width": "160",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "12_item_config_ltl0n6y4"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "manufacturer",
                                                            "label": "生产厂商",
                                                            "width": 150,
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "13_item_config_ltl0n6y5"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "batchNo",
                                                            "label": "炉批号",
                                                            "width": "140",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "14_item_config_ltl0n6y6"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "storagePlace",
                                                            "label": "存放地",
                                                            "width": "140",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "15_item_config_ltl0n6y7"
                                                        },
                                                        {
                                                          "attr": {
                                                            "prop": "remark",
                                                            "label": "明细备注",
                                                            "width": "140",
                                                            "headerAlign": "center",
                                                            "align": "left",
                                                            "scopedSlot": ""
                                                          },
                                                          "id": "16_item_config_ltl0n6y8"
                                                        }
                                                      ],
                                                      "columnSlots": [
                                                        {
                                                          "code": "serviceType",
                                                          "columRender": {
                                                            "__nodeId": "columRender_lriurhjc",
                                                            "__nodeName": "columRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "tag",
                                                              "elementOptions": {
                                                                "__nodeId": "tag_lriurhjb",
                                                                "__nodeName": "tag",
                                                                "__nodeType": "columnNode",
                                                                "__nodeOptions": {
                                                                  "modelName": "",
                                                                  "content": "标签",
                                                                  "closable": false,
                                                                  "hit": false,
                                                                  "round": false,
                                                                  "effect": "light",
                                                                  "display": true,
                                                                  "permissionSetting": ""
                                                                },
                                                                "__nodeEvent": {
                                                                  "onValueRender": {
                                                                    "isOn": true,
                                                                    "fn": "function onValueRenderFn(row){\n                                                                      if (row.serviceType > 0){\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          type: 'success',\n                                                                          content: row.serviceType === 10 ? '收料' : '调入',\n                                                                          size: 'small'\n                                                                        };\n                                                                      }else{\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          type: 'danger',\n                                                                          content: row.serviceType === -11 ? '退收料' : '退调入',\n                                                                          size: 'small'\n                                                                        };\n                                                                      }\n                                                                    }"
                                                                  }
                                                                },
                                                                "__nodeKey": "nodeKey_tag_lriurhjb",
                                                                "__description": "标签"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_columRender_lriurhjc",
                                                            "__description": ""
                                                          },
                                                          "propName": "类型"
                                                        },
                                                        {
                                                          "code": "orderOrigin",
                                                          "columRender": {
                                                            "__nodeId": "columRender_lriurk7w",
                                                            "__nodeName": "columRender",
                                                            "__nodeType": "renderNode",
                                                            "__nodeOptions": {
                                                              "renderType": "tag",
                                                              "elementOptions": {
                                                                "__nodeId": "tag_lriurk7v",
                                                                "__nodeName": "tag",
                                                                "__nodeType": "columnNode",
                                                                "__nodeOptions": {
                                                                  "modelName": "",
                                                                  "content": "标签",
                                                                  "closable": false,
                                                                  "hit": false,
                                                                  "round": false,
                                                                  "effect": "light",
                                                                  "display": true,
                                                                  "permissionSetting": ""
                                                                },
                                                                "__nodeEvent": {
                                                                  "onValueRender": {
                                                                    "isOn": true,
                                                                    "fn": "function onValueRenderFn(row){\n                                                                      if (row.orderOrigin === 0){\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          type: 'info',\n                                                                          content: '过磅',\n                                                                          size: 'small'\n                                                                        };\n                                                                      } else if (row.orderOrigin === 1) {\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          type: 'success',\n                                                                          content: 'APP',\n                                                                          size: 'small'\n                                                                        };\n                                                                      } else if (row.orderOrigin === 2) {\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          type: 'primary',\n                                                                          content: 'PC',\n                                                                          size: 'small'\n                                                                        };\n                                                                      }\n\n\n                                                                    }"
                                                                  }
                                                                },
                                                                "__nodeKey": "nodeKey_tag_lriurk7v",
                                                                "__description": "标签"
                                                              }
                                                            },
                                                            "__nodeKey": "nodeKey_columRender_lriurk7w",
                                                            "__description": ""
                                                          },
                                                          "propName": "单据来源"
                                                        }
                                                      ],
                                                      "columnHeaderSlots": [],
                                                      "showSummary": false,
                                                      "pagination": {
                                                        "currentSize": 20,
                                                        "pageSizes": [
                                                          10,
                                                          20,
                                                          30,
                                                          50
                                                        ],
                                                        "layout": "sizes, prev, pager, next, total"
                                                      },
                                                      "tableCodeRemark": "",
                                                      "tableCode": "",
                                                      "isCustom": false
                                                    },
                                                    "__nodeKey": "nodeKey_tableReport_lrims616",
                                                    "__description": "",
                                                    "__nodeStyle": {
                                                      "height": "300px"
                                                    }
                                                  }
                                                },
                                                "__nodeKey": "nodeKey_elementRender_lrimrhgo",
                                                "__description": ""
                                              },
                                              "toolSlot": {
                                                "__nodeId": "flexLine_lrimrhgp",
                                                "__nodeName": "flexLine",
                                                "__nodeType": "baseNode",
                                                "__nodeStyle": {
                                                  "marginTop": "4px",
                                                  "marginBottom": "0px"
                                                },
                                                "__nodeEvent": {},
                                                "__nodeOptions": {
                                                  "leftWidth": "0%",
                                                  "background": false,
                                                  "leftPadding": false,
                                                  "rightPadding": true,
                                                  "paddingSize": "",
                                                  "leftClearPadding": [],
                                                  "rightClearPadding": [],
                                                  "__activeSlot": "defaultSlot",
                                                  "defaultSlot": null,
                                                  "rightSlot": [
                                                    {
                                                      "__nodeId": "elementRender_lrims6vn",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "filterItem",
                                                        "elementOptions": {
                                                          "__nodeId": "filterItem_lrims6vo",
                                                          "__nodeName": "filterItem",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "label": "",
                                                            "labelWidth": "",
                                                            "labelPosition": "right",
                                                            "size": "small",
                                                            "description": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "defaultSlot": {
                                                              "__nodeId": "elementRender_lrimshvx",
                                                              "__nodeName": "elementRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "datePickerRange",
                                                                "elementOptions": {
                                                                  "__nodeId": "datePickerRange_lrimshvy",
                                                                  "__nodeName": "datePickerRange",
                                                                  "__nodeType": "baseNode",
                                                                  "__nodeOptions": {
                                                                    "readonly": false,
                                                                    "disabled": false,
                                                                    "clearable": true,
                                                                    "defaultValue": [],
                                                                    "modelName": "deliveryDetailFilter.row.date",
                                                                    "accountDay": 31,
                                                                    "selectBarItems": [
                                                                      "day",
                                                                      "week",
                                                                      "month",
                                                                      "quarter",
                                                                      "all"
                                                                    ],
                                                                    "defaultPicked": "",
                                                                    "type": "daterange",
                                                                    "size": "default",
                                                                    "valueFormat": "YYYY-MM-DD",
                                                                    "placeholder": "请选择日期",
                                                                    "startPlaceholder": "请选择日期",
                                                                    "endPlaceholder": "结束时间",
                                                                    "display": true,
                                                                    "permissionSetting": ""
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onChange": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function fnName(val){\n\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = true\n                                                                        const { materialId, orgId, orderId } = this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value\n                                                                        const { date, supplierId, orderOrigin } = this.$dataModels.deliveryDetailFilter.row\n                                                                        let params = { materialId, orgId, orderId }\n                                                                        debugger\n                                                                        if (date) {\n                                                                          params.startDate = date[0]\n                                                                          params.endDate = date[1]\n                                                                        }\n                                                                        if (supplierId > 0) {\n                                                                          params.supplierId = supplierId\n                                                                        }\n                                                                        if (orderOrigin > 0) {\n                                                                          params.orderOrigin = orderOrigin\n                                                                        }\n\n                                                                        const res = await this.$requestFns.queryDeliverydecMaterisls(params);\n                                                                        const { result, tQuantity } = res.data\n\n                                                                        this.$exposeds.get('label_lrpsrtvm').model.elementOption.value = {\n                                                                          content: tQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                        };\n                                                                        // 发料详情分解明细弹框表格\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableData.value = result\n\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = false\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_datePickerRange_lrimshvy",
                                                                  "__description": ""
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_elementRender_lrimshvx",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_filterItem_lrims6vo",
                                                          "__description": "入库时间"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lrims6vn",
                                                      "__description": ""
                                                    },
                                                    {
                                                      "__nodeId": "elementRender_lrims7q5",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "filterItem",
                                                        "elementOptions": {
                                                          "__nodeId": "filterItem_lrims7q6",
                                                          "__nodeName": "filterItem",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "label": "",
                                                            "labelWidth": "75px",
                                                            "labelPosition": "right",
                                                            "size": "small",
                                                            "description": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "defaultSlot": {
                                                              "__nodeId": "elementRender_lrivplvi",
                                                              "__nodeName": "elementRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "basisCommonSelect",
                                                                "elementOptions": {
                                                                  "__nodeId": "basisCommonSelect_lrivplvj",
                                                                  "__nodeName": "basisCommonSelect",
                                                                  "__nodeType": "baseNode",
                                                                  "__nodeEvent": {
                                                                    "onClear": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function onFnClear(){\n\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = true\n                                                                        const { materialId, orgId, orderId } = this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value\n                                                                        const { date, supplierId, orderOrigin } = this.$dataModels.deliveryDetailFilter.row\n                                                                        let params = { materialId, orgId, orderId }\n                                                                        if (date) {\n                                                                          params.startDate = ''\n                                                                          params.endDate = ''\n                                                                        }\n                                                                        if (supplierId > 0) {\n                                                                          params.supplierId = supplierId\n                                                                        }\n                                                                        if (orderOrigin > 0) {\n                                                                          params.orderOrigin = orderOrigin\n                                                                        }\n\n                                                                        const res = await this.$requestFns.queryDeliverydecMaterisls(params);\n                                                                        const { result, tQuantity } = res.data\n\n                                                                        this.$exposeds.get('label_lrpsrtvm').model.elementOption.value = {\n                                                                          content: tQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                        };\n                                                                        // 发料详情分解明细弹框表格\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableData.value = result\n\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = false\n\n\n                                                                      }"
                                                                    },
                                                                    "onMounted": {
                                                                      "isOn": true,
                                                                      "fn": "async function onMountedFn(){\n                                                                        this.$currentInstance.exposed.model.elementOption.value = {\n                                                                          clearable: true,\n                                                                          parameter: {\n                                                                            url: '/mquantity/suppliers-data',\n                                                                            fieldName: 'supplierName',\n                                                                            orgId: this.$globalVars.$context.orgId,\n                                                                            condtionItems: [\n                                                                              { fieldName: 'orderOrigin', op: 'in', fieldValue: [0,1,2] }\n                                                                            ]\n                                                                          }\n                                                                        };\n\n\n                                                                      }"
                                                                    },
                                                                    "onSelectionChange": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function onFnSelectionChange(item){\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = true\n                                                                        const { materialId, orgId, orderId } = this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value\n                                                                        const { date, supplierId, orderOrigin } = this.$dataModels.deliveryDetailFilter.row\n                                                                        let params = { materialId, orgId, orderId }\n                                                                        if (date) {\n                                                                          params.startDate = ''\n                                                                          params.endDate = ''\n                                                                        }\n                                                                        if (supplierId > 0) {\n                                                                          params.supplierId = supplierId\n                                                                        }\n                                                                        if (orderOrigin > 0) {\n                                                                          params.orderOrigin = orderOrigin\n                                                                        }\n\n                                                                        const res = await this.$requestFns.queryDeliverydecMaterisls(params);\n                                                                        const { result, tQuantity } = res.data\n\n                                                                        this.$exposeds.get('label_lrpsrtvm').model.elementOption.value = {\n                                                                          content: tQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                        };\n                                                                        // 发料详情分解明细弹框表格\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableData.value = result\n\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = false\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeOptions": {
                                                                    "defaultText": "",
                                                                    "limit": 10,
                                                                    "defaultProps": {
                                                                      "label": "supplierName",
                                                                      "subLabel": "subLabel",
                                                                      "nextLabel": "nextLabel",
                                                                      "value": "supplierId"
                                                                    },
                                                                    "width": "100%",
                                                                    "dropdownHeight": "300px",
                                                                    "dropdownWidth": "240px",
                                                                    "clearable": false,
                                                                    "placeholder": "请选择供应单位",
                                                                    "searchPlaceholder": "请输入关键字搜索",
                                                                    "disabled": false,
                                                                    "searchEnable": true,
                                                                    "parameter": {
                                                                      "url": "/mquantity/suppliers-data",
                                                                      "basisDataType": "supplier",
                                                                      "orgId": 0,
                                                                      "fieldName": "supplierName",
                                                                      "condtionItems": [
                                                                        {
                                                                          "fieldName": "orderOrigin",
                                                                          "op": "in",
                                                                          "fieldValue": [
                                                                            2
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "queryDataJson": {}
                                                                    },
                                                                    "addButton": false,
                                                                    "downloadIcon": false,
                                                                    "size": "default",
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "modelName": "deliveryDetailFilter.row.supplierId"
                                                                  },
                                                                  "__nodeKey": "nodeKey_basisCommonSelect_lrivplvj",
                                                                  "__description": ""
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_elementRender_lrivplvi",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_filterItem_lrims7q6",
                                                          "__description": "供应单位"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lrims7q5",
                                                      "__description": ""
                                                    },
                                                    {
                                                      "__nodeId": "elementRender_lrims8kn",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "filterItem",
                                                        "elementOptions": {
                                                          "__nodeId": "filterItem_lrims8ko",
                                                          "__nodeName": "filterItem",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "label": "",
                                                            "labelWidth": "",
                                                            "labelPosition": "right",
                                                            "size": "small",
                                                            "description": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "defaultSlot": {
                                                              "__nodeId": "elementRender_lrimsfrp",
                                                              "__nodeName": "elementRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "select",
                                                                "elementOptions": {
                                                                  "__nodeId": "select_lrimsfrq",
                                                                  "__nodeName": "select",
                                                                  "__nodeType": "baseNode",
                                                                  "__nodeOptions": {
                                                                    "multiple": false,
                                                                    "disabled": false,
                                                                    "size": "default",
                                                                    "clearable": false,
                                                                    "collapseTags": false,
                                                                    "collapseTagsTooltip": false,
                                                                    "multipleLimit": 0,
                                                                    "clearIcon": "CircleClose",
                                                                    "fitInputWidth": false,
                                                                    "filterable": false,
                                                                    "valueKey": "value",
                                                                    "placeholder": "请选择单据来源",
                                                                    "modelName": "deliveryDetailFilter.row.orderOrigin",
                                                                    "itemData": [
                                                                      {
                                                                        "value": -1,
                                                                        "label": "全部"
                                                                      },
                                                                      {
                                                                        "value": 0,
                                                                        "label": "过磅"
                                                                      },
                                                                      {
                                                                        "value": 1,
                                                                        "label": "APP"
                                                                      },
                                                                      {
                                                                        "value": 2,
                                                                        "label": "PC"
                                                                      }
                                                                    ],
                                                                    "defaultProps": {
                                                                      "label": "label",
                                                                      "value": "value"
                                                                    },
                                                                    "display": true,
                                                                    "permissionSetting": ""
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onChange": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function fnName(val){\n\n\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = true\n                                                                        const { materialId, orgId, orderId } = this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value\n                                                                        const { date, supplierId, orderOrigin } = this.$dataModels.deliveryDetailFilter.row\n                                                                        let params = { materialId, orgId, orderId }\n                                                                        if (date) {\n                                                                          params.startDate = ''\n                                                                          params.endDate = ''\n                                                                        }\n                                                                        if (supplierId > 0) {\n                                                                          params.supplierId = supplierId\n                                                                        }\n                                                                        if (orderOrigin >= 0) {\n                                                                          params.orderOrigin = orderOrigin\n                                                                        }\n\n                                                                        const res = await this.$requestFns.queryDeliverydecMaterisls(params);\n                                                                        const { result, tQuantity } = res.data\n\n                                                                        this.$exposeds.get('label_lrpsrtvm').model.elementOption.value = {\n                                                                          content: tQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                        };\n                                                                        // 发料详情分解明细弹框表格\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableData.value = result\n\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableLoading.value = false\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_select_lrimsfrq",
                                                                  "__description": "请选择",
                                                                  "__nodeStyle": {
                                                                    "width": "100px"
                                                                  }
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_elementRender_lrimsfrp",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_filterItem_lrims8ko",
                                                          "__description": "单据来源"
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lrims8kn",
                                                      "__description": ""
                                                    },
                                                    {
                                                      "__nodeId": "elementRender_lroxjnhc",
                                                      "__nodeName": "elementRender",
                                                      "__nodeType": "renderNode",
                                                      "__nodeOptions": {
                                                        "renderType": "filterItem",
                                                        "elementOptions": {
                                                          "__nodeId": "filterItem_lroxjnhd",
                                                          "__nodeName": "filterItem",
                                                          "__nodeType": "baseNode",
                                                          "__nodeOptions": {
                                                            "label": "",
                                                            "labelWidth": "75px",
                                                            "labelPosition": "right",
                                                            "size": "small",
                                                            "description": false,
                                                            "display": true,
                                                            "permissionSetting": "",
                                                            "defaultSlot": {
                                                              "__nodeId": "elementRender_lroxjoxe",
                                                              "__nodeName": "elementRender",
                                                              "__nodeType": "renderNode",
                                                              "__nodeOptions": {
                                                                "renderType": "button",
                                                                "elementOptions": {
                                                                  "__nodeId": "button_lroxjoxf",
                                                                  "__nodeName": "button",
                                                                  "__nodeType": "baseNode",
                                                                  "__nodeOptions": {
                                                                    "modelName": "",
                                                                    "size": "default",
                                                                    "plain": false,
                                                                    "content": "查询",
                                                                    "type": "info",
                                                                    "text": false,
                                                                    "link": false,
                                                                    "round": false,
                                                                    "circle": false,
                                                                    "loading": false,
                                                                    "disabled": false,
                                                                    "display": true,
                                                                    "permissionSetting": "",
                                                                    "icon": "Search"
                                                                  },
                                                                  "__nodeEvent": {
                                                                    "onClick": {
                                                                      "type": "system",
                                                                      "isOn": true,
                                                                      "fn": "async function fnName(){\n                                                                        debugger\n\n                                                                        const { materialId, orgId, orderId } = this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value\n                                                                        const { date, supplierId, orderOrigin } = this.$dataModels.deliveryDetailFilter.row\n                                                                        let params = { materialId, orgId, orderId }\n                                                                        if (date) {\n                                                                          params.startDate = ''\n                                                                          params.endDate = ''\n                                                                        }\n                                                                        if (supplierId > 0) {\n                                                                          params.supplierId = supplierId\n                                                                        }\n                                                                        if (orderOrigin > 0) {\n                                                                          params.orderOrigin = orderOrigin\n                                                                        }\n\n                                                                        const res = await this.$requestFns.queryDeliverydecMaterisls(params);\n                                                                        const { result, tQuantity } = res.data\n\n                                                                        this.$exposeds.get('label_lrpsrtvm').model.elementOption.value = {\n                                                                          content: tQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                                        };\n                                                                        // 发料详情分解明细弹框表格\n                                                                        this.$exposeds.get('tableReport_lrims616').model.tableData.value = result\n                                                                        this.$currentInstance.exposed.model.tableLoading.value = false\n                                                                        this.$dataModels.deliveryDetailFilter.row.orderOrigin = -1\n\n                                                                      }"
                                                                    }
                                                                  },
                                                                  "__nodeKey": "nodeKey_button_lroxjoxf",
                                                                  "__description": "查询"
                                                                }
                                                              },
                                                              "__nodeKey": "nodeKey_elementRender_lroxjoxe",
                                                              "__description": ""
                                                            }
                                                          },
                                                          "__nodeEvent": {},
                                                          "__nodeKey": "nodeKey_filterItem_lroxjnhd",
                                                          "__description": ""
                                                        }
                                                      },
                                                      "__nodeKey": "nodeKey_elementRender_lroxjnhc",
                                                      "__description": ""
                                                    }
                                                  ],
                                                  "display": true,
                                                  "permissionSetting": ""
                                                },
                                                "__nodeKey": "nodeKey_flexLine_lrimrhgp",
                                                "__description": ""
                                              }
                                            },
                                            "__nodeKey": "nodeKey_panel_lrimrhgn",
                                            "__description": "分解详情",
                                            "__nodeEvent": {
                                              "onMounted": {
                                                "isOn": true,
                                                "fn": "async function onMountedFn(){\n\n\n                                                  const { materialId, orgId, orderId } = this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value\n                                                  const res = await this.$requestFns.queryDeliverydecMaterisls({ materialId, orgId, orderId });\n                                                  const { result, tQuantity } = res.data\n\n                                                  this.$exposeds.get('label_lrimvw7d').model.elementOption.value = {\n                                                    content: tQuantity + ' ' + this.$exposeds.get('tableReport_lrhmbsg4').model.currentRow.value.materialUnit\n                                                  };\n                                                  // 发料详情分解明细弹框表格\n                                                  this.$exposeds.get('tableReport_lrims616').model.tableData.value = result\n                                                  this.$dataModels.deliveryDetailFilter.row.orderOrigin = -1\n\n                                                }"
                                              }
                                            }
                                          }
                                        },
                                        "__nodeKey": "nodeKey_containerRender_lrimr85l",
                                        "__description": ""
                                      }
                                    }
                                  ]
                                },
                                "__nodeEvent": {},
                                "__nodeKey": "nodeKey_flexBox_lrimr85j",
                                "__description": ""
                              }
                            },
                            "__nodeKey": "nodeKey_box_lrimr7b1",
                            "__description": ""
                          }
                        },
                        "__nodeKey": "nodeKey_containerRender_lrimr0vk",
                        "__description": ""
                      }
                    }
                  ]
                },
                "__nodeKey": "nodeKey_flexBox_lrimr0vj",
                "__description": ""
              },
              "destroyOnClose": true
            },
            "__nodeKey": "nodeKey_dialog_lrimr0vi",
            "__description": "发料详情分解详情弹框",
            "__nodeEvent": {}
          }
        ],
        "drawerOptions": []
      },
      "__nodeKey": "nodeKey_views_lrhj9f4o",
      "__description": ""
    }
  },
  "dataSource": {
    "api": {
      "config": {},
      "list": {
        "queryInventorySuppliers": {
          "url": "/mq3-mquantity/mq2-query-inventory-supplier",
          "method": "post",
          "config": {},
          "description": "获取库存材料对应的收料供应商"
        },
        "updateRdsOrder": {
          "url": "/mq3-mquantity/q-receive-to-delivery/:orgId/:id",
          "method": "put",
          "config": {},
          "description": "修改直收直发单"
        },
        "auditReceveOrder": {
          "url": "/mq3-mquantity/q-receive-audit",
          "method": "post",
          "config": {},
          "description": "提交收料单"
        },
        "updateReceiveOrder": {
          "url": "/mq3-mquantity/q-receives/:id/:orgId",
          "method": "put",
          "config": {},
          "description": "修改收料单"
        },
        "saveReceiveOrder": {
          "url": "/mq3-mquantity/q-receive-v2",
          "method": "post",
          "config": {},
          "description": "保存收料单据"
        },
        "queryReceiveConfig": {
          "url": "/mq2-report/mq2-contract-receive-config",
          "method": "post",
          "config": {},
          "description": "获取验收业务卡控配置"
        },
        "queryThirdSuppliers": {
          "url": "/shared-data/c-related-parties-company-params",
          "method": "post",
          "config": {},
          "description": "获取供应商三方关系列表"
        },
        "saveDeliveryOrder": {
          "url": "/mq3-mquantity/q-delivery-create",
          "method": "post",
          "config": {},
          "description": "保存发料单"
        },
        "updateDeliveryOrder": {
          "url": "/mq3-mquantity/q-delivery-update/:id/:orgId",
          "method": "put",
          "config": {},
          "description": "修改发料单据"
        },
        "auditDeliveryOrder": {
          "url": "/mq3-mquantity/q-delivery-audit",
          "method": "post",
          "config": {},
          "description": "提交发料单"
        },
        "queryDeliveryQuantity": {
          "url": "/mq3-mquantity/q-inventory-materials",
          "method": "post",
          "config": {},
          "description": "发料库存选材"
        },
        "queryTreeList": {
          "url": "/shared-data/get-tree-lists",
          "method": "get",
          "config": {},
          "description": "获取树结构数据"
        },
        "getOrgList": {
          "url": "/shared-data/get-tree-lists",
          "method": "get",
          "config": {},
          "description": "获取组织机构"
        },
        "queryDeliveryOrders": {
          "url": "/mq3-mquantity/q-delivery-registration-params",
          "method": "post",
          "config": {},
          "description": "获取发料主表"
        },
        "queryDeliveryOrderItems": {
          "url": "/mq3-mquantity/q-delivery-collection-params",
          "method": "post",
          "config": {},
          "description": "获取发料从表"
        },
        "queryRdsOrderData": {
          "url": "/mq3-mquantity/q-receive-to-delivery-params",
          "method": "post",
          "config": {},
          "description": "获取直进直出主表"
        },
        "getRdsOrderItems": {
          "url": "/mq3-mquantity/q-receive-to-delivery-params/:id/:orgId",
          "method": "get",
          "config": {},
          "description": "获取直进直出详情"
        },
        "auditReceive": {
          "url": "/mq3-mquantity/q-receive-audit",
          "method": "post",
          "config": {},
          "description": "收料提交"
        },
        "unAuditReceive": {
          "url": "/mq3-mquantity/q-receive-unaudit",
          "method": "post",
          "config": {},
          "description": "收料撤销提交"
        },
        "getReceiveConfigData": {
          "url": "/mq2-report/mq2-contract-receive-config",
          "method": "post",
          "config": {},
          "description": "计划卡验收配置"
        },
        "queryContractReceiveOrder": {
          "url": "/ma3-contract/m-contract-receive-order",
          "method": "post",
          "config": {},
          "description": "合同卡验收配置"
        },
        "getReceiveData": {
          "url": "/mq3-mquantity/q-receives-params",
          "method": "post",
          "config": {},
          "description": "获取收料主表"
        },
        "queryReceiveMoreMaterial": {
          "url": "/mq3-mquantity/q-receive-more-materials-params",
          "method": "post",
          "config": {},
          "description": "获取收料明细(print)"
        },
        "queryPlanReceiveQuantity": {
          "url": "/mq3-mquantity/q-plan-receive-quantity",
          "method": "post",
          "config": {},
          "description": "查询计划卡控验收量"
        },
        "deleteReceive": {
          "url": "/mq3-mquantity/q-receives/:id/:orgId",
          "method": "delete",
          "config": {},
          "description": "收料删除"
        },
        "auditDelivery": {
          "url": "/mq3-mquantity/q-delivery-audit",
          "method": "post",
          "config": {},
          "description": "发料提交"
        },
        "queryLabourAllotParams": {
          "url": "/mq3-mquantity/q-labour-allots-params",
          "method": "post",
          "config": {},
          "description": "查询发料对应的调拨单"
        },
        "unAuditDelivery": {
          "url": "/mq3-mquantity/q-delivery-unaudit",
          "method": "post",
          "config": {},
          "description": "撤销提交发料"
        },
        "deleteDelivery": {
          "url": "/mq3-mquantity/q-delivery/:id/:orgId",
          "method": "delete",
          "config": {},
          "description": "删除发料"
        },
        "unAuditRds": {
          "url": "/mq3-mquantity/q-receive-to-delivery-unaudit",
          "method": "post",
          "config": {},
          "description": "撤销直进直出"
        },
        "auditRds": {
          "url": "/mq3-mquantity/q-receive-to-delivery-audit",
          "method": "post",
          "config": {},
          "description": "提交直进直出"
        },
        "deleteRds": {
          "url": "/mq3-mquantity/q-receive-to-delivery-params/:id/:orgId",
          "method": "delete",
          "config": {},
          "description": "删除直进直出"
        },
        "queryPurchaseContractMaterial": {
          "url": "/mq3-mquantity/q-receive-purchase-contract-material",
          "method": "post",
          "config": {},
          "description": "获取采购合同材料"
        },
        "queryPurchasePlanMaterials": {
          "url": "/mq3-mquantity/q-purchase-plan-material-params",
          "method": "post",
          "config": {},
          "description": "获取采购计划材料"
        },
        "queryurchasePlanItems": {
          "url": "/mq3-mquantity/q-purchase-plans/:id/:orgId",
          "method": "get",
          "config": {},
          "description": "获取采购计划明细"
        },
        "createReceiveOrder": {
          "url": "/mq3-mquantity/q-receive-v2",
          "method": "post",
          "config": {},
          "description": "添加收料单据"
        },
        "queryConfigData": {
          "url": "/shared-data/configuration/get-config-data",
          "method": "get",
          "config": {},
          "description": "获取运营平台配置"
        },
        "getReceiveOrgId": {
          "url": "/mq2/mq2-query-child-org",
          "method": "get",
          "config": {},
          "description": "获取组织id"
        },
        "queryReceiveInventoryMaterials": {
          "url": "/mq3-mquantity/q-receive-inventory-material",
          "method": "post",
          "config": {},
          "description": "获取收料库存"
        },
        "queryInventoryMaterials": {
          "url": "/mq3-mquantity/q-inventory-materials",
          "method": "post",
          "config": {},
          "description": "发料库存选材"
        },
        "queryReceiveGhPlanMaterials": {
          "url": "/mq3-mquantity/q-receive-gh-plan-materials",
          "method": "post",
          "config": {},
          "description": "总控计划选材接口"
        },
        "getGhList": {
          "url": "/shared-data/get-tree-lists",
          "method": "get",
          "config": {},
          "description": "常用工号"
        },
        "queryDeliveryReturnMaterials": {
          "url": "/mq3-mquantity/q-delivery-materials-return",
          "method": "post",
          "config": {},
          "description": "退发料选材"
        },
        "getDeliveryGhList": {
          "url": "/mq3-mquantity/q-delivery-common-gh/:orgId/:labourId",
          "method": "get",
          "config": {},
          "description": "获取发料工号"
        },
        "handleDeliveryMaterials": {
          "url": "/mq3-mquantity/q-delivery-materials-handles",
          "method": "post",
          "config": {},
          "description": "发料材料分解"
        },
        "createDeliveryOrders": {
          "url": "/mq3-mquantity/q-delivery-create",
          "method": "post",
          "config": {},
          "description": "添加发料单"
        },
        "createReceiveToDeliveryOrder": {
          "url": "/mq3-mquantity/q-receive-to-delivery",
          "method": "post",
          "config": {},
          "description": "添加直进直出单据"
        },
        "getReceive": {
          "url": "/mq3-mquantity/q-receives/:orgId/:id",
          "method": "get",
          "config": {},
          "description": "获取收料单据详情"
        },
        "getqDelivery": {
          "url": "/mq3-mquantity/q-delivery-one/:orgId/:id",
          "method": "get",
          "config": {},
          "description": "获取发料单据详情"
        },
        "queryDeliverydecMaterisls": {
          "url": "/mq3-mquantity/q-delivery-query-more-materials",
          "method": "post",
          "config": {},
          "description": "发料查询分解材料"
        },
        "getDictionaryData": {
          "url": "/shared-data/g-data-dictionary",
          "method": "get",
          "config": {},
          "description": "获取字典数据"
        },
        "queryReturnSuppliers": {
          "url": "/mq3-mquantity/q-supplier-list",
          "method": "post",
          "config": {},
          "description": "退货供应商列表"
        },
        "queryInventoryData": {
          "url": "/mq3-mquantity/q-receive-inventory-material",
          "method": "post",
          "config": {},
          "description": "退收库存选材"
        },
        "matchItemBarCode": {
          "url": "/mq3-mquantity/q-delivery-materials-handles",
          "method": "post",
          "config": {},
          "description": "材料分解到条码维度"
        },
        "getOrderCode": {
          "url": "/shared-data/q-orderCode",
          "method": "post",
          "config": {},
          "description": "生成单据编号"
        },
        "queryMaterialsPlan": {
          "url": "/mq3-mquantity/q-plan-receive-quantity",
          "method": "post",
          "config": {},
          "description": "获取指定材料的计划量"
        },
        "saveRdsOrder": {
          "url": "/mq3-mquantity/q-receive-to-delivery",
          "method": "post",
          "config": {},
          "description": "保存直收直发单"
        },
        "queryGhOfLabour": {
          "url": "/mq3-mquantity/q-delivery-common-gh/:orgId/:labourId",
          "method": "get",
          "config": {},
          "description": "获取指定用料单位有过发料记录的工号信息"
        },
        "uploadGpy": {
          "url": "/mq3-mquantity/fs/fs-upload",
          "method": "post",
          "config": {},
          "description": "高拍仪上传"
        }
      }
    },
    "requestConfig": {
      "queryInventorySuppliers": {
        "description": "获取存在收料记录的供应商",
        "apiconfig": "queryInventorySuppliers",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "paramsModel": {
            "delivery": {
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "list",
                "op": "in",
                "defaultValue": [
                  0,
                  1,
                  2
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          },
          "dataModelName": "inventoryFilterModel"
        }
      },
      "updateRdsOrder": {
        "description": "修改直收直发单",
        "apiconfig": "updateRdsOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "orderItems",
          "dataModelName": "rdsFormModel",
          "paramsModel": {
            "qReceiveToDelivery": {
              "orgId": {
                "valueType": "number",
                "resolveType": "routeParams,bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "defaultValue": 2,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "maker": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "makerDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "remark": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "routeParams,bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            },
            "qReceive": {
              "originalOrderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "priceType": {
                "valueType": "string",
                "defaultValue": "合同价",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "freight": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "defaultValue": 10,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderType": {
                "valueType": "number",
                "defaultValue": 4,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "defaultValue": 2,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "plateNumber": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "oriSupplierId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "settlementId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "settlementName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "makerDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "maker": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "labourId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "purchaseMethod": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "purchaseMethodFullName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "returnDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "isRds": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "rdsId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "taxRate": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            },
            "qReceiveMoreMaterials": [],
            "qReceivePhotos": []
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig) {\n            const { rdsFormModel } = this.$dataModels\n            const { qReceive, qReceivePhotos,qDelivery, qDeliveryMoreMaterials, qDeliveryPhotos } = this.$dataModels.rdsFormModel\n            let newItems = JSON.parse(JSON.stringify(rdsFormModel.qReceiveMoreMaterials))\n            if (rdsFormModel.deleteItems.length) {\n              newItems.push(...rdsFormModel.deleteItems)\n            }\n            requestConfig.data.qReceiveMoreMaterials = newItems\n            newItems.forEach(item => {\n              const receiveItem = JSON.parse(JSON.stringify(item))\n              const idx = qDeliveryMoreMaterials.findIndex(t => t.materialId == item.materialId && t.itemBarCode == item.itemBarCode )\n              if (idx >-1) {\n                const originId = qDeliveryMoreMaterials[idx].id\n                qDeliveryMoreMaterials[idx] = Object.assign(receiveItem, { id: originId, orderId: qDelivery.id} )\n              }else {\n                receiveItem.orderId = qDelivery.id\n                qDeliveryMoreMaterials.push(receiveItem)\n              }\n            })\n\n\n            let newPhotos = JSON.parse(JSON.stringify(qReceivePhotos))\n            if (rdsFormModel.deletePhotos.length) {\n              newPhotos.push(...rdsFormModel.deletePhotos)\n            }\n            requestConfig.data.qReceivePhotos = newPhotos\n\n            let isLabour = false\n            let deliveryS = []\n\n            if (qReceive.serviceType == 10) {\n              isLabour = true\n            }\n            deliveryS.push({\n              qDelivery,\n              qDeliveryMoreMaterials,\n              qDeliveryPhotos\n            })\n            requestConfig.data.deliveryS = deliveryS\n            requestConfig.data.isLabour = isLabour\n            requestConfig.data.qReceiveGpys =this.$dataModels.rdsFormModel.qReceiveGpys\n            requestConfig.data.qReceiveGpys.forEach(item=>{\n              item.id = null\n              item.isRemoved = false\n            })\n            return requestConfig;\n          }"
        }
      },
      "auditReceveOrder": {
        "description": "提交收料单",
        "apiconfig": "auditReceveOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "single",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "userName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "updateReceiveOrder": {
        "description": "修改收料单据",
        "apiconfig": "updateReceiveOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "orderItems",
          "dataModelName": "receiveFormModel",
          "paramsModel": {
            "qReceive": {
              "id": {
                "valueType": "number",
                "resolveType": "routeParams,bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "routeParams,bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "supplierName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "plateNumber": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "purchaseMethod": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "originalOrderCode": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "settlementName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "remark": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "settlementId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "priceType": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orderType": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "taxRate": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "purchaseMethodFullName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "maker": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "makerDate": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              }
            },
            "qReceiveMoreMaterials": [],
            "qReceivePhotos": [],
            "orderCodeCondtion": {
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "params": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "moduleCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "condtionItems": {
                "valueType": "list",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            console.log(123123);\n            debugger\n            const { receiveFormModel} = this.$dataModels\n            let newItems = JSON.parse(JSON.stringify(receiveFormModel.qReceiveMoreMaterials))\n            if (receiveFormModel.deleteItems.length) {\n              newItems.push(...receiveFormModel.deleteItems)\n            }\n            requestConfig.data.qReceiveMoreMaterials = newItems\n\n            let newPhotos = JSON.parse(JSON.stringify(receiveFormModel.qReceivePhotos))\n            if (receiveFormModel.deletePhotos.length) {\n              newPhotos.push(...receiveFormModel.deletePhotos)\n            }\n            requestConfig.data.qReceivePhotos = newPhotos\n            requestConfig.data.qReceiveGpys = this.$dataModels.receiveFormModel.qReceiveGpys\n            requestConfig.data.qReceiveGpys.map(item => { item.isRemoved = false})\n            debugger\n            return requestConfig;\n          }"
        }
      },
      "saveReceiveOrder": {
        "description": "保存收料单据",
        "apiconfig": "saveReceiveOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "orderItems",
          "dataModelName": "receiveFormModel",
          "paramsModel": {
            "orderCodeCondtion": {
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "params": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "condtionItems": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "moduleCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            },
            "qReceive": {
              "purchaseMethodFullName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "maker": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "makerDate": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "orderOrigin": {
                "valueType": "number",
                "defaultValue": 2,
                "resolveType": "",
                "isCache": false,
                "isSkipVal": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "supplierName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "plateNumber": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "purchaseMethod": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "originalOrderCode": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "settlementName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "remark": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "settlementId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "priceType": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "orderType": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "defaultValue": 4
              },
              "orderDate": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "taxRate": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              }
            },
            "qReceiveMoreMaterials": [],
            "qReceivePhotos": []
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { receiveFormModel } = this.$dataModels\n            const { qReceive, qReceiveMoreMaterials} = receiveFormModel\n            let obj = {}\n            if (qReceive.serviceType<0) {\n              qReceiveMoreMaterials.forEach(t => {\n                obj[`${t.orgId}|${t.materialId}|${t.itemBarCode}`]=t\n              })\n            }\n            requestConfig.data.barCodeMaterialMap = obj\n            requestConfig.data.materialListMap = {}\n            requestConfig.data.qReceiveMoreOrders = qReceiveMoreMaterials\n            requestConfig.data.qReceiveGpys = this.$dataModels.receiveFormModel.qReceiveGpys\n            return requestConfig;\n          }"
        }
      },
      "queryReceiveConfig": {
        "description": "获取验收的业务卡控配置",
        "apiconfig": "queryReceiveConfig",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "single",
          "paramsModel": {
            "singleTable": {
              "fullId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "queryThirdSuppliers": {
        "description": "获取供应商的三方关系",
        "apiconfig": "queryThirdSuppliers",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "paramsModel": {
            "qReceive": {
              "supplierName": {
                "valueType": "string",
                "op": "like",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            return requestConfig;\n          }"
        }
      },
      "getOrderCode": {
        "description": "获取单据编号",
        "apiconfig": "getOrderCode",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelName": "orderCodeCondtion",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "moduleCode": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "params": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "condtionItems": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            return requestConfig;\n          }"
        }
      },
      "auditDeliveryOrder": {
        "description": "提交发料单据",
        "apiconfig": "auditDeliveryOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "single",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "userName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "saveDeliveryOrder": {
        "description": "保存发料单据",
        "apiconfig": "saveDeliveryOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "orderItems",
          "dataModelName": "deliveryFormModel",
          "paramsModel": {
            "orderCodeCondtion": {
              "condtionItems": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "params": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "moduleCode": {
                "valueType": "string",
                "defaultValue": "mq_delivery",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            },
            "qDelivery": {
              "ghFullId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "allotId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "makerDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "maker": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "labourId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "labourName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "oriLabourId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "teamId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "teamName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "originalOrderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "plateNumber": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "scrapReason": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghFullName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "oriGhId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "remark": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "methodHandle": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderType": {
                "valueType": "number",
                "defaultValue": 4,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "defaultValue": 2,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "isToProduction": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            },
            "qDeliveryMoreMaterials": [],
            "qDeliveryMoreOrders": [],
            "qDeliveryPhotos": []
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            requestConfig.data.qDeliveryGpys = this.$dataModels.deliveryFormModel.qDeliveryGpys\n            return requestConfig;\n          }"
        }
      },
      "updateDeliveryOrder": {
        "description": "修改发料单据",
        "apiconfig": "updateDeliveryOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "orderItems",
          "dataModelName": "deliveryFormModel",
          "paramsModel": {
            "qDelivery": {
              "ghFullId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "bodyParams,routeParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams,routeParams",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "labourId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "labourName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "oriLabourId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "teamId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "teamName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "originalOrderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "plateNumber": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "scrapReason": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghFullName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "oriGhId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "remark": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "methodHandle": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderType": {
                "valueType": "number",
                "defaultValue": 4,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "defaultValue": 2,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "isToProduction": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            },
            "qDeliveryMoreMaterials": [],
            "qDeliveryMoreOrders": [],
            "qDeliveryPhotos": [],
            "orderCodeCondtion": {
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "moduleCode": {
                "valueType": "string",
                "defaultValue": "mq_delivery",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "params": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "condtionItems": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { deliveryFormModel } = this.$dataModels\n            let newItems = JSON.parse(JSON.stringify(deliveryFormModel.qDeliveryMoreOrders))\n            if (deliveryFormModel.deleteItems.length) {\n              newItems.push(...deliveryFormModel.deleteItems)\n            }\n            requestConfig.data.qDeliveryMoreOrders = newItems\n            let newPhotos = JSON.parse(JSON.stringify(deliveryFormModel.qDeliveryPhotos))\n            if (deliveryFormModel.deletePhotos.length) {\n              newPhotos.push(...deliveryFormModel.deletePhotos)\n            }\n            requestConfig.data.qDeliveryPhotos = newPhotos\n            requestConfig.data.qDeliveryGpys = this.$dataModels.deliveryFormModel.qDeliveryGpys\n            requestConfig.data.qDeliveryGpys.forEach(item=>{\n              item.id=null\n            })\n            return requestConfig;\n          }"
        }
      },
      "queryDeliveryQuantity": {
        "description": "发料时获取库存数据",
        "apiconfig": "queryDeliveryQuantity",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "dataModelName": "inventoryFilterModel",
          "paramsModel": {
            "delivery": {
              "isAssem": {
                "valueType": "boolean",
                "defaultValue": true,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "dictType": {
                "valueType": "string",
                "defaultValue": "materialType",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "materialName": {
                "valueType": "string",
                "op": "like",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "materialModel": {
                "valueType": "string",
                "op": "like",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "quantity": {
                "valueType": "number",
                "op": "gt",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "materialId": {
                "valueType": "list",
                "op": "notIn",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "dimensionType": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "filterSupplierId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "filterSupplierName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "order": {
                "valueType": "list",
                "defaultValue": [
                  [
                    "submitDate",
                    "DESC"
                  ]
                ],
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "selectData": {
                "valueType": "list",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "itemBarCode": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false,
                "op": "like"
              },
              "supplierName": {
                "valueType": "string",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            if (requestConfig.data.orderOrigin==3){\n              // requestConfig.data.orderOrigin = null\n              delete requestConfig.data.orderOrigin\n            }\n            return requestConfig;\n          }"
        }
      },
      "queryChildOrgList": {
        "description": "获取下属组织列表",
        "apiconfig": "queryTreeList",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "parentId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": true,
                "isCache": false
              },
              "path": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "serviceName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            return requestConfig;\n          }"
        }
      },
      "getReceiveOrgId": {
        "description": "获取组织id",
        "apiconfig": "getReceiveOrgId",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "orgParams": {
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "queryParams",
                "isCache": true,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            return requestConfig;\n          }"
        }
      },
      "getReceiveData": {
        "description": "获取收料主表",
        "apiconfig": "getReceiveData",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "dataModelType": "single",
          "dataModelName": "receiveFilter",
          "paramsModel": {
            "qReceiveModel": {
              "orgId": {
                "valueType": "number",
                "op": "in",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orderCode": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "orderOrigin": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 2,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "supplierId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "exitTime": {
                "valueType": "string",
                "op": "between",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "isRed": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "recordedDate": {
                "valueType": "string",
                "op": "between",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "isRemoved": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "settlementId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "isVoid": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "receiveType": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "isRds": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "isProduction": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orderDate": {
                "valueType": "string",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const {receiveFilter} = this.$dataModels;\n            const orgId = receiveFilter.qReceiveModel.orgId || this.$globalVars.$context.orgId;\n            const data = await this.$requestFns.getReceiveOrgId({ orgId: orgId});\n            if(!data.error){\n              requestConfig.data.condtionItems.splice(0, 1, {\n                fieldName: 'orgId',\n                op: 'in',\n                fieldValue: data.data.childOrgIds\n              })\n            }else{\n              requestConfig.data.condtionItems.splice(0, 1, {\n                fieldName: 'orgId',\n                op: 'in',\n                fieldValue: [this.$globalVars.$context.orgId]\n              })\n            }\n            requestConfig.data.order = [[\"isAudit\"], [\"sortOrderCode\", \"DESC\"], [\"makerDate\", \"DESC\"], [\"orderCode\", \"DESC\"]];\n            requestConfig.data.queryMain = false;\n            return requestConfig;\n          }"
        },
        "afterReq": {
          "isOn": true,
          "fn": "async function afterReq(responseResult){\n            this.$exposeds.get('tableReport_lopncx48').methods.clearTable();\n            return responseResult;\n          }"
        }
      },
      "getOrgList": {
        "description": "获取组织机构",
        "apiconfig": "getOrgList",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "singleTable": {
              "parentId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": -1,
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "path": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "organizations-parent",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "serviceName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "node-mi-external-service",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        }
      },
      "getGhList": {
        "description": "获取常用工号",
        "apiconfig": "getGhList",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "serviceName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "node-mb2-shared-data-service",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "path": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "/shared-data/c-ghs",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "parentId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": -1,
                "resolveType": "queryParams",
                "isCache": true,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { orgId, parentId, orgType, orgExtType } = this.$globalVars.$context;\n            if (orgExtType === 'production' &&orgType === 'project') {\n              requestConfig.params.orgId = parentId;\n            } else {\n              requestConfig.params.orgId = orgId;\n            }\n            if (requestConfig.params.parentId === orgId){\n              requestConfig.params.parentId = -1;\n            }\n            return requestConfig;\n          }"
        }
      },
      "getReceive": {
        "description": "获取收料单据详情",
        "apiconfig": "getReceive",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n\n            return requestConfig;\n          }"
        },
        "afterReq": {
          "isOn": true,
          "fn": "async function afterReq(responseResult){\n\n            return responseResult;\n          }"
        }
      },
      "queryDeliveryOrders": {
        "description": "查询发料主表",
        "apiconfig": "queryDeliveryOrders",
        "paramsConfig": {
          "dataModelName": "deliveryFilter",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "op": "in",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "labourId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "ghId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "isRemoved": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "isRds": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "allotId": {
                "valueType": "list",
                "op": "in",
                "defaultValue": [
                  0,
                  null
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 2,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "isRed": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "deliveryType": {
                "valueType": "list",
                "op": "in",
                "defaultValue": [
                  0,
                  3
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          },
          "paramsType": "paginationParams"
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { deliveryFilter } = this.$dataModels;\n            const orgId = deliveryFilter.singleTable.orgId || this.$globalVars.$context.orgId;\n            const data = await this.$requestFns.getReceiveOrgId({orgId: orgId});\n            if (!data.error) {\n              requestConfig.data.condtionItems.splice(0, 1, {\n                fieldName: 'orgId',\n                op: 'in',\n                fieldValue: data.data.childOrgIds\n              })\n            } else {\n              requestConfig.data.condtionItems.splice(0, 1, {\n                fieldName: 'orgId',\n                op: 'in',\n                fieldValue: [this.$globalVars.$context.orgId]\n              })\n            }\n            if (this.$dataModels.deliveryFilter.singleTable.teamId){\n              requestConfig.data.condtionItems.push({\n                fieldName: 'teamId',\n                op: 'eq',\n                fieldValue: this.$dataModels.deliveryFilter.singleTable.teamId\n              })\n            }\n            requestConfig.data.order = [[\"isAudit\"], [\"sortOrderCode\", \"DESC\"], [\"makerDate\", \"DESC\"], [\"orderCode\", \"DESC\"]];\n            requestConfig.data.queryMain = false;\n            return requestConfig;\n          }"
        },
        "afterReq": {
          "isOn": true,
          "fn": "async function afterReq(responseResult){\n            this.$exposeds.get('tableReport_lozuudpx').methods.clearTable();\n            return responseResult;\n          }"
        }
      },
      "queryDeliveryOrderItems": {
        "description": "查询发料从表",
        "apiconfig": "queryDeliveryOrderItems",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "deliveryItemParams": {
              "isTemp": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "id": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orderId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "order": {
                "valueType": "list",
                "op": "eq",
                "defaultValue": [
                  [
                    "sortCode"
                  ]
                ],
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "condtionItems": {
                "valueType": "list",
                "op": "eq",
                "defaultValue": [],
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n\n            return requestConfig;\n          }"
        }
      },
      "queryRdsOrderData": {
        "description": "查询直进直出主表",
        "apiconfig": "queryRdsOrderData",
        "paramsConfig": {
          "dataModelName": "receiveDeliveryFilter",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "op": "in",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "settlementId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "labourId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "ghId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "isRemoved": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "orderOrigin": {
                "valueType": "list",
                "defaultValue": [
                  2
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "in"
              },
              "teamId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false,
                "op": "eq"
              }
            }
          },
          "paramsType": "paginationParams"
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { receiveDeliveryFilter } = this.$dataModels;\n            const orgId = receiveDeliveryFilter.singleTable.orgId || this.$globalVars.$context.orgId;\n            const data = await this.$requestFns.getReceiveOrgId({ orgId: orgId });\n            if (!data.error) {\n              requestConfig.data.condtionItems.splice(0, 1, {\n                fieldName: 'orgId',\n                op: 'in',\n                fieldValue: data.data.childOrgIds\n              })\n            } else {\n              requestConfig.data.condtionItems.splice(0, 1, {\n                fieldName: 'orgId',\n                op: 'in',\n                fieldValue: [this.$globalVars.$context.orgId]\n              })\n            }\n            if (receiveDeliveryFilter.singleTable.teamId) {\n              requestConfig.data.condtionItems.push({\n                fieldName: 'teamId',\n                op: 'eq',\n                fieldValue: receiveDeliveryFilter.singleTable.teamId\n              })\n            }\n            requestConfig.data.queryMain = false;\n            return requestConfig;\n          }"
        },
        "afterReq": {
          "isOn": true,
          "fn": "async function afterReq(responseResult){\n            this.$exposeds.get('tableReport_lozuueqo').methods.clearTable();\n            return responseResult;\n          }"
        }
      },
      "getRdsOrderItems": {
        "description": "获取直进直出详情",
        "apiconfig": "getRdsOrderItems",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "routeParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "routeParams",
                "isCache": false
              }
            }
          }
        }
      },
      "auditReceive": {
        "description": "收料提交",
        "apiconfig": "auditReceive",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "userName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "lastProjectId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            // requestConfig.data = { \"id\": 1709508755493888, \"orgId\": 1324539576579072, \"userName\": \"徐环环\", \"readSnapshot\": true }\n            return requestConfig;\n          }"
        }
      },
      "unAuditReceive": {
        "description": "收料撤销提交",
        "apiconfig": "unAuditReceive",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "userName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        }
      },
      "getReceiveConfigData": {
        "description": "获取收料卡控配置",
        "apiconfig": "getReceiveConfigData",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "fullId": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "queryReceiveMoreMaterial": {
        "description": "获取收料明细",
        "apiconfig": "queryReceiveMoreMaterial",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "orderId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "order": {
                "valueType": "list",
                "op": "eq",
                "defaultValue": [
                  [
                    "sortCode"
                  ]
                ],
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "isRemoved": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n\n            requestConfig.data.condtionItems = [\n              {\n                fieldName: 'orderId',\n                op: 'eq',\n                fieldValue: requestConfig.data.orderId\n              },\n              {\n                fieldName: 'isRemoved',\n                op: 'eq',\n                fieldValue: false\n              }\n            ]\n            requestConfig.data.order = [[\"sortCode\"]]\n            return requestConfig;\n          }"
        }
      },
      "queryContractReceiveOrder": {
        "description": "合同卡验收配置",
        "apiconfig": "queryContractReceiveOrder",
        "paramsConfig": {
          "paramsModel": {},
          "dataModelType": "single"
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            debugger\n            const { orgId, userId, tenantId, lastProject } = this.$globalVars.$context\n            console.log(this.$dataModels.controlReceiveParams.conditionItems);\n            debugger\n            requestConfig.data = this.$dataModels.controlReceiveParams\n            return requestConfig;\n          }"
        }
      },
      "queryPlanReceiveQuantity": {
        "description": "计划卡验收配置",
        "apiconfig": "queryPlanReceiveQuantity",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "materialIds": {
                "valueType": "list",
                "op": "in",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        }
      },
      "deleteReceive": {
        "description": "收料删除",
        "apiconfig": "deleteReceive",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false
              }
            }
          }
        }
      },
      "auditDelivery": {
        "description": "提交发料",
        "apiconfig": "auditDelivery",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "userName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "unAuditDelivery": {
        "description": "发料撤销提交",
        "apiconfig": "unAuditDelivery",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "userName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "deleteDelivery": {
        "description": "删除发料",
        "apiconfig": "deleteDelivery",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        }
      },
      "queryLabourAllotParams": {
        "description": "查询调拨单",
        "apiconfig": "queryLabourAllotParams",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "order": {
                "valueType": "list",
                "op": "eq",
                "defaultValue": [
                  "id"
                ],
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            requestConfig.data.order = [\"id\"];\n            requestConfig.data.condtionItems = [\n              {\n                fieldName: 'id',\n                op: 'eq',\n                fieldValue: requestConfig.data.id\n              },\n              {\n                fieldName: 'orgId',\n                op: 'eq',\n                fieldValue: requestConfig.data.orgId\n              }\n            ]\n            return requestConfig;\n          }"
        }
      },
      "auditRds": {
        "description": "提交直进直出",
        "apiconfig": "auditRds",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "userName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "lastProjectId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "unAuditRds": {
        "description": "撤销直进直出",
        "apiconfig": "unAuditRds",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "userId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "userName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "deleteRds": {
        "description": "删除直进直出",
        "apiconfig": "deleteRds",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        }
      },
      "querySupplierLabours": {
        "description": "获取供应单位",
        "apiconfig": "getOrgList",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "singleTable": {
              "path": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "/shared-data/g-childs-org-filter-out-production",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "serviceName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "node-mb2-shared-data-service",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "parentId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": -1,
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            return requestConfig;\n          }"
        }
      },
      "queryPurchaseContractMaterial": {
        "description": "获取合同材料",
        "apiconfig": "queryPurchaseContractMaterial",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "paramsModel": {
            "singleTable": {
              "supplierId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "contractCode": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "materialModel": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "materialName": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              }
            }
          },
          "dataModelName": "contractModel"
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { orgId, userId, tenantId, lastProject } = this.$globalVars.$context;\n            requestConfig.data.condtionItems.forEach(ele=>{\n              if (ele.fieldName==='orgId'){\n                ele.fieldValue = lastProject.id\n              }\n            })\n            return requestConfig;\n          }"
        }
      },
      "queryPurchasePlanMaterials": {
        "description": "获取采购计划主表",
        "apiconfig": "queryPurchasePlanMaterials",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "paramsModel": {
            "singleTable": {
              "purchaseMethod": {
                "valueType": "string",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "planName": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "orgId": {
                "valueType": "list",
                "op": "in",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "order": {
                "valueType": "list",
                "defaultValue": [
                  [
                    "isSubmit"
                  ],
                  [
                    "orderCode",
                    "DESC"
                  ]
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "isAssembox": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          },
          "dataModelName": "filterPlanModel"
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n\n            return requestConfig;\n          }"
        }
      },
      "queryurchasePlanItems": {
        "description": "采购计划明细",
        "apiconfig": "queryurchasePlanItems",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "routeParams",
                "isCache": false
              }
            }
          }
        }
      },
      "createReceive": {
        "description": "添加收料",
        "apiconfig": "createReceiveOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelName": "receiveFormModel",
          "paramsModel": {
            "qReceive": {
              "orgId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "originalOrdeCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "settlementId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "settlementName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "plateNumber": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "taxRate": {
                "valueType": "string",
                "defaultValue": "13",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "freight": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "defaultValue": 10,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "returnOrderType": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "purchaseMethod": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "remark": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            },
            "qReceiveMoreOrders": [],
            "qReceiveMoreMaterials": [],
            "qReceivePhotos": [],
            "materialItems": []
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n\n            const { orgId, userId, tenantId } = this.$globalVars.$context\n            const codeS = { '10': '收料-', '20': '调入-', '-11': '退收料-', '-21': '退调入-' }\n            const obj = {\n              orgId: orgId,\n              id: null,\n              recordedDate: this.$dataModels.receiveFormModel.qReceive.exitTime,\n              moduleCode: 'mq_receive',\n              params: {\n                code: codeS[this.$dataModels.receiveFormModel.qReceive.serviceType + ''],\n              },\n              condtionItems: [\n                {\n                  fieldName: 'orderOrigin',\n                  op: 'eq',\n                  fieldValue: 2\n                }\n              ]\n            }\n\n            this.$dataModels.receiveFormModel.orderCodeCondtion = obj\n            Object.assign(this.$dataModels.receiveFormModel.qReceive, {\n              \"orderDate\": \"\",\n              \"orderOrigin\": 2,\n              \"originalOrderId\": 0,\n              \"returnDate\": \"\",\n              \"oriOrgId\": \"\",\n              \"oriLabourId\": \"\"\n            })\n            console.log(this.$dataModels.receiveFormModel);\n\n            requestConfig.data = this.$dataModels.receiveFormModel\n            requestConfig.data.isComplex = true\n            requestConfig.data.materialListMap = {}\n            requestConfig.data.barCodeMaterialMap = {}\n            if (this.$dataModels.receiveFormModel.qReceive.serviceType < 0){\n              this.$dataModels.receiveFormModel.qReceiveMoreMaterials.forEach(t=>{\n                const key = `${t.orgId}|${t.materialId}|${t.itemBarCode}`\n                this.$dataModels.receiveFormModel.barCodeMaterialMap[key] = t\n              })\n\n            }\n\n            return requestConfig;\n          }"
        },
        "afterReq": {
          "isOn": true,
          "fn": "async function afterReq(responseResult){\n            return responseResult;\n          }"
        }
      },
      "queryConfigData": {
        "description": "获取运营平台配置",
        "apiconfig": "queryConfigData",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "paramsKey": {
                "valueType": "list",
                "op": "in",
                "defaultValue": [],
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "categoryCode": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "global",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              },
              "namespaceCode": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "sysConfig",
                "resolveType": "queryParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        }
      },
      "queryReceiveInventoryMaterials": {
        "description": "获取收料库存",
        "apiconfig": "queryReceiveInventoryMaterials",
        "paramsConfig": {
          "paramsModel": {
            "singleTable": {
              "dates": {
                "valueType": "list",
                "op": "between",
                "defaultValue": [],
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "actionType": {
                "valueType": "string",
                "defaultValue": "批次维度",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "lt"
              },
              "orgId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "lt"
              },
              "supplierId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "serviceType": {
                "valueType": "number",
                "defaultValue": 10,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "materialName": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false,
                "op": "like"
              },
              "materialModel": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false,
                "op": "like"
              },
              "itemBarCode": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false,
                "op": "like"
              },
              "orderCode": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false,
                "op": "like"
              },
              "materialIds": {
                "valueType": "list",
                "defaultValue": [
                  0
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "in"
              },
              "materialSummaryIds": {
                "valueType": "list",
                "defaultValue": [
                  0
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "in"
              }
            }
          },
          "paramsType": "paginationParams",
          "dataModelName": "receiveInventory"
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { qReceive } = this.$dataModels.receiveFormModel;\n            if (!qReceive.supplierId) {\n              this.$vueGlobal.$message({\n                type: 'error',\n                message: '请选择供应商'\n              })\n              return false\n            }\n            requestConfig.data.actionType = '批次维度';\n            requestConfig.data.materialIds = [0];\n            requestConfig.data.materialSummaryIds = [0];\n            requestConfig.data.recordedDate = qReceive.recordedDate;\n            requestConfig.data.isAssem = true;\n            requestConfig.data.condtionItems = [\n              {\n                fieldName: 'orgId',\n                op: 'eq',\n                fieldValue: qReceive.orgId\n              },\n              {\n                fieldName: 'exitTime',\n                op: 'eq',\n                fieldValue: qReceive.exitTime\n              },\n              {\n                fieldName: 'supplierId',\n                op: 'eq',\n                fieldValue: qReceive.supplierId\n              },\n              {\n                fieldName: 'serviceType',\n                op: 'eq',\n                fieldValue: qReceive.serviceType=== -21 ? 20 : 10\n              }\n            ]\n            if (requestConfig.data.materialName){\n              requestConfig.data.condtionItems.push(\n                {\n                  fieldName: 'materialName',\n                  op: 'like',\n                  fieldValue: '%' + requestConfig.data.materialName.trim() + '%'\n                }\n              )\n            }\n            if (requestConfig.data.materialModel) {\n              requestConfig.data.condtionItems.push(\n                {\n                  fieldName: 'materialModel',\n                  op: 'like',\n                  fieldValue: '%' + requestConfig.data.materialModel.trim() + '%'\n                }\n              )\n            }\n            if (requestConfig.data.orderCode) {\n              requestConfig.data.condtionItems.push(\n                {\n                  fieldName: 'orderCode',\n                  op: 'like',\n                  fieldValue: '%' + requestConfig.data.orderCode.trim() + '%'\n                }\n              )\n            }\n            if (requestConfig.data.dates && requestConfig.data.dates.length > 0) {\n              requestConfig.data.condtionItems.push(\n                {\n                  fieldName: 'recordedDate',\n                  op: 'between',\n                  fieldValue: [requestConfig.data.dates[0], requestConfig.data.dates[1]]\n                }\n              )\n            }\n\n            return requestConfig;\n          }"
        }
      },
      "queryInventoryMaterials": {
        "description": "发料库存选材",
        "apiconfig": "queryInventoryMaterials",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "dataModelName": "receiveInventory",
          "paramsModel": {
            "singleTable": {
              "quantity": {
                "valueType": "number",
                "op": "gt",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "materialId": {
                "valueType": "list",
                "op": "notIn",
                "defaultValue": [
                  -1
                ],
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "queryParams",
                "isSkipVal": true,
                "isCache": false
              },
              "materialName": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "materialModel": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "itemBarCode": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "dimensionType": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "材料维度",
                "resolveType": "queryParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "queryParams",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierName": {
                "valueType": "string",
                "op": "like",
                "resolveType": "queryParams",
                "isSkipVal": true,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig) {\n\n            const { lastProject } = this.$globalVars.$context;\n            requestConfig.data.dictType = 'materialType'\n            requestConfig.data.exitTime = this.$dataModels.deliveryFormModel.qDelivery.exitTime;\n            requestConfig.data.dimensionType = requestConfig.params.dimensionType;\n            requestConfig.data.filterSupplierId = requestConfig.params.supplierId || 0;\n            requestConfig.data.filterSupplierName = requestConfig.params.supplierName || '';\n            requestConfig.data.lastProjectId = lastProject.id;\n            requestConfig.data.selectData = [];\n            requestConfig.data.supplierName = requestConfig.params.supplierName || '';\n            requestConfig.data.orderOrigin = requestConfig.params.orderOrigin || '';\n            requestConfig.data.isAssem = true;\n            requestConfig.data.order = [[\"submitDate\", \"DESC\"]];\n            return requestConfig;\n          }"
        }
      },
      "getMaterialsClass": {
        "description": "获取材料类树",
        "apiconfig": "getGhList",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "queryParams",
                "isCache": false
              },
              "serviceName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "node-mb2-public-data-service",
                "resolveType": "queryParams",
                "isCache": false
              },
              "path": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "mb2-public/material-category-params",
                "resolveType": "queryParams",
                "isCache": false
              },
              "parentId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": -1,
                "resolveType": "queryParams",
                "isCache": false
              }
            }
          }
        }
      },
      "queryReceiveGhPlanMaterials": {
        "description": "总控计划选材接口",
        "apiconfig": "queryReceiveGhPlanMaterials",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "dataModelName": "receiveInventory",
          "paramsModel": {
            "singleTable": {
              "lastOrgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false
              },
              "classId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "materialName": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "materialModel": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n\n            return requestConfig;\n          }"
        }
      },
      "queryDeliveryReturnMaterials": {
        "description": "退发料选材",
        "apiconfig": "queryDeliveryReturnMaterials",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "dataModelName": "inventoryFilterModel",
          "paramsModel": {
            "returnDelivery": {
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": true,
                "isCache": false
              },
              "labourId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "teamId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "ghId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "order": {
                "valueType": "list",
                "defaultValue": [
                  [
                    "id"
                  ]
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "dictType": {
                "valueType": "string",
                "defaultValue": "materialType",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "materialId": {
                "valueType": "list",
                "defaultValue": [
                  -1
                ],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "dimensionType": {
                "valueType": "string",
                "defaultValue": "批次维度",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "netQuantity": {
                "valueType": "number",
                "op": "gt",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "materialName": {
                "valueType": "string",
                "op": "like",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "materialModel": {
                "valueType": "string",
                "op": "like",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "itemBarCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "like"
              },
              "isAssem": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            return requestConfig;\n          }"
        }
      },
      "getDeliveryGhList": {
        "description": "获取发料工号",
        "apiconfig": "getDeliveryGhList",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              },
              "labourId": {
                "valueType": "number",
                "op": "eq",
                "defaultValue": 0,
                "resolveType": "routeParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            return requestConfig;\n          }"
        }
      },
      "handleDeliveryMaterials": {
        "description": "发料材料分解",
        "apiconfig": "handleDeliveryMaterials",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "qDeliveryMoreOrders": [],
            "qDeliveryMoreMaterials": [],
            "qDelivery": {
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          },
          "dataModelType": "orderItems",
          "dataModelName": "handleMaterial"
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            console.log(requestConfig.data);\n\n            requestConfig.data.returnOrderType = false\n            requestConfig.data.qDelivery = this.$dataModels.deliveryFormModel.qDelivery\n            return requestConfig;\n          }"
        }
      },
      "createDeliveryOrders": {
        "description": "添加发料单",
        "apiconfig": "createDeliveryOrders",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelName": "deliveryFormModel",
          "paramsModel": {
            "qDelivery": {
              "orgId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "serviceType": {
                "valueType": "number",
                "defaultValue": 10,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "remark": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "originalOrderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "labourId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "ghId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "isToProduction": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "methodHandle": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "scrapReason": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "plateNumber": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "deductType": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "teamName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "teamId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "maker": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "makerDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "labourName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              }
            },
            "qDeliveryMoreOrders": [],
            "qDeliveryMoreMaterials": [],
            "qDeliveryPhotos": []
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            console.log(this.$dataModels.deliveryFormModel.qDelivery);\n            const { userId, tenantId, userName } = this.$globalVars.$context\n            const { id, orgId, exitTime, serviceType } = this.$dataModels.deliveryFormModel.qDelivery\n\n            Object.assign(this.$dataModels.deliveryFormModel.qDelivery,{\n              \"deliveryType\": 0,\n              \"orderDate\": \"\",\n              \"teamLeader\": \"\",\n              \"orderType\": 4,\n              \"ghName\": \"\",\n              \"oriGhId\": \"\",\n              \"orderDataType\": 0,\n              \"dictType\": \"\",\n              \"materialType\": \"全部\",\n              \"orderOrigin\": 2,\n              \"oriOrgId\": \"\",\n              \"allotId\": 0,\n              \"oriLabourId\": \"\"\n            })\n            console.log(this.$dataModels.deliveryFormModel.qDeliveryPhotos);\n            const codeS = { '10': '发料-', '20': '调出-', '-11': '退发料-', '-21': '退调出-', '40': '报废-' }\n\n            const params = {\n              qDelivery: this.$dataModels.deliveryFormModel.qDelivery,\n              qDeliveryMoreOrders: this.$dataModels.deliveryFormModel.qDeliveryMoreOrders,\n              qDeliveryMoreMaterials: this.$dataModels.deliveryFormModel.qDeliveryMoreMaterials,\n              qDeliveryPhotos: [],\n              orderCodeCondtion: {\n                \"orgId\": orgId,\n                \"id\": id || null,\n                \"recordedDate\": exitTime,\n                \"moduleCode\": \"mq_delivery\",\n                \"params\": {\n                  \"code\": codeS[serviceType + ''],\n                },\n                \"condtionItems\": [\n                  {\n                    \"fieldName\": \"orderOrigin\",\n                    \"op\": \"eq\",\n                    \"fieldValue\": 2\n                  },\n                  {\n                    \"fieldName\": \"deliveryType\",\n                    \"op\": \"in\",\n                    \"fieldValue\": [\n                      0,\n                      3\n                    ]\n                  }\n                ]\n              }\n            }\n\n            requestConfig.data = params\n\n            return requestConfig;\n          }"
        },
        "afterReq": {
          "isOn": true,
          "fn": "async function afterReq(responseResult){\n\n            await this.$requestFns.auditDelivery(responseResult.data.qDelivery);\n\n            this.$vueGlobal.$message({\n              type: 'success',\n              message: '单据保存提交成功'\n            })\n\n            this.$globalVars.$router.push({\n              name: 'master',\n              query: {}\n            })\n\n\n            return responseResult;\n          }"
        }
      },
      "createReceiveToDeliveryOrder": {
        "description": "添加直进直出单据",
        "apiconfig": "createReceiveToDeliveryOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelName": "rdsFormModel",
          "paramsModel": {
            "qReceiveToDelivery": {
              "orgId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "orderTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              }
            },
            "qReceive": {
              "orgId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "serviceType": {
                "valueType": "number",
                "defaultValue": 10,
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "originalOrderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "purchaseMethod": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "supplierId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "settlement": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "labourId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "ghId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "plateNumber": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "taxRate": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "batchNo": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "freight": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "remark": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              },
              "teamName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              }
            },
            "qDelivery": {
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false,
                "op": "eq"
              }
            },
            "qReceiveMoreMaterials": [],
            "qReceivePhotos": [],
            "orderCodeCondtion": {
              "tableName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "q_receive",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "dateFormat": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "YYYYMM",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "condtionItems": {
                "valueType": "list",
                "op": "in",
                "defaultValue": [],
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              },
              "moduleCode": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "mq_receive",
                "resolveType": "bodyParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            requestConfig.data = { \"qReceiveToDelivery\": { \"orgId\": 1342955240127488, \"oriOrgId\": \"\", \"orgName\": \"徐环环测试项目部11\", \"orderOrigin\": 2, \"recordedDate\": \"2024-01-22\", \"orderCode\": \"\", \"orderTime\": \"2024-01-22 15:18:53\", \"isRemoved\": false, \"maker\": \"x\", \"makerDate\": \"2024-01-22\", \"remark\": \"\" }, \"qReceive\": { \"orgId\": 1342955240127488, \"orgName\": \"徐环环测试项目部11\", \"oriOrgId\": \"\", \"orderOrigin\": 2, \"weightType\": \"app\", \"recordedDate\": \"2024-01-22\", \"serviceType\": 10, \"orderType\": 4, \"orderCode\": \"\", \"supplierId\": 1459709450662400, \"supplierName\": \"浙江鑫禾实业集团有限公司\", \"oriSupplierId\": \"\", \"plateNumber\": \"\", \"isRed\": false, \"isRds\": true, \"purchaseMethod\": \"\", \"settlementId\": 0, \"settlementName\": \"\", \"isRemoved\": false, \"remark\": \"\", \"freight\": 0, \"maker\": \"x\", \"makerDate\": \"2024-01-22\", \"exitTime\": \"2024-01-22 15:18:53\" }, \"qReceiveMoreMaterials\": [{ \"orgId\": 1342955240127488, \"id\": null, \"orderId\": null, \"materialId\": 1031608411158794, \"materialCode\": \"007001000019\", \"materialName\": \"膨化炸药\", \"materialModel\": \"大包\", \"materialUnit\": \"吨\", \"auxiliaryUnit\": \"吨\", \"auxiliaryRate\": 1, \"classId\": 1031600771127332, \"classFullId\": \"1031600771127332|1031600771127302\", \"oriMaterialId\": \"007001-007001000019\", \"oriClassId\": null, \"isRemoved\": 0, \"netQuantity\": 22, \"roughQuantity\": 22, \"itemBarCode\": \"\", \"receivePrice\": 0, \"taxFreePrice\": 0, \"taxRate\": 13, \"taxIncludedPrice\": 0, \"freight\": 0, \"sortCode\": 1, \"trunItemBarCode\": false, \"manufacturer\": \"\", \"batchNo\": \"\", \"skillCardNo\": \"\", \"testReportNo\": \"\", \"storagePlace\": \"5-1-1号货架\", \"stockbinId\": 1635805049173504, \"stockbinFullName\": \"5号货架|5-1号货架|5-1-1号货架\", \"oriStockbinId\": null, \"remark\": \"\", \"oriOrgId\": \"\", \"serviceType\": 10, \"orderType\": 4, \"orderOrigin\": 2, \"submitDate\": \"2024-01-22\" }], \"qReceivePhotos\": [], \"deliveryS\": [{ \"qDelivery\": { \"orgId\": 1342955240127488, \"orgName\": \"徐环环测试项目部11\", \"oriOrgId\": \"\", \"orderOrigin\": 2, \"weightType\": \"app\", \"recordedDate\": \"2024-01-22\", \"serviceType\": 10, \"orderType\": 4, \"deliveryType\": 0, \"orderCode\": \"\", \"allotId\": 0, \"labourId\": 1258033780905472, \"labourName\": \"aaa\", \"oriLabourId\": \"\", \"teamId\": 1258033780905472, \"teamName\": \"aaa\", \"teamLeader\": \"\", \"ghId\": 0, \"ghFullId\": \"\", \"ghFullName\": \"\", \"ghName\": \"\", \"oriGhId\": \"\", \"gqId\": 0, \"gqName\": \"\", \"plateNumber\": \"\", \"isRed\": false, \"isRds\": true, \"isRemoved\": false, \"remark\": \"\", \"maker\": \"x\", \"makerDate\": \"2024-01-22\", \"exitTime\": \"2024-01-22 15:18:53\" }, \"qDeliveryMoreMaterials\": [{ \"orgId\": 1342955240127488, \"id\": null, \"orderId\": null, \"materialId\": 1031608411158794, \"materialCode\": \"007001000019\", \"materialName\": \"膨化炸药\", \"materialModel\": \"大包\", \"materialUnit\": \"吨\", \"auxiliaryUnit\": \"吨\", \"auxiliaryRate\": 1, \"classId\": 1031600771127332, \"classFullId\": \"1031600771127332|1031600771127302\", \"oriMaterialId\": \"007001-007001000019\", \"oriClassId\": null, \"isRemoved\": 0, \"netQuantity\": 22, \"roughQuantity\": 22, \"itemBarCode\": \"\", \"receivePrice\": 0, \"taxFreePrice\": 0, \"taxRate\": 13, \"taxIncludedPrice\": 0, \"freight\": 0, \"sortCode\": 1, \"trunItemBarCode\": false, \"manufacturer\": \"\", \"batchNo\": \"\", \"skillCardNo\": \"\", \"testReportNo\": \"\", \"storagePlace\": \"5-1-1号货架\", \"stockbinId\": 1635805049173504, \"stockbinFullName\": \"5号货架|5-1号货架|5-1-1号货架\", \"oriStockbinId\": null, \"remark\": \"\", \"oriOrgId\": \"\", \"serviceType\": 10, \"orderType\": 4, \"orderOrigin\": 2, \"submitDate\": \"2024-01-22\" }], \"qDeliveryPhotos\": [] }], \"isLabour\": 1 }\n            return requestConfig;\n          }"
        },
        "afterReq": {
          "isOn": true,
          "fn": "async function afterReq(responseResult){\n\n            await this.$requestFns.auditRds(responseResult.data.qReceiveToDelivery);\n\n            this.$vueGlobal.$message({\n              type: 'success',\n              message: '单据保存提交成功！'\n            })\n\n            this.$globalVars.$router.push({\n              name: 'master',\n              query: {}\n            })\n\n\n\n            return responseResult;\n          }"
        }
      },
      "getqDelivery": {
        "description": "获取发料单据详情",
        "apiconfig": "getqDelivery",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "resolveType": "routeParams",
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "routeParams",
                "isCache": false
              }
            }
          }
        }
      },
      "queryDeliverydecMaterisls": {
        "description": "查询发料分解材料",
        "apiconfig": "queryDeliverydecMaterisls",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "orderOrigin": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "endDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "startDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "materialId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orderId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n\n            return requestConfig;\n          }"
        }
      },
      "getDictionaryData": {
        "description": "获取字典数据",
        "apiconfig": "getDictionaryData",
        "paramsConfig": {
          "paramsType": "kvParams",
          "paramsModel": {
            "singleTable": {
              "orgId": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "queryParams",
                "isCache": false
              },
              "dictType": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "queryParams",
                "isCache": false
              },
              "isLeaf": {
                "valueType": "boolean",
                "defaultValue": true,
                "resolveType": "queryParams",
                "isCache": false
              }
            }
          }
        }
      },
      "queryReturnSuppliers": {
        "description": "退货供应商列表",
        "apiconfig": "queryReturnSuppliers",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "paramsModel": {
            "singleTable": {
              "supplierName": {
                "valueType": "string",
                "op": "like",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            const { orgId, serviceType } = this.$dataModels.receiveFormModel.qReceive\n            requestConfig.data.condtionItems.push(\n              {\n                fieldName: 'orgId',\n                op: 'eq',\n                fieldValue: orgId\n              },\n              {\n                fieldName: 'serviceType',\n                op: 'in',\n                fieldValue: [-1, Math.abs(serviceType) >= 20 ? 20 : 10]\n              }\n            )\n            return requestConfig;\n          }"
        }
      },
      "queryInventoryData": {
        "description": "退收库存选材接口",
        "apiconfig": "queryInventoryData",
        "paramsConfig": {
          "paramsType": "paginationParams",
          "dataModelName": "inventoryFilterModel",
          "paramsModel": {
            "returnReceive": {
              "supplierId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "serviceType": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "isAssem": {
                "valueType": "boolean",
                "defaultValue": true,
                "resolveType": "bodyParams",
                "isCache": false
              },
              "materialName": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "materialModel": {
                "valueType": "string",
                "op": "like",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "actionType": {
                "valueType": "string",
                "defaultValue": "批次维度",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "order": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "materialIds": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "materialSummaryIds": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "op": "eq",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "exitTime": {
                "valueType": "string",
                "op": "lte",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              }
            }
          }
        }
      },
      "matchItemBarCode": {
        "description": "材料分解到条码维度",
        "apiconfig": "matchItemBarCode",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "qDelivery": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "qDeliveryMoreMaterials": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "qDeliveryMoreOrders": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "returnOrderType": {
                "valueType": "boolean",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              },
              "filterSupplierName": {
                "valueType": "string",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": true
              }
            }
          }
        }
      },
      "queryMaterialsPlan": {
        "description": "获取材料的计划量",
        "apiconfig": "queryMaterialsPlan",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "single",
          "paramsModel": {
            "singleTable": {
              "materialIds": {
                "valueType": "list",
                "resolveType": "bodyParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "bodyParams",
                "isCache": false
              }
            }
          }
        }
      },
      "saveRdsOrder": {
        "description": "保存直收直发单据",
        "apiconfig": "saveRdsOrder",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "dataModelType": "orderItems",
          "dataModelName": "rdsFormModel",
          "paramsModel": {
            "qReceiveToDelivery": {
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "defaultValue": 2,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "maker": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "makerDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "remark": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            },
            "qReceive": {
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "priceType": {
                "valueType": "string",
                "defaultValue": "合同价",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "freight": {
                "valueType": "number",
                "defaultValue": 0,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orgName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "exitTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderTime": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "serviceType": {
                "valueType": "number",
                "defaultValue": 10,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderType": {
                "valueType": "number",
                "defaultValue": 4,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "orderOrigin": {
                "valueType": "number",
                "defaultValue": 2,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "plateNumber": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "supplierId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "oriSupplierId": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "settlementId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "settlementName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "makerDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "maker": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "labourId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "ghId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "purchaseMethod": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "purchaseMethodFullName": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "returnDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "isRds": {
                "valueType": "boolean",
                "defaultValue": false,
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "rdsId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "taxRate": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "originalOrderCode": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            },
            "qReceiveMoreMaterials": [],
            "qReceivePhotos": [],
            "orderCodeCondtion": {
              "orgId": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "id": {
                "valueType": "number",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "params": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "moduleCode": {
                "valueType": "string",
                "defaultValue": "mq_receive_to_delivery",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "recordedDate": {
                "valueType": "string",
                "defaultValue": "",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              },
              "condtionItems": {
                "valueType": "list",
                "resolveType": "",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        },
        "beforeReq": {
          "isOn": true,
          "fn": "async function beforeReq(requestConfig){\n            let isLabour = false\n            let deliveryS = []\n            const { qReceive, qDelivery, qReceiveMoreMaterials, qDeliveryPhotos } = this.$dataModels.rdsFormModel\n            if (qReceive.serviceType == 10) {\n              isLabour = true\n            }\n            qDelivery.deliveryType = 0\n            deliveryS.push({\n              qDelivery,\n              qDeliveryMoreMaterials: JSON.parse(JSON.stringify(qReceiveMoreMaterials)),\n              qDeliveryPhotos\n            })\n            requestConfig.data.deliveryS = deliveryS\n            requestConfig.data.isLabour = isLabour\n            requestConfig.data.qReceiveGpys = this.$dataModels.rdsFormModel.qReceiveGpys\n            return requestConfig;\n          }"
        }
      },
      "getRdsOrderDetail": {
        "description": "获取直收直发详情",
        "apiconfig": "getRdsOrderItems",
        "paramsConfig": {
          "paramsType": "routeParams",
          "paramsModel": {
            "singleTable": {
              "id": {
                "valueType": "number",
                "resolveType": "routeParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "routeParams",
                "isCache": false
              }
            }
          }
        }
      },
      "queryGhOfLabour": {
        "description": "获取用料单位发过料的部位",
        "apiconfig": "queryGhOfLabour",
        "paramsConfig": {
          "paramsType": "routeParams",
          "dataModelName": "inventoryFilterModel",
          "paramsModel": {
            "returnDelivery": {
              "labourId": {
                "valueType": "number",
                "resolveType": "routeParams",
                "isCache": false
              },
              "orgId": {
                "valueType": "number",
                "resolveType": "routeParams",
                "isSkipVal": false,
                "isCache": false
              }
            }
          }
        }
      },
      "uploadGpy": {
        "description": "高拍仪上传",
        "apiconfig": "uploadGpy",
        "paramsConfig": {
          "paramsType": "formSaveParams",
          "paramsModel": {
            "singleTable": {
              "file": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "fileName": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "product": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "mquantity",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "tempFile": {
                "valueType": "boolean",
                "op": "eq",
                "defaultValue": false,
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              },
              "type": {
                "valueType": "string",
                "op": "eq",
                "defaultValue": "base64",
                "resolveType": "bodyParams",
                "isCache": false,
                "isSkipVal": false
              }
            }
          }
        }
      }
    },
    "dataModelConfig": {
      "currentPreviewImg": {
        "description": "当前选中的照片",
        "singleTable": {
          "src": {
            "valueType": "string",
            "isSkipVal": true
          }
        }
      },
      "rdsFormModel": {
        "description": "直收直发模型",
        "order": {
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "originalOrderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "plateNumber": {
            "valueType": "string",
            "isSkipVal": true
          },
          "purchaseMethod": {
            "valueType": "string",
            "isSkipVal": true
          },
          "supplierName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "settlementName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "labourName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "ghFullName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "remark": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orgName": {
            "valueType": "string",
            "isSkipVal": true
          }
        },
        "materials": [],
        "photos": [],
        "qReceiveToDelivery": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orgName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "maker": {
            "valueType": "string",
            "isSkipVal": true
          },
          "makerDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "remark": {
            "valueType": "string",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          }
        },
        "qReceive": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "priceType": {
            "valueType": "string",
            "defaultValue": "合同价",
            "isSkipVal": false
          },
          "freight": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "orgName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "serviceType": {
            "valueType": "number",
            "defaultValue": 10,
            "isSkipVal": false
          },
          "orderType": {
            "valueType": "number",
            "defaultValue": 4,
            "isSkipVal": false
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "plateNumber": {
            "valueType": "string",
            "isSkipVal": true
          },
          "supplierName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "supplierId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "oriSupplierId": {
            "valueType": "string",
            "isSkipVal": true
          },
          "settlementId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "settlementName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "makerDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "maker": {
            "valueType": "string",
            "isSkipVal": true
          },
          "labourId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "purchaseMethod": {
            "valueType": "string",
            "isSkipVal": true
          },
          "purchaseMethodFullName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "returnDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "isRds": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          },
          "rdsId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "taxRate": {
            "valueType": "number",
            "isSkipVal": true
          },
          "originalOrderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "batchNo": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          }
        },
        "qReceiveMoreMaterials": [],
        "qReceivePhotos": [],
        "qDelivery": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orgName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "serviceType": {
            "valueType": "number",
            "defaultValue": 10,
            "isSkipVal": false
          },
          "orderType": {
            "valueType": "number",
            "defaultValue": 4,
            "isSkipVal": false
          },
          "labourId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "labourName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "oriLabourId": {
            "valueType": "string",
            "isSkipVal": true
          },
          "teamId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "teamName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "ghName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "ghFullName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "ghFullId": {
            "valueType": "string",
            "isSkipVal": true
          },
          "oriGhId": {
            "valueType": "string",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "allotId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "plateNumber": {
            "valueType": "string",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "maker": {
            "valueType": "string",
            "isSkipVal": true
          },
          "makerDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "deliveryType": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "isRds": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          },
          "rdsId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "isRemoved": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          }
        },
        "qDeliveryMoreMaterials": [],
        "qDeliveryPhotos": [],
        "orderCodeCondtion": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "params": {
            "valueType": "string",
            "isSkipVal": true
          },
          "moduleCode": {
            "valueType": "string",
            "defaultValue": "mq_receive_to_delivery",
            "isSkipVal": false
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "condtionItems": {
            "valueType": "list",
            "isSkipVal": true
          }
        },
        "qReceiveGpys": [],
        "gpyPhotos": []
      },
      "filterPlanModel": {
        "description": "采购计划过滤器",
        "singleTable": {
          "purchaseMethod": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "planName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orgId": {
            "valueType": "list",
            "isSkipVal": true
          },
          "order": {
            "valueType": "list",
            "defaultValue": [
              [
                "isSubmit"
              ],
              [
                "orderCode",
                "DESC"
              ]
            ],
            "isSkipVal": false
          },
          "isAssembox": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          },
          "isRemoved": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          }
        }
      },
      "currentReceiveRow": {
        "description": "选中的当前行数据",
        "singleTable": {
          "id": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "orgId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "orderCode": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "supplierName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "supplierId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "recordedDate": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          }
        }
      },
      "receiveConfig": {
        "description": "验收卡控配置",
        "singleTable": {
          "planContract": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "planContractControl": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "contractReceive": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "contractReceiveControl": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "planReceive": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "planReceiveControl": {
            "valueType": "boolean",
            "isSkipVal": true
          }
        }
      },
      "validText": {
        "description": "当前卡控配置类型",
        "singleTable": {
          "validText": {
            "valueType": "string",
            "defaultValue": "超总控计划量",
            "isSkipVal": false
          }
        },
        "materialIds": []
      },
      "orderCodeCondtion": {
        "description": "获取单据编号模型",
        "singleTable": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "moduleCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "params": {
            "valueType": "string",
            "isSkipVal": true
          },
          "condtionItems": {
            "valueType": "list",
            "isSkipVal": true
          }
        }
      },
      "selectRows": {
        "description": "已选择的材料信息",
        "items": [],
        "currentPageDatas": [],
        "singleTable": {
          "isChoose": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          }
        }
      },
      "receiveFilter": {
        "description": "收料登记过滤器",
        "qReceiveModel": {
          "orgId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "id": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "orgName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "orderCode": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "supplierId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "supplierName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "isRed": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "isRemoved": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "settlementId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "settlementName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "isVoid": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "receiveType": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "order": {
            "valueType": "list",
            "defaultValue": [
              [
                "isAudit"
              ],
              [
                "sortOrderCode",
                "DESC"
              ],
              [
                "makerDate",
                "DESC"
              ],
              [
                "orderCode",
                "DESC"
              ]
            ],
            "isSkipVal": false
          },
          "isRds": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "isProduction": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "queryMain": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "isAudit": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "isClear": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          }
        }
      },
      "deliveryFilter": {
        "description": "出库登记过滤",
        "singleTable": {
          "orgId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "labourId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "isRemoved": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "isRds": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "allotId": {
            "valueType": "list",
            "defaultValue": [
              0,
              null
            ],
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "isRed": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "deliveryType": {
            "valueType": "list",
            "defaultValue": [
              0,
              3
            ],
            "isSkipVal": false
          },
          "isAudit": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "teamId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "teamName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "ghName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "isClear": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          }
        }
      },
      "receiveDeliveryFilter": {
        "description": "直进直出过滤器",
        "singleTable": {
          "orgId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "supplierId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "settlementId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "labourId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "isRemoved": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "isRds": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          },
          "conditionItems": {
            "valueType": "list",
            "defaultValue": "",
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "list",
            "defaultValue": [
              2
            ],
            "isSkipVal": false
          },
          "teamId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "isAudit": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "orderTime": {
            "valueType": "list",
            "defaultValue": "",
            "isSkipVal": false
          },
          "teamName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "settlementName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "supplierName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "ghName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "isClear": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          }
        }
      },
      "receiveFormModel": {
        "description": "收料单据模型",
        "qReceive": {
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "supplierId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "supplierName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orgName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "plateNumber": {
            "valueType": "string",
            "isSkipVal": true
          },
          "purchaseMethod": {
            "valueType": "string",
            "isSkipVal": true
          },
          "originalOrderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "settlementName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "remark": {
            "valueType": "string",
            "isSkipVal": true
          },
          "settlementId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "priceType": {
            "valueType": "string",
            "isSkipVal": true
          },
          "serviceType": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orderType": {
            "valueType": "number",
            "defaultValue": 4,
            "isSkipVal": false
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "taxRate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "purchaseMethodFullName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "maker": {
            "valueType": "string",
            "isSkipVal": true
          },
          "makerDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "freight": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "batchNo": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          }
        },
        "qReceiveMoreMaterials": [],
        "photos": [],
        "qReceivePhotos": [],
        "deleteItems": [],
        "deletePhotos": [],
        "orderCodeCondtion": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "params": {
            "valueType": "string",
            "isSkipVal": true
          },
          "moduleCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "condtionItems": {
            "valueType": "list",
            "isSkipVal": true
          }
        },
        "qReceiveGpys": [],
        "gpyPhotos": []
      },
      "deliveryFormModel": {
        "description": "发料单据模型",
        "qDelivery": {
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "labourId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "labourName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "oriLabourId": {
            "valueType": "string",
            "isSkipVal": true
          },
          "teamId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "teamName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orgName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "originalOrderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "plateNumber": {
            "valueType": "string",
            "isSkipVal": true
          },
          "scrapReason": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "ghName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "ghFullName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "oriGhId": {
            "valueType": "string",
            "isSkipVal": true
          },
          "remark": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "methodHandle": {
            "valueType": "string",
            "isSkipVal": true
          },
          "serviceType": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orderType": {
            "valueType": "number",
            "defaultValue": 4,
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "isToProduction": {
            "valueType": "boolean",
            "isSkipVal": true
          },
          "maker": {
            "valueType": "string",
            "isSkipVal": true
          },
          "makerDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "allotId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "ghFullId": {
            "valueType": "string",
            "isSkipVal": true
          }
        },
        "qDeliveryMoreMaterials": [],
        "photos": [],
        "qDeliveryMoreOrders": [],
        "deleteItems": [],
        "qDeliveryPhotos": [],
        "matchedList": {
          "test": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          }
        },
        "orderCodeCondtion": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "id": {
            "valueType": "number",
            "isSkipVal": true
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "moduleCode": {
            "valueType": "string",
            "defaultValue": "mq_delivery",
            "isSkipVal": false
          },
          "params": {
            "valueType": "string",
            "isSkipVal": true
          },
          "condtionItems": {
            "valueType": "string",
            "isSkipVal": true
          }
        },
        "qDeliveryGpys": [],
        "gpyPhotos": []
      },
      "deliveryFilterModel": {
        "description": "发料单过滤器",
        "singleTable": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "isRemoved": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "isRds": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "allotId": {
            "valueType": "list",
            "defaultValue": [
              0,
              null
            ],
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "orderType": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "deliveryType": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "orderDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "labourId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "order": {
            "valueType": "list",
            "defaultValue": [
              [
                "isAudit"
              ],
              [
                "sortOrderCode",
                "DESC"
              ],
              [
                "makerDate",
                "DESC"
              ],
              [
                "orderCode",
                "DESC"
              ]
            ],
            "isSkipVal": false
          },
          "orgName": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          }
        }
      },
      "childOrgList": {
        "description": "下属组织机构列表",
        "items": []
      },
      "contractModel": {
        "description": "合同材料",
        "singleTable": {
          "supplierId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "orgId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "contractCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "materialModel": {
            "valueType": "string",
            "isSkipVal": true
          },
          "materialName": {
            "valueType": "string",
            "isSkipVal": true
          }
        }
      },
      "planModel": {
        "description": "计划材料",
        "singleTable": {
          "orgId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "purchaseMethod": {
            "valueType": "string",
            "isSkipVal": true
          },
          "planName": {
            "valueType": "string",
            "isSkipVal": true
          }
        }
      },
      "photosConfig": {
        "description": "照片配置项",
        "singleTable": {
          "delivery": {
            "valueType": "list",
            "defaultValue": [],
            "isSkipVal": false
          },
          "deliveryReturn": {
            "valueType": "list",
            "defaultValue": [],
            "isSkipVal": false
          },
          "receive": {
            "valueType": "list",
            "defaultValue": [],
            "isSkipVal": false
          },
          "receiveReturn": {
            "valueType": "list",
            "defaultValue": [],
            "isSkipVal": false
          },
          "receiveToDelivery": {
            "valueType": "list",
            "defaultValue": [],
            "isSkipVal": false
          }
        }
      },
      "globalConfig": {
        "description": "全局配置",
        "singleTable": {
          "mq2ReceiveMaterialPurchasePlan": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "mq2ReceiveMaterialPurchaseContract": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "ghInfo": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "productLimitFlag": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "material": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "logo": {
            "valueType": "string",
            "defaultValue": "'attachment/25ecaf58-ff6c-457e-ad74-21c1aa274ba2.png'",
            "isSkipVal": false
          },
          "accountDay": {
            "valueType": "number",
            "defaultValue": 31,
            "isSkipVal": false
          },
          "priceSettings": {
            "valueType": "number",
            "defaultValue": 8,
            "isSkipVal": false
          },
          "quantitySettings": {
            "valueType": "number",
            "defaultValue": 4,
            "isSkipVal": false
          },
          "taxRateSettings": {
            "valueType": "number",
            "defaultValue": 13,
            "isSkipVal": false
          },
          "sumSettings": {
            "valueType": "number",
            "defaultValue": 2,
            "isSkipVal": false
          },
          "mq2ReceiveMaterialGhPlan": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          }
        }
      },
      "receiveInventory": {
        "description": "选材模型",
        "singleTable": {
          "actionType": {
            "valueType": "string",
            "defaultValue": "批次维度",
            "isSkipVal": false
          },
          "recordedDate": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "orgId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "exitTime": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "supplierId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "serviceType": {
            "valueType": "number",
            "defaultValue": 10,
            "isSkipVal": false
          },
          "materialName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "materialModel": {
            "valueType": "string",
            "isSkipVal": true
          },
          "itemBarCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "orderCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "materialIds": {
            "valueType": "list",
            "defaultValue": [
              0
            ],
            "isSkipVal": false
          },
          "materialSummaryIds": {
            "valueType": "list",
            "defaultValue": [
              0
            ],
            "isSkipVal": false
          },
          "dates": {
            "valueType": "list",
            "defaultValue": [],
            "isSkipVal": false
          },
          "dimensionType": {
            "valueType": "string",
            "defaultValue": "材料维度",
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "number",
            "isSkipVal": true
          },
          "supplierName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "classId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "labourId": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "teamId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "labourName": {
            "valueType": "string",
            "isSkipVal": true
          }
        }
      },
      "previewSrcList": {
        "description": "照片预览列表",
        "items": []
      },
      "deliveryDetailFilter": {
        "description": "发料详情弹框过滤器",
        "row": {
          "orgId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "materialId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "orderId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "date": {
            "valueType": "list",
            "defaultValue": "",
            "isSkipVal": false
          },
          "supplierId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          }
        }
      },
      "batchModel": {
        "description": "炉批号(用于批号设置)",
        "singleTable": {
          "lastBatchNo": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          },
          "batchNo": {
            "valueType": "string",
            "defaultValue": "",
            "isSkipVal": false
          }
        }
      },
      "selectRelaObj": {
        "description": "选材框上下关联数据",
        "items": [],
        "selectRows": [],
        "otherPageSelect": []
      },
      "selectRelaItemObj": {
        "description": "发料选材框条码维度",
        "items": [],
        "otherPagesItems": []
      },
      "dicData": {
        "description": "字典数据",
        "taxRate": [],
        "storagePlace": []
      },
      "inventoryFilterModel": {
        "description": "库存选材过滤器",
        "returnReceive": {
          "materialName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "materialModel": {
            "valueType": "string",
            "isSkipVal": true
          },
          "actionType": {
            "valueType": "string",
            "defaultValue": "批次维度",
            "isSkipVal": false
          },
          "recordedDate": {
            "valueType": "string",
            "isSkipVal": true
          },
          "order": {
            "valueType": "list",
            "defaultValue": "",
            "isSkipVal": false
          },
          "materialIds": {
            "valueType": "list",
            "defaultValue": [
              0
            ],
            "isSkipVal": false
          },
          "materialSummaryIds": {
            "valueType": "list",
            "defaultValue": [
              0
            ],
            "isSkipVal": false
          },
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "supplierId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "serviceType": {
            "valueType": "number",
            "isSkipVal": true
          },
          "isAssem": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          }
        },
        "delivery": {
          "dictType": {
            "valueType": "string",
            "defaultValue": "materialType",
            "isSkipVal": false
          },
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "materialName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "materialModel": {
            "valueType": "string",
            "isSkipVal": true
          },
          "quantity": {
            "valueType": "number",
            "isSkipVal": true
          },
          "materialId": {
            "valueType": "list",
            "isSkipVal": true
          },
          "dimensionType": {
            "valueType": "string",
            "isSkipVal": true
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "filterSupplierId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "filterSupplierName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "order": {
            "valueType": "list",
            "defaultValue": [
              [
                "submitDate",
                "DESC"
              ]
            ],
            "isSkipVal": false
          },
          "orderOrigin": {
            "valueType": "number",
            "isSkipVal": true
          },
          "selectData": {
            "valueType": "list",
            "isSkipVal": true
          },
          "itemBarCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "supplierName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "isAssem": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          }
        },
        "returnDelivery": {
          "orgId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "serviceType": {
            "valueType": "number",
            "isSkipVal": true
          },
          "labourId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "teamId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "ghId": {
            "valueType": "number",
            "isSkipVal": true
          },
          "order": {
            "valueType": "list",
            "defaultValue": [
              [
                "id"
              ]
            ],
            "isSkipVal": false
          },
          "dictType": {
            "valueType": "string",
            "defaultValue": "materialType",
            "isSkipVal": false
          },
          "materialId": {
            "valueType": "list",
            "defaultValue": [
              -1
            ],
            "isSkipVal": false
          },
          "exitTime": {
            "valueType": "string",
            "isSkipVal": true
          },
          "dimensionType": {
            "valueType": "string",
            "defaultValue": "批次维度",
            "isSkipVal": false
          },
          "netQuantity": {
            "valueType": "number",
            "defaultValue": 0,
            "isSkipVal": false
          },
          "materialName": {
            "valueType": "string",
            "isSkipVal": true
          },
          "materialModel": {
            "valueType": "string",
            "isSkipVal": true
          },
          "itemBarCode": {
            "valueType": "string",
            "isSkipVal": true
          },
          "isAssem": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          }
        }
      },
      "handleMaterial": {
        "description": "分解材料",
        "qDeliveryMoreOrders": [],
        "qDeliveryMoreMaterials": [],
        "qDelivery": {
          "orgId": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          }
        }
      },
      "currentMatchedList": {
        "description": "当前材料对应的分解明细",
        "items": []
      },
      "controlReceiveParams": {
        "description": "合同卡验收接口参数",
        "condtionItems": []
      },
      "gpyPhotoList": {
        "description": "高拍仪照片配置",
        "singleTable": {
          "photoNumber": {
            "valueType": "number",
            "defaultValue": null,
            "isSkipVal": false
          },
          "isRequired": {
            "valueType": "boolean",
            "defaultValue": false,
            "isSkipVal": false
          },
          "isShow": {
            "valueType": "boolean",
            "defaultValue": true,
            "isSkipVal": false
          }
        }
      },
      "gpyPreviewList": {
        "description": "高拍仪照片列表",
        "items": []
      }
    },
    "sharedFns": {
      "changeBtnState": {
        "fn": "async function fnName(name) {\n          if (name === 'receive') {\n            const currentRow = this.$exposeds.get('tableAsync_lopncx41').model.currentRow.value;\n            if (currentRow.id) {\n              this.$exposeds.get('button_lopncx4v').model.elementOption.value = {disabled: false}; // add\n              this.$exposeds.get('button_lopncx4x').model.elementOption.value = { disabled: false};// edit\n              this.$exposeds.get('button_lopncx4z').model.elementOption.value = { disabled: false};// audit\n              this.$exposeds.get('button_lozrsvrs').model.elementOption.value = { disabled: false};// unaudit\n              this.$exposeds.get('button_lozthm12').model.elementOption.value = { disabled: false};// delete\n              if (currentRow.isAudit) {\n                this.$exposeds.get('button_lopncx4x').model.elementOption.value = { disabled: true };// edit\n                this.$exposeds.get('button_lopncx4z').model.elementOption.value = { disabled: true };// audit\n                this.$exposeds.get('button_lozrsvrs').model.elementOption.value = { disabled: false };// unaudit\n                this.$exposeds.get('button_lozthm12').model.elementOption.value = { disabled: true };// delete\n              } else {\n                this.$exposeds.get('button_lopncx4z').model.elementOption.value = { disabled: false };// audit\n                this.$exposeds.get('button_lozrsvrs').model.elementOption.value = { disabled: true };// unaudit\n              }\n            } else {\n              this.$exposeds.get('button_lopncx4v').model.elementOption.value = { disabled: false }; // add\n              this.$exposeds.get('button_lopncx4x').model.elementOption.value = { disabled: true };// edit\n              this.$exposeds.get('button_lopncx4z').model.elementOption.value = { disabled: true };// audit\n              this.$exposeds.get('button_lozrsvrs').model.elementOption.value = { disabled: true };// unaudit\n              this.$exposeds.get('button_lozthm12').model.elementOption.value = { disabled: true };// delete\n            }\n            if (currentRow.id && currentRow.orderType === 2) {\n              this.$exposeds.get('button_lopncx4x').model.elementOption.value = { disabled: true };// edit\n              this.$exposeds.get('button_lopncx4z').model.elementOption.value = { disabled: true };// audit\n              this.$exposeds.get('button_lozrsvrs').model.elementOption.value = { disabled: true };// unaudit\n              this.$exposeds.get('button_lozthm12').model.elementOption.value = { disabled: true };// delete\n            }\n          }\n\n          if (name === 'delivery') {\n            const currentRow = this.$exposeds.get('tableAsync_lozthqrh').model.currentRow.value;\n            if (currentRow.id) {\n              this.$exposeds.get('button_lozthuux').model.elementOption.value = { disabled: false }; // add\n              this.$exposeds.get('button_lozthv2b').model.elementOption.value = { disabled: false };// edit\n              this.$exposeds.get('button_lozthv9p').model.elementOption.value = { disabled: false };// audit\n              this.$exposeds.get('button_lozthvh3').model.elementOption.value = { disabled: false };// unaudit\n              this.$exposeds.get('button_lozthvoh').model.elementOption.value = { disabled: false };// delete\n              if (currentRow.isAudit && currentRow.orderType !== 2) {\n                this.$exposeds.get('button_lozthv2b').model.elementOption.value = { disabled: true };// edit\n                this.$exposeds.get('button_lozthv9p').model.elementOption.value = { disabled: true };// audit\n                this.$exposeds.get('button_lozthvh3').model.elementOption.value = { disabled: false };// unaudit\n                this.$exposeds.get('button_lozthvoh').model.elementOption.value = { disabled: true };// delete\n              } else {\n                this.$exposeds.get('button_lozthv9p').model.elementOption.value = { disabled: false };// audit\n                this.$exposeds.get('button_lozthvh3').model.elementOption.value = { disabled: true };// unaudit\n              }\n              if (currentRow.deliveryType === 3) {\n                this.$exposeds.get('button_lozthv9p').model.elementOption.value = { disabled: true };// audit\n                this.$exposeds.get('button_lozthvh3').model.elementOption.value = { disabled: true };// unaudit\n                this.$exposeds.get('button_lozthvoh').model.elementOption.value = { disabled: false };// delete\n              }\n            } else {\n              this.$exposeds.get('button_lozthuux').model.elementOption.value = { disabled: false }; // add\n              this.$exposeds.get('button_lozthv2b').model.elementOption.value = { disabled: true };// edit\n              this.$exposeds.get('button_lozthv9p').model.elementOption.value = { disabled: true };// audit\n              this.$exposeds.get('button_lozthvh3').model.elementOption.value = { disabled: true };// unaudit\n              this.$exposeds.get('button_lozthvoh').model.elementOption.value = { disabled: true };// delete\n            }\n          }\n\n          if (name === 'receiveDelivery') {\n            const currentRow = this.$exposeds.get('tableAsync_lozti7x5').model.currentRow.value;\n            if (currentRow.id) {\n              this.$exposeds.get('button_loztiin8').model.elementOption.value = { disabled: false }; // add\n              this.$exposeds.get('button_loztiiya').model.elementOption.value = { disabled: false };// edit\n              this.$exposeds.get('button_loztij9c').model.elementOption.value = { disabled: false };// audit\n              this.$exposeds.get('button_loztijke').model.elementOption.value = { disabled: false };// unaudit\n              this.$exposeds.get('button_loztijvg').model.elementOption.value = { disabled: false };// delete\n              if (currentRow.isAudit) {\n                this.$exposeds.get('button_loztiiya').model.elementOption.value = { disabled: true };// edit\n                this.$exposeds.get('button_loztij9c').model.elementOption.value = { disabled: true };// audit\n                this.$exposeds.get('button_loztijke').model.elementOption.value = { disabled: false };// unaudit\n                this.$exposeds.get('button_loztijvg').model.elementOption.value = { disabled: true };// delete\n              } else {\n                this.$exposeds.get('button_loztij9c').model.elementOption.value = { disabled: false };// audit\n                this.$exposeds.get('button_loztijke').model.elementOption.value = { disabled: true };// unaudit\n              }\n            } else {\n              this.$exposeds.get('button_loztiin8').model.elementOption.value = { disabled: false }; // add\n              this.$exposeds.get('button_loztiiya').model.elementOption.value = { disabled: true };// edit\n              this.$exposeds.get('button_loztij9c').model.elementOption.value = { disabled: true };// audit\n              this.$exposeds.get('button_loztijke').model.elementOption.value = { disabled: true };// unaudit\n              this.$exposeds.get('button_loztijvg').model.elementOption.value = { disabled: true };// delete\n            }\n          }\n        }",
        "isOn": true,
        "description": "按钮状态"
      },
      "getQRCodeUrl": {
        "fn": "async function fnName(paramsObj){\n          const urlKeyArray = Object.keys(paramsObj).reduce((acc, item) => {\n            acc.push(`${item}=${paramsObj[item]}`)\n            return acc\n          }, [])\n          const envResult = await this.$globalVars.$http.get('/mq2-rds/mq2-query-env')\n          if (envResult.success) {\n            return `${envResult.config.yearrowUrl}/order-shared/order-detail.html?${urlKeyArray.join('&')}`\n          }\n          return urlKeyArray.join('&')\n        }",
        "isOn": true,
        "description": "获取二维码"
      },
      "printReceive": {
        "fn": "async function fnName(row, type){\n          const { orgId, userId, tenantId, orgName, lastProject ,userName} = this.$globalVars.$context;\n          const urlData = await this.$sharedFns.getQRCodeUrl({\n            tag: 'qReceive',\n            tId: tenantId,\n            id: row.id,\n            oId: row.orgId\n          })\n          const result = await this.$requestFns.queryReceiveMoreMaterial({ orderId: row.id });\n\n          const { printConfigs, exportConfigs } = this.$globalVars.$customConfig;\n          const { formatDate } = this.$utils;\n          row.remark = row.remark || ''\n          row.titleName = '物资入库单'\n\n\n          if (result.data.rows) {\n            result.data.rows = result.data.rows.map((item, index) => {\n              try {\n                item.taxSum = Number(Number(item.netQuantity * item.taxIncludedPrice).toFixed(2))\n                item.taxIncludedSum = Number(Number(item.netQuantity * item.taxIncludedPrice).toFixed(2))\n              } catch (e) {\n                console.log(e)\n              }\n              item.col50 = \"\"\n              item.index = index + 1\n              return item\n            })\n          }\n          console.log(this.$globalVars.$portal.portalCongfig.logo);\n          debugger\n          const params = {\n            product: 'cbaseinfo',\n            keys: [this.$globalVars.$portal.portalCongfig.logo],\n            expires: 15 // 到期时间，默认值：15分钟\n          }\n          const data = await this.$globalVars.$http.post('/shared-data/fs/accesses', params)\n          row.logoUrl = data[this.$globalVars.$portal.portalCongfig.logo]\n\n          console.log(row.logoUrl );\n          debugger\n          const sourceData = {\n            qReceive: row,\n            qReceiveMoreMaterial: result.data.rows,\n          }\n          console.log(sourceData.qReceiveMoreMaterial);\n          debugger\n          if ([10016,10001].includes(tenantId)) {\n            let order = JSON.parse(JSON.stringify(row))\n            order.titleName = '收料单'\n            order.remark = \"备注：1、第一联存根 第二联物资业务留存 第三联结算联  第四联转账联，（由工班材料员或现场材料员填制）现场技术员处、签字人员为除物资人员以外的所有现场管理人员；2、主材可以不用填写单价；3、为了一一对应粘贴，二三必须分类填写。\"\n            if (order.serviceType < 0) {\n              order.titleName = '退货单'\n              order.remark = \"备注：1、第一联留存 第二联物资业务留存 第三联结算联  第四联转账单（由工班材料员或者现场材料员填写）现场技术员处，签字人员为除物资人员以外的所有现场管理人员；2、主材料可以不填写单价；3、为了一一对应粘贴，二三材料必须分类填写。\"\n            }\n            result.data.rows.map((item, index) => {\n              item.batchNo = \"\"\n              item.storagePlace = \"\"\n              return item\n            })\n            sourceData.qReceive = order\n          }\n          Object.keys(sourceData.qReceive).map(key => {\n            if (sourceData.qReceive[key] !== 0 && !sourceData.qReceive[key]) {\n              sourceData.qReceive[key] = ''\n            }\n          })\n          sourceData.qReceiveMoreMaterial.map((item, index) => {\n            item.index = index + 1\n            Object.keys(item).map(key => {\n              if (item[key] !== 0 && !item[key]) {\n                item[key] = ''\n              }\n            })\n          })\n\n          if(type==='print'){\n            if (printConfigs.length > 0) {\n              let template = printConfigs.find(x => x.code === 'qReceiveOrderPrint');\n              if ([10016,10001].includes(tenantId)){\n                template = printConfigs.find(x => x.code === 'qReceiveOrderPrintCrssg');\n              }\n              if (template) {\n                const description = JSON.parse(template.content).templateOption;\n                sourceData.qReceive.QCodeUrl = urlData;\n                console.log(sourceData.qReceive.QCodeUrl);\n\n                const print = this.$globalVars.$print;\n                const printFn = new print(description, sourceData);\n                printFn.print();\n              }\n            }\n          } else {\n            sourceData.qReceive.excelTime = formatDate('YYYY-MM-DD HH:mm:ss')\n            sourceData.qReceive.excelName =  userName\n            console.log(sourceData.qReceive.excelTime );\n            console.log(\"=============excelTime=================\");\n            if (exportConfigs.length > 0) {\n              let template = exportConfigs.find(x => x.code === 'qReceiveOrderExcel');\n              if ([10016, 10001].includes(tenantId)) {\n                template = exportConfigs.find(x => x.code === 'qReceiveOrderExcelCrssg');\n              }\n              if (template) {\n                const description = JSON.parse(template.content).templateOption;\n                const excel = this.$globalVars.$excel;\n                const exportCore = new excel(description, sourceData);\n                exportCore.export(`物资入库单_${formatDate('YYYY-MM-DD HH:mm:ss')}.xlsx`);\n              }\n            }\n          }\n        }",
        "isOn": true,
        "description": "入库登记打印导出"
      },
      "groupCount": {
        "fn": "async function fnName(items = [], callback){\n          return items.reduce((prev, cur, index, array) => {\n            const { key, value } = callback(cur, index, array)\n            if (prev[key] !== undefined) {\n              prev[key] = new Decimal(prev[key]).add(value)\n            } else {\n              prev[key] = value\n            }\n            return prev\n          }, {})\n        }",
        "isOn": true,
        "description": "按照key求和"
      },
      "printDelivery": {
        "fn": "async function fnName(row, type) {\n          const { orgId, userId, tenantId, orgName, lastProject, userName } = this.$globalVars.$context;\n\n          const urlData = await this.$sharedFns.getQRCodeUrl({\n            tag: 'qDelivery',\n            tId: tenantId,\n            id: row.id,\n            oId: row.orgId\n          })\n          console.log(this.$globalVars.$portal.portalCongfig.logo);\n          debugger\n          const params = {\n            product: 'cbaseinfo',\n            keys: [this.$globalVars.$portal.portalCongfig.logo],\n            expires: 15 // 到期时间，默认值：15分钟\n          }\n          const data = await this.$globalVars.$http.post('/shared-data/fs/accesses', params)\n          row.logoUrl = data[this.$globalVars.$portal.portalCongfig.logo]\n\n          const result = await this.$requestFns.queryDeliveryOrderItems({\n            id: row.id,\n            orgId: row.orgId,\n            orderId: row.id,\n            condtionItems: [\n              {\n                fieldName: 'isRemoved',\n                op: 'eq',\n                fieldValue: false\n              }\n            ]\n          });\n          const { printConfigs, exportConfigs } = this.$globalVars.$customConfig;\n          const { formatDate } = this.$utils;\n          if (!row.ghName) {\n            row.ghName = ''\n          }\n          if (!row.remark) {\n            row.remark = ''\n          }\n          const sourceData = {\n            qDelivery: JSON.parse(JSON.stringify(row)),\n            qDeliveryMoreMaterial: result.data.qDeliveryMoreMaterials,\n          }\n          debugger\n          if ([10016, 10001].includes(tenantId)) {\n            let order = JSON.parse(JSON.stringify(row))\n            order.titleName = '出库单'\n            order.remark = \"备注：1、第一联存根 第二联物资业务留存 第三联结算联  第四联转账联，（由工班材料员或现场材料员填制）现场技术员处、签字人员为除物资人员以外的所有现场管理人员；2、主材可以不用填写单价；3、为了一一对应粘贴，二三必须分类填写。\"\n            if (order.serviceType < 0) {\n              order.titleName = '退料单'\n              order.remark = \"备注：1、第一联留存 第二联物资业务留存 第三联结算联  第四联转账单（由工班材料员或者现场材料员填写）现场技术员处，签字人员为除物资人员以外的所有现场管理人员；2、主材料可以不填写单价；3、为了一一对应粘贴，二三材料必须分类填写。\"\n            }\n\n            sourceData.qDelivery = order\n          }\n          if (result.data.qDeliveryMoreMaterials) {\n            result.data.qDeliveryMoreMaterials.forEach((m, index) => {\n              m.index = Number(index + 1)\n              m._index = Number(index + 1)\n              m.ghFullName = row.ghFullName || row.ghName || ''\n              m.taxIncludedPrice = m.taxIncludedPrice || ''\n              m.taxIncludedSum = Number(Number(m.taxIncludedSum).toFixed(2)) || ''\n              m.quantity = m.quantity || ''\n              m.price = ''\n              m.remark = m.remark  || ''\n            })\n          }\n          console.log(result.data.qDeliveryMoreMaterials);\n          debugger\n\n          Object.keys(sourceData.qDelivery).map(key => {\n            if (sourceData.qDelivery[key] !== 0 && !sourceData.qDelivery[key]) {\n              sourceData.qDelivery[key] = ''\n            }\n          })\n          sourceData.qDeliveryMoreMaterial.map((item, index) => {\n            item.index = index + 1\n            item.ghName = sourceData.qDelivery.ghName || ''\n            Object.keys(item).map(key => {\n              if (item[key] !== 0 && !item[key]) {\n                item[key] = ''\n              }\n            })\n          })\n          if (sourceData.qDelivery.serviceType == 10 || sourceData.qDelivery.serviceType == -11){\n\n            sourceData.qDelivery.labourName = sourceData.qDelivery.teamId !== sourceData.qDelivery.labourId ? sourceData.qDelivery.labourName + '-' + sourceData.qDelivery.teamName : sourceData.qDelivery.labourName;\n          }\n          if (sourceData.qDelivery.serviceType == 40){\n            sourceData.qDelivery.scrapReason = \"报废原因：\" + sourceData.qDelivery.scrapReason\n          }else{\n            sourceData.qDelivery.scrapReason = '   '\n          }\n\n          if (type === 'print') {\n            if (printConfigs.length > 0) {\n              let template = printConfigs.find(x => x.code === 'qDeliveryOrderPrint');\n              if ([10016,10001].includes(tenantId)) {\n                template = printConfigs.find(x => x.code === 'qDeliveryOrderPrintCrssg');\n              }\n              if (template) {\n                const description = JSON.parse(template.content).templateOption;\n                sourceData.qDelivery.QCodeUrl = urlData;\n                console.log(sourceData.qDelivery.QCodeUrl);\n                // sourceData.qDelivery.titleName = lastProject.parentShortName\n                // sourceData.qDelivery.titleSecondName = orgName + sourceData.qCheckAccountOrder.orderDate + '协作队伍领用物资对账单'\n                // sourceData.qDelivery.orglastName = lastProject.parentShortName + orgName\n                const print = this.$globalVars.$print;\n                const printFn = new print(description, sourceData);\n                printFn.print();\n              }\n            }\n          } else {\n            sourceData.qDelivery.excelName = userName\n            sourceData.qDelivery.excelTime = formatDate('YYYY-MM-DD HH:mm:ss')\n            if (exportConfigs.length > 0) {\n              let template = exportConfigs.find(x => x.code === 'qDeliveryOrderExcel');\n              if ([10016, 10001].includes(tenantId)) {\n                template = exportConfigs.find(x => x.code === 'qDeliveryOrderExcelCrssg');\n              }\n              if (template) {\n                const description = JSON.parse(template.content).templateOption;\n                const excel = this.$globalVars.$excel;\n                const exportCore = new excel(description, sourceData);\n                // exportCore.export(`files/${row.titleName}_${+new Date()}.xlsx`);\n                exportCore.export(`物资出库单_${formatDate('YYYY-MM-DD HH:mm:ss')}.xlsx`);\n              }\n            }\n          }\n        }",
        "isOn": true,
        "description": "发料单打印导出"
      },
      "receiveToDeliveryPrint": {
        "fn": "async function fnName(row, type) {\n          const { orgId, userId, tenantId, orgName, lastProject, userName} = this.$globalVars.$context;\n          const urlData = await this.$sharedFns.getQRCodeUrl({\n            tag: 'qRecToDel',\n            tId: tenantId,\n            id: row.id,\n            oId: row.orgId\n          })\n          console.log(this.$globalVars.$portal.portalCongfig.logo);\n          debugger\n          const params = {\n            product: 'cbaseinfo',\n            keys: [this.$globalVars.$portal.portalCongfig.logo],\n            expires: 15 // 到期时间，默认值：15分钟\n          }\n          const data = await this.$globalVars.$http.post('/shared-data/fs/accesses', params)\n          row.logoUrl = data[this.$globalVars.$portal.portalCongfig.logo]\n          debugger\n          const result = await this.$requestFns.getRdsOrderItems({\n            id: row.id,\n            orgId: row.orgId\n          });\n          const { printConfigs, exportConfigs } = this.$globalVars.$customConfig;\n          const { formatDate } = this.$utils;\n\n          console.log(printConfigs, exportConfigs, \"printConfigs\");\n          if (!result.error) {\n            const { createdAt, orderCode } = result.data.qReceiveToDeliverys\n            const { purchaseMethod, plateNumber } = result.data.qReceives\n            row.createdAt = formatDate(createdAt)\n            row.purchaseMethod = purchaseMethod || ''\n            row.plateNumber = plateNumber || ''\n            if (!row.ghName) {\n              row.ghName = ''\n            }\n            if (!row.remark) {\n              row.remark = ''\n            }\n            row.titleName = '物资直入直出单'\n            result.data.qReceiveMoreMaterials = result.data.qReceiveMoreMaterials.map((item, index) => {\n              try {\n                item.taxSum = Number(Number(item.netQuantity * item.taxIncludedPrice).toFixed(2))\n                item.taxIncludedSum = Number(Number(item.netQuantity * item.taxIncludedPrice).toFixed(2))\n              } catch (e) {\n                console.log(e)\n              }\n              item.col50 = \"\"\n              item.index = index + 1\n              item.empty = ''\n              item.price = ''\n              item.testReportNo = item.testReportNo || ''\n              item.skillCardNo = item.skillCardNo || ''\n              item.manufacturer = item.manufacturer || ''\n              item.batchNo = item.batchNo || ''\n              item.storageRoom = item.storageRoom || ''\n              item.freight = item.freight || 0\n              return item\n            })\n          }\n\n          const sourceData = {\n            order: JSON.parse(JSON.stringify(row)),\n            orderItem: result.data.qReceiveMoreMaterials,\n          }\n          Object.keys(sourceData.order).map(key => {\n            if (sourceData.order[key] !== 0 && !sourceData.order[key]) {\n              sourceData.order[key] = ''\n            }\n          })\n          sourceData.orderItem.map((item, index) => {\n            item.index = index + 1\n            Object.keys(item).map(key => {\n              if (item[key] !== 0 && !item[key]) {\n                item[key] = ''\n              }\n            })\n          })\n          sourceData.order.labourName = sourceData.order.teamId !== sourceData.order.labourId ? sourceData.order.labourName + '-' + sourceData.order.teamName : sourceData.order.labourName\n          if (type === 'print') {\n            if (printConfigs.length > 0) {\n              const template = printConfigs.find(x => x.code === 'qRdsOrderPrint');\n              if (template) {\n                const description = JSON.parse(template.content).templateOption;\n                sourceData.order.QCodeUrl = urlData;\n                console.log(sourceData.order.QCodeUrl );\n                // sourceData.qReceive.titleName = lastProject.parentShortName\n                // sourceData.qReceive.titleSecondName = orgName + sourceData.qCheckAccountOrder.orderDate + '协作队伍领用物资对账单'\n                // sourceData.qReceive.orglastName = lastProject.parentShortName + orgName\n                const print = this.$globalVars.$print;\n                const printFn = new print(description, sourceData);\n                printFn.print();\n              }\n            }\n          } else {\n            sourceData.order.excelName = userName\n            sourceData.order.excelTime = formatDate('YYYY-MM-DD HH:mm:ss')\n            if (exportConfigs.length > 0) {\n              const template = exportConfigs.find(x => x.code === 'qRdsOrderExcel');\n              if (template) {\n                const description = JSON.parse(template.content).templateOption;\n                const excel = this.$globalVars.$excel;\n                const exportCore = new excel(description, sourceData);\n                exportCore.export(`物资直入直出单_${formatDate('YYYY-MM-DD HH:mm:ss')}.xlsx`);\n              }\n            }\n          }\n        }",
        "isOn": true,
        "description": "直进直出打印导出"
      },
      "isVehicleNumber": {
        "fn": "function fnName(vehicleNumber){\n          var xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]{4}$))/\n          var creg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/\n          if (vehicleNumber.length == 7) {\n            return creg.test(vehicleNumber)\n          } else if (vehicleNumber.length == 8) {\n            return xreg.test(vehicleNumber)\n          } else {\n            return false\n          }\n        }",
        "isOn": true,
        "description": "车牌号码正则"
      },
      "getYlGlobalConfing": {
        "fn": "async function fnName(codes, orgId){\n          let code = ['accountDay', 'quantityDecimalDigit', 'amountDecimalDigit', 'priceDecimalDigit', 'taxRateSetting', ...codes]\n          const res = await this.$requestFns.queryConfigData({ paramsKey: code, orgId: orgId })\n          if(!res.error&&res.data.code===0){\n            return res.data;\n          }else{\n            return []\n          }\n        }",
        "isOn": true,
        "description": "获取全局配置"
      },
      "getConfig": {
        "fn": "async function fnName(){\n          class PhotosConfig {\n            constructor({ count = 3, tag = 'mq2ReceiveKey' }) {\n              // 初始化后就会有值\n              this.count = count // 收料配置总条数\n              this.tag = tag\n              this.configKeys = [] // 可枚举配置项\n              this.fillData(this.count, this.tag)\n\n              // setData 后初始化值\n              this.titleList = []\n              this.totalList = []\n              this.requiredList = []\n              this.showList = []\n            }\n            fillData(count, tag) {\n              for (let i = 0; i < count; i++) {\n                const index = i + 1\n                this.configKeys.push(\n                  `${tag}${index}Title`, // 标题\n                  `${tag}${index}Total`, // 允许拍摄张数\n                  `${tag}${index}Required`, // 是否必拍\n                  `${tag}${index}Show` // 是否启用\n                )\n              }\n            }\n\n            getKey(index, data) {\n              return {\n                keys: {\n                  title: `${this.tag}${index}Title`,\n                  total: `${this.tag}${index}Total`,\n                  required: `${this.tag}${index}Required`,\n                  show: `${this.tag}${index}Show`\n                },\n                values: {\n                  title: data[`${this.tag}${index}Title`],\n                  total: data[`${this.tag}${index}Total`],\n                  required: data[`${this.tag}${index}Required`] || false,\n                  show: data[`${this.tag}${index}Show`] || false\n                }\n              }\n            }\n\n            setData(data) {\n              const map = new Map()\n              for (let i = 0; i < this.count; i++) {\n                const index = i + 1\n                const { keys: { title, total, required, show }, values } = this.getKey(index, data)\n                this.titleList.push(data[title])\n                this.totalList.push(data[total])\n                this.requiredList.push(data[required])\n                this.showList.push(data[show])\n\n                // 是否启用\n                if (data[show]) {\n                  map.set(data[title], values)\n                }\n              }\n              const result = {\n                keys: Array.from(map.keys()),\n                values: Array.from(map.values()),\n                configData: Array.from(map.keys()).reduce((memo, key) => {\n                  memo[key] = map.get(key)\n                  return memo\n                }, {}),\n                removeImg: []\n              }\n              result.data = result.keys.reduce((memo, key) => {\n                memo[key] = []\n                return memo\n              }, {})\n              return result\n            }\n\n            getConfigKeys() {\n              return this.configKeys\n            }\n          }\n\n          async function setPhotoConfig(count, tag, o) {\n            const receive = [\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveKey1Title, photoName: o.mq2ReceiveKey1Title, total: o.mq2ReceiveKey1Total, isRequired: o.mq2ReceiveKey1Required || false, isShow: o.mq2ReceiveKey1Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveKey2Title, photoName: o.mq2ReceiveKey2Title, total: o.mq2ReceiveKey2Total, isRequired: o.mq2ReceiveKey2Required || false, isShow: o.mq2ReceiveKey2Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveKey3Title, photoName: o.mq2ReceiveKey3Title, total: o.mq2ReceiveKey3Total, isRequired: o.mq2ReceiveKey3Required || false, isShow: o.mq2ReceiveKey3Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveKey4Title, photoName: o.mq2ReceiveKey4Title, total: o.mq2ReceiveKey4Total, isRequired: o.mq2ReceiveKey4Required || false, isShow: o.mq2ReceiveKey4Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveKey5Title, photoName: o.mq2ReceiveKey5Title, total: o.mq2ReceiveKey5Total, isRequired: o.mq2ReceiveKey5Required || false, isShow: o.mq2ReceiveKey5Show }\n            ]\n            const receiveReturn = [\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveReturnKey1Title, photoName: o.mq2ReceiveReturnKey1Title, total: o.mq2ReceiveReturnKey1Total, isRequired: o.mq2ReceiveReturnKey1Required || false, isShow: o.mq2ReceiveReturnKey1Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveReturnKey2Title, photoName: o.mq2ReceiveReturnKey2Title, total: o.mq2ReceiveReturnKey2Total, isRequired: o.mq2ReceiveReturnKey2Required || false, isShow: o.mq2ReceiveReturnKey2Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveReturnKey3Title, photoName: o.mq2ReceiveReturnKey3Title, total: o.mq2ReceiveReturnKey3Total, isRequired: o.mq2ReceiveReturnKey3Required || false, isShow: o.mq2ReceiveReturnKey3Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveReturnKey4Title, photoName: o.mq2ReceiveReturnKey4Title, total: o.mq2ReceiveReturnKey4Total, isRequired: o.mq2ReceiveReturnKey4Required || false, isShow: o.mq2ReceiveReturnKey4Show }\n            ]\n            const delivery = [\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryKey1Title, photoName: o.mq2DeliveryKey1Title, total: o.mq2DeliveryKey1Total, isRequired: o.mq2DeliveryKey1Required || false, isShow: o.mq2DeliveryKey1Show },\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryKey2Title, photoName: o.mq2DeliveryKey2Title, total: o.mq2DeliveryKey2Total, isRequired: o.mq2DeliveryKey2Required || false, isShow: o.mq2DeliveryKey2Show },\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryKey3Title, photoName: o.mq2DeliveryKey3Title, total: o.mq2DeliveryKey3Total, isRequired: o.mq2DeliveryKey3Required || false, isShow: o.mq2DeliveryKey3Show },\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryKey4Title, photoName: o.mq2DeliveryKey4Title, total: o.mq2DeliveryKey4Total, isRequired: o.mq2DeliveryKey4Required || false, isShow: o.mq2DeliveryKey4Show },\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryKey5Title, photoName: o.mq2DeliveryKey5Title, total: o.mq2DeliveryKey5Total, isRequired: o.mq2DeliveryKey5Required || false, isShow: o.mq2DeliveryKey5Show }\n            ]\n            const deliveryReturn = [\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryReturnKey1Title, photoName: o.mq2DeliveryReturnKey1Title, total: o.mq2DeliveryReturnKey1Total, isRequired: o.mq2DeliveryReturnKey1Required || false, isShow: o.mq2DeliveryReturnKey1Show },\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryReturnKey2Title, photoName: o.mq2DeliveryReturnKey2Title, total: o.mq2DeliveryReturnKey2Total, isRequired: o.mq2DeliveryReturnKey2Required || false, isShow: o.mq2DeliveryReturnKey2Show },\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryReturnKey3Title, photoName: o.mq2DeliveryReturnKey3Title, total: o.mq2DeliveryReturnKey3Total, isRequired: o.mq2DeliveryReturnKey3Required || false, isShow: o.mq2DeliveryReturnKey3Show },\n              { photoType: '出场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2DeliveryReturnKey4Title, photoName: o.mq2DeliveryReturnKey4Title, total: o.mq2DeliveryReturnKey4Total, isRequired: o.mq2DeliveryReturnKey4Required || false, isShow: o.mq2DeliveryReturnKey4Show }\n            ]\n            const receiveToDelivery = [\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveToDeliveryKey1Title, photoName: o.mq2ReceiveToDeliveryKey1Title, total: o.mq2ReceiveToDeliveryKey1Total, isRequired: o.mq2ReceiveToDeliveryKey1Required || false, isShow: o.mq2ReceiveToDeliveryKey1Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveToDeliveryKey2Title, photoName: o.mq2ReceiveToDeliveryKey2Title, total: o.mq2ReceiveToDeliveryKey2Total, isRequired: o.mq2ReceiveToDeliveryKey2Required || false, isShow: o.mq2ReceiveToDeliveryKey2Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveToDeliveryKey3Title, photoName: o.mq2ReceiveToDeliveryKey3Title, total: o.mq2ReceiveToDeliveryKey3Total, isRequired: o.mq2ReceiveToDeliveryKey3Required || false, isShow: o.mq2ReceiveToDeliveryKey3Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveToDeliveryKey4Title, photoName: o.mq2ReceiveToDeliveryKey4Title, total: o.mq2ReceiveToDeliveryKey4Total, isRequired: o.mq2ReceiveToDeliveryKey4Required || false, isShow: o.mq2ReceiveToDeliveryKey4Show },\n              { photoType: '入场', photoUrl: '', _photoUrl: '', cameraPosition: o.mq2ReceiveToDeliveryKey5Title, photoName: o.mq2ReceiveToDeliveryKey5Title, total: o.mq2ReceiveToDeliveryKey5Total, isRequired: o.mq2ReceiveToDeliveryKey5Required || false, isShow: o.mq2ReceiveToDeliveryKey5Show }\n            ]\n            return { receive, receiveReturn, delivery, deliveryReturn, receiveToDelivery }\n          }\n          // -----------收料\n          const receiveInstance = new PhotosConfig({ count: 5, tag: 'mq2ReceiveKey' }) // 收料\n          const receiveReturnInstance = new PhotosConfig({ count: 4, tag: 'mq2ReceiveReturnKey' }) // 退调入-退收料\n          const receiveKeyCode = receiveInstance.getConfigKeys()\n          const receiveReturnKeyCode = receiveReturnInstance.getConfigKeys()\n          // --------- 发料\n          const deliveryInstance = new PhotosConfig({ count: 5, tag: 'mq2DeliveryKey' }) // 发料\n          const deliveryReturnInstance = new PhotosConfig({ count: 4, tag: 'mq2DeliveryReturnKey' }) // 退发料-退调出\n          const deliveryKeyCode = deliveryInstance.getConfigKeys()\n          const deliveryReturnKeyCode = deliveryReturnInstance.getConfigKeys()\n          // ---------直进直出\n          const receiveToDeliveryInstance = new PhotosConfig({ count: 5, tag: 'mq2ReceiveToDeliveryKey' })\n          const receiveToDeliveryKeyCode = receiveToDeliveryInstance.getConfigKeys()\n          const codes = [\n            ...receiveKeyCode, ...receiveReturnKeyCode, ...deliveryKeyCode, ...deliveryReturnKeyCode, ...receiveToDeliveryKeyCode,\n            'receivePriceGtZore', 'exitTime', 'cscec2b3clogo', 'logo','mq2ReceiveMaterialGhPlan',\n            'deliveryGhConfIsRequired', 'mq2ReceiveMaterialPurchasePlan', 'mq2ReceiveMaterialPurchaseContract']\n          const { lastProject } = this.$globalVars.$context;\n          const res = await this.$sharedFns.getYlGlobalConfing(codes, lastProject.fullId);\n          console.log(res);\n          console.log(\"------------------------------------------------------------\");\n          //\n          const photosConfig = await setPhotoConfig(5, 'mq2ReceiveKey', res.data)\n          this.$dataModels.photosConfig.singleTable = photosConfig;\n\n          const globalConfig = {\n            mq2ReceiveMaterialPurchasePlan: res.data.mq2ReceiveMaterialPurchasePlan,\n            mq2ReceiveMaterialPurchaseContract: res.data.mq2ReceiveMaterialPurchaseContract,\n            mq2ReceiveMaterialGhPlan: res.data.mq2ReceiveMaterialGhPlan,\n            ghInfo: res.data.deliveryGhConfIsRequired || false,\n            material: false,\n            productLimitFlag: false,\n            logo: res.data.logo || 'attachment/25ecaf58-ff6c-457e-ad74-21c1aa274ba2.png',\n            accountDay: res.data.accountDay || 25,\n            priceSettings: res.data.priceDecimalDigit || 8,\n            quantitySettings: res.data.quantityDecimalDigit,\n            cscec2b3clogo: res.data.cscec2b3clogo || 'attachment/7f4f2a4d-9ad1-4259-b7d3-4f8c758c96bf.png',\n            taxRateSettings: res.data.taxRateSetting || 13,\n            sumSettings: res.data.amountDecimalDigit || 2,\n          }\n          Object.assign(this.$dataModels.globalConfig.singleTable, globalConfig)\n          console.log(this.$dataModels.photosConfig.singleTable, this.$dataModels.globalConfig.singleTable,'photosConfig')\n        }",
        "isOn": true,
        "description": "获取全局配置"
      },
      "getGlobalPhotosConfS": {
        "fn": "function fnName(type = 'receive'){\n          this.$dataModels.receiveFormModel.qReceivePhotos = [];\n          this.$dataModels.deliveryFormModel.qDeliveryPhotos = [];\n          this.$dataModels.rdsFormModel.qReceivePhotos = [];\n          const confObj = this.$dataModels.photosConfig.singleTable[type];\n          if (!confObj) {\n            return []\n          }\n          const listConf = []\n          confObj.forEach(item => {\n            if (item.isShow && item.cameraPosition) {\n              // for (let i = 0; i < item.total; i++) {\n              listConf.push(this.$sharedFns.deepClone(item))\n              // }\n            }\n          })\n          return listConf;\n        }",
        "isOn": true,
        "description": "获取收发直照片配置"
      },
      "deepClone": {
        "fn": "function fnName(obj, hash = new WeakMap()){\n          if (Object(obj) !== obj) return obj // primitives\n          if (hash.has(obj)) return hash.get(obj) // cyclic reference\n          const result = obj instanceof Set ? new Set(obj) // See note about this!\n            : obj instanceof Map ? new Map(Array.from(obj, ([key, val]) =>\n                [key, deepClone(val, hash)]))\n              : obj instanceof Date ? new Date(obj)\n                : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\n                  // ... add here any specific treatment for other classes ...\n                  // and finally a catch-all:\n                  : obj.constructor ? new obj.constructor()\n                    : Object.create(null)\n          hash.set(obj, result)\n          return Object.assign(result, ...Object.keys(obj).map(\n            key => ({ [key]: this.$sharedFns.deepClone(obj[key], hash) })))\n        }",
        "isOn": true,
        "description": "深拷贝"
      },
      "getOrderCode": {
        "fn": "async function fnName(param){\n          const obj = {\n            orgId: param.orgId,\n            id: param.id || null,\n            recordedDate: param.recordedDate,\n            moduleCode: param.moduleCode,\n            params: {\n              code: param.codeWord\n            },\n            condtionItems: [\n              {\n                fieldName: 'orderOrigin',\n                op: 'eq',\n                fieldValue: 2\n              }\n            ]\n          }\n          this.$dataModels.rdsFormModel.orderCodeCondtion = obj;\n          const result = await this.$globalVars.$http.post('/shared-data/q-orderCode', obj);\n          return result;\n        }",
        "isOn": true,
        "description": "获取单据编号"
      },
      "downloadFiles": {
        "fn": "async function fnName(photos){\n          this.$assemCore.setForm('previewSrcList');\n          const imgList = photos.map(row => {\n            if (row.photoUrl) return row.photoUrl\n          })\n          const params = Object.assign({\n            type: 'img',\n            product: 'mquantity',\n            keys: imgList.length > 0 ? imgList : [''],\n            expires: 15 // 到期时间，默认值：15分钟\n          })\n\n          return new Promise((resolve) => {\n            this.$globalVars.$http.post('/shared-data/fs/accesses', params).then(data => {\n              photos.forEach(photo => {\n                photo._photoUrl = data[photo.photoUrl] || null\n                this.$dataModels.previewSrcList.items.push(photo._photoUrl)\n              })\n\n              resolve({ success: true, message: '文件下载成功', data: photos })\n            }).catch(error => {\n              resolve({ success: false, message: '文件下载失败', error })\n            })\n          })\n        }",
        "isOn": true,
        "description": "获取照片路径"
      },
      "_addReceiveRows": {
        "fn": "async function fnName(_rows, type) {\n          let { qReceive, qReceiveMoreMaterials } = this.$dataModels.receiveFormModel;\n          let data = []\n          if (type === 'common') {\n            data = this.$sharedFns.setReceiveMaterial(_rows, 'commonSource')\n          } else if (type === 'plan') {\n            data = this.$sharedFns.setReceiveMaterial(_rows, 'planSouce')\n          } else if (type === 'contract') {\n            _rows.forEach(item => {\n              item.batchNo = qReceive.batchNo\n            })\n            data = _rows\n          }\n          console.log(data, 'data')\n          //   // 收料常用材料库选材\n          //   this.activeName = 'materialsList'\n          //   this.hasItems = _rows.length > 0\n          const mIds = this.$sharedFns.getKeyData(qReceiveMoreMaterials, 'materialId');\n          let paramsMaterial = [...qReceiveMoreMaterials, ...data].map(r => {\n            r.quantity = 0\n            return r\n          })\n\n          // 开启校验\\n \\n\n\n        }",
        "isOn": true,
        "description": "收料选材"
      },
      "setReceiveMaterial": {
        "fn": "async function fnName(data, source){\n          const { qReceive } = this.$dataModels.receiveFormModel;\n          console.log(this.$exposeds.get('tableEdit_lqivnbp9').model.elementOption.value.mapConfig, 'mapConfig')\n          const dataSource = this.$exposeds.get('tableEdit_lqivnbp9').model.elementOption.value.mapConfig[source];\n          // this.$exposeds.get('tableEdit_lqivnbp9').model.elementOption.value = {\n          // \tmapConfig: {}\n          // };\n          const obj = {}\n          const defaultProp = dataSource.reduce((prev, cur) => {\n            if (cur.isReplace) {\n              prev[cur.selprop] = cur\n            } else {\n              obj[cur.prop] = cur.defaultVal\n            }\n            return prev\n          }, {})\n          return data.reduce((prev, cur) => {\n            const row = {}\n            for (const key in cur) {\n              if (defaultProp[key]) {\n                const dd = cur[key] || defaultProp[key].defaultVal\n                row[defaultProp[key].prop] = dd\n              } else {\n\n              }\n            }\n            if (qReceive.serviceType>0) {\n              row.batchNo = qReceive.batchNo\n            } else {\n              row.batchNo = ''\n            }\n            if (qReceive.serviceType === 10 && qReceive.serviceType>0) {\n              row.taxRate = qReceive.taxRate\n            } else {\n              row.taxRate = 0\n            }\n            prev.push(Object.assign({}, obj, row))\n            return prev\n          }, [])\n        }",
        "isOn": true,
        "description": "设置收料材料信息"
      },
      "getKeyData": {
        "fn": "async function fnName(items = [], key){\n          return items.reduce((prev, cur) => {\n            if (cur[key] !== undefined) {\n              prev.push(cur[key])\n            }\n            return prev\n          }, [])\n        }",
        "isOn": true,
        "description": "对象中提取指定属性至数组返回"
      },
      "addMaterialsUseCount": {
        "isOn": true,
        "description": "材料使用频率",
        "fn": "async function fnName(orgId, items){\n          const res = await this.$globalVars.$http.post('/shared-data/c-materials-use-count',{\n            orgId: orgId,\n            items: items\n          })\n          if(!res.error) {\n            return {success: true}\n          } else {\n            return { success: false }\n          }\n        }"
      },
      "_handleMaterialList": {
        "fn": "async function fnName(list){\n          console.log(list);\n          if(!list){\n            return\n          }\n\n          const qSettings = this.$dataModels.globalConfig.singleTable.quantitySettings || 8\n          const params = {\n            qDelivery: this.$dataModels.deliveryFormModel.qDelivery,\n            qDeliveryMoreMaterials: list,\n            qDeliveryMoreOrders: list,\n            returnOrderType: false\n          }\n          let mapObj = {}\n          let mapItemObj = {}\n          list.forEach(ele => {\n            ele.serviceType = this.$dataModels.deliveryFormModel.qDelivery.serviceType\n            if (ele.itemBarCode) {\n              if (this.$dataModels.deliveryFormModel.qDelivery.serviceType > 0) {\n                mapItemObj[ele.itemBarCode + '' + ele.rawId] = {}\n                mapItemObj[ele.itemBarCode + '' + ele.rawId].item = ele\n                mapItemObj[ele.itemBarCode + '' + ele.rawId].inventoryQuantity = new Decimal(0)\n              } else {\n                mapItemObj[ele.itemBarCode + ''] = {}\n                mapItemObj[ele.itemBarCode + ''].item = ele\n                mapItemObj[ele.itemBarCode + ''].inventoryQuantity = new Decimal(0)\n              }\n            } else {\n              mapObj[ele.materialId + ''] = {}\n              mapObj[ele.materialId + ''].item = ele\n              mapObj[ele.materialId + ''].inventoryQuantity = new Decimal(0)\n            }\n          })\n          console.log(this.$dataModels.deliveryFormModel);\n\n          this.$dataModels.handleMaterial.qDelivery = params.qDelivery\n          // Object.assign(this.$dataModels.handleMaterial.qDelivery, params.qDelivery)\n          Object.assign(this.$dataModels.handleMaterial, params)\n          const data = await this.$requestFns.handleDeliveryMaterials(params);\n          const { materialList} = this.$dataModels.deliveryFormModel\n          if (materialList[0]){\n            delete materialList[0]\n          }\n\n          // 返回值需要检查分解值是否够\n          for (const ele of data.data) {\n            ele.id = null\n            if (ele.typeMark === '材料维度') {\n              if (mapObj[ele.materialId]) {\n                mapObj[ele.materialId].inventoryQuantity = mapObj[ele.materialId].inventoryQuantity.plus(ele.netQuantity)\n              } else {\n                mapObj[ele.materialId].inventoryQuantity = new Decimal(ele.netQuantity)\n              }\n              materialList[ele.materialId + ''] = data.data.filter(item => item.materialId === ele.materialId)\n            } else {\n              if (this.$dataModels.deliveryFormModel.qDelivery.serviceType > 0) {\n                if (mapItemObj[ele.itemBarCode + '' + ele.rawId]) {\n                  mapItemObj[ele.itemBarCode + '' + ele.rawId].inventoryQuantity = mapItemObj[ele.itemBarCode + '' + ele.rawId].inventoryQuantity.plus(ele.netQuantity)\n                } else {\n                  mapItemObj[ele.itemBarCode + '' + ele.rawId].inventoryQuantity = new Decimal(ele.netQuantity)\n                }\n                materialList[ele.itemBarCode + '' + ele.rawId] = data.data.filter(item => {\n                  return item.itemBarCode === ele.itemBarCode && item.rawId === ele.rawId\n                })\n              } else {\n                if (mapItemObj[ele.itemBarCode + '']) {\n                  mapItemObj[ele.itemBarCode + ''].inventoryQuantity = mapItemObj[ele.itemBarCode + ''].inventoryQuantity.plus(ele.netQuantity)\n                } else {\n                  mapItemObj[ele.itemBarCode + ''].inventoryQuantity = new Decimal(ele.netQuantity)\n                }\n                materialList[ele.itemBarCode + ''] = data.data.filter(item => item.itemBarCode === ele.itemBarCode)\n              }\n            }\n          }\n          for (const key in mapObj) {\n            console.log(mapObj[key].inventoryQuantity);\n            console.log(mapObj[key].item.netQuantity);\n            if (mapObj[key].inventoryQuantity < mapObj[key].item.netQuantity) {\n              console.log(mapObj[key].item.materialName + \"分解量不足发料量\");\n              mapObj[key].item.netQuantity = new Decimal(mapObj[key].inventoryQuantity)\n            }\n          }\n          for (const key in mapItemObj) {\n            if (mapItemObj[key].inventoryQuantity < mapItemObj[key].item.netQuantity) {\n              console.log(mapItemObj[key].item.itemBarCode + \"分解量不足发料量\");\n              mapItemObj[key].item.netQuantity = new Decimal(mapItemObj[key].inventoryQuantity)\n            }\n          }\n\n          console.log( '_handleMaterialList')\n        }",
        "isOn": true,
        "description": "分解材料"
      },
      "getPhotoConfig": {
        "fn": "async function fnName(type, num) {\n          let count = num || 1\n          let tag = type || 'mq2ReceiveKey'\n          let photoType = ['mq2ReceiveKey', 'mq2ReceiveReturnKey', 'mq2ReceiveToDeliveryKey','mq2ReceiveGpy'].includes(tag) ? '入场' : '出场'\n          let configKeys = []\n          let configList = []\n          for (let i = 0; i < count; i++) {\n            const index = i + 1\n            configKeys.push(\n              `${tag}${index}Title`, // 标题\n              `${tag}${index}Total`, // 允许拍摄张数\n              `${tag}${index}Required`, // 是否必拍\n              `${tag}${index}Show` // 是否启用\n            )\n          }\n          if (type ==='mq2ReceiveKey'){\n            // 收-高拍仪\n            configKeys.push('mq2ReceiveGpy1Total', 'mq2ReceiveGpy1Show', 'mq2ReceiveGpy1Required')\n          } else if (type === 'mq2DeliveryKey'){\n            // 发-高拍仪\n            configKeys.push('mq2DeliveryGpy1Total', 'mq2DeliveryGpy1Required', 'mq2DeliveryGpy1Show')\n          }else {\n            // 直收直发-高拍仪\n            configKeys.push('mq2RdsGpy1Total', 'mq2RdsGpy1Required', 'mq2RdsGpy1Show')\n          }\n\n          const pConfig = await this.$sharedFns.getConfigData({ paramsKey: configKeys })\n          if (type === 'mq2ReceiveKey'){\n            // 收\n            this.$dataModels.gpyPhotoList.singleTable.photoNumber = pConfig.data.mq2ReceiveGpy1Total\n            this.$dataModels.gpyPhotoList.singleTable.isRequired = pConfig.data.mq2ReceiveGpy1Required\n            this.$dataModels.gpyPhotoList.singleTable.isShow = pConfig.data.mq2ReceiveGpy1Show\n\n          } else if (type ==='mq2DeliveryKey'){\n            // 发\n            this.$dataModels.gpyPhotoList.singleTable.photoNumber = pConfig.data.mq2DeliveryGpy1Total\n            this.$dataModels.gpyPhotoList.singleTable.isRequired = pConfig.data.mq2DeliveryGpy1Required\n            this.$dataModels.gpyPhotoList.singleTable.isShow = pConfig.data.mq2DeliveryGpy1Show\n          }else {\n            // 直收直发\n            this.$dataModels.gpyPhotoList.singleTable.photoNumber = pConfig.data.mq2RdsGpy1Total\n            this.$dataModels.gpyPhotoList.singleTable.isRequired = pConfig.data.mq2RdsGpy1Required\n            this.$dataModels.gpyPhotoList.singleTable.isShow = pConfig.data.mq2RdsGpy1Show\n\n          }\n          this.$dataModels.configData ? this.$dataModels.configData.photoConfig = pConfig.data : this.$dataModels.configData = { photoConfig: pConfig.data }\n          for (let i = 0; i < count; i++) {\n            const index = i + 1\n            if (pConfig.data[`${tag}${index}Show`]) {\n\n\n              const val = {\n                photoType: photoType,\n                // photoUrl: '',\n                // _photoUrl: '',\n                cameraPosition: pConfig.data[`${tag}${index}Title`],\n                // photoName: pConfig.data[`${tag}${index}Title`],\n                total: pConfig.data[`${tag}${index}Total`],\n                isRequired: pConfig.data[`${tag}${index}Required`] || false,\n                isShow: pConfig.data[`${tag}${index}Show`],\n                photoList: []\n              }\n              configList.push(val)\n            }\n          }\n          return configList\n        }",
        "isOn": true,
        "description": "获取照片配置"
      },
      "getConfigData": {
        "isOn": true,
        "description": "获取配置信息",
        "fn": "async function fnName(params) {\n          const query = {\n            namespaceCode: 'sysConfig',\n            categoryCode: 'global',\n            paramsKey: [],\n            orgId: 0\n          }\n          Object.assign(query, params)\n          if (!query.orgId) {\n            query.orgId = this.$globalVars.$context.fullId\n          } else {\n            query.orgId = (query.orgId - 0) || 0\n          }\n\n          const result = await this.$globalVars.$http.get(`/shared-data/configuration/get-config-data?namespaceCode=${query.namespaceCode}&categoryCode=${query.categoryCode}&paramsKey=${query.paramsKey}&orgId=${query.orgId}`)\n          return result\n        }"
      },
      "handlePhotoData": {
        "fn": "async function fnName(table) {\n          let photos = []\n          let obj = {}\n          let configList = []\n          const { receiveFormModel, deliveryFormModel, rdsFormModel } = this.$dataModels\n          if (table == 'receive') {\n            photos = receiveFormModel.photos\n            configList = await this.$sharedFns.getPhotoConfig(\n              receiveFormModel.qReceive.serviceType > 0 ? 'mq2ReceiveKey' : 'mq2ReceiveReturnKey',\n              receiveFormModel.qReceive.serviceType > 0 ? 5 : 4\n            );\n          }\n          if (table == 'delivery') {\n            photos = deliveryFormModel.photos\n            configList = await this.$sharedFns.getPhotoConfig(\n              deliveryFormModel.qDelivery.serviceType > 0 ? 'mq2DeliveryKey' : 'mq2DeliveryReturnKey',\n              deliveryFormModel.qDelivery.serviceType > 0 ? 5 : 4\n            );\n          }\n          if (table == 'rds') {\n            photos = rdsFormModel.photos\n            configList = await this.$sharedFns.getPhotoConfig('mq2ReceiveToDeliveryKey', 5)\n          }\n\n          photos.forEach(t => {\n            if (!obj[t.cameraPosition]) {\n              obj[t.cameraPosition] = [Object.assign(t, { name: t.photoUrl, key: t.photoUrl })]\n            } else {\n              obj[t.cameraPosition].push(Object.assign(t, { name: t.photoUrl, key: t.photoUrl }))\n            }\n          })\n          configList.forEach(cof => {\n            cof.photoList = obj[cof.cameraPosition] || []\n          })\n          if (table == 'receive') {\n            receiveFormModel.qReceivePhotos = configList\n          }\n          if (table == 'delivery') {\n            deliveryFormModel.qDeliveryPhotos = configList\n          }\n          if (table == 'rds') {\n            rdsFormModel.qReceivePhotos = configList\n          }\n        }",
        "isOn": true,
        "description": "处理照片数据格式"
      },
      "resetSortCode": {
        "isOn": true,
        "description": "编辑表格排序",
        "fn": "async function fnName(table) {\n          if (table == 'receive') {\n            const { receiveFormModel } = this.$dataModels\n            receiveFormModel.qReceiveMoreMaterials.forEach((t, i) => {\n              t.sortCode = i\n            })\n          }\n          if (table == 'rds') {\n            const { rdsFormModel } = this.$dataModels\n            rdsFormModel.qReceiveMoreMaterials.forEach((t, i) => {\n              t.sortCode = i\n            })\n          }\n          if (table == 'delivery') {\n            const { deliveryFormModel } = this.$dataModels\n            deliveryFormModel.qDeliveryMoreOrders.forEach((t, i) => {\n              t.sortCode = i\n            })\n          }\n        }"
      },
      "resetEditPageBtnState": {
        "fn": "async function fnName(table) {\n          // 修改单据时业务类型变更会引起照片配置变更，历史照片需要单独处理，暂时先不允许变更；\n          const { mq2ReceiveMaterialPurchasePlan, mq2ReceiveMaterialPurchaseContract, mq2ReceiveMaterialGhPlan} =  this.$dataModels.globalConfig.singleTable\n\n          const { orgId, userId, tenantId } = this.$globalVars.$context\n          let isCrssgCH = false\n          let tenantIdS = [10016, 590714034630656, 1000, 10001]\n          let orgIds = [1538531228718081, 1324539576579072, 1398875375220736, 1342955240127488]\n          if (tenantIdS.includes(tenantId) && orgIds.includes(orgId)) {\n            isCrssgCH = true\n          }\n          debugger\n          if (table == 'receive') {\n            // this.$dataModels.globalConfig.singleTable.mq2ReceiveMaterialPurchaseContract //总控计划\n            const { receiveConfig } = this.$dataModels\n            const { qReceive, qReceiveMoreMaterials } = this.$dataModels.receiveFormModel\n            if (qReceive.id) {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_lrt8ic59', 'disabled', true],  // 业务类型\n                ['organizationTreeSelect_lrt8ic5b', 'disabled', true]  // 组织机构\n              ]);\n            } else {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_lrt8ic59', 'disabled', false],  // 业务类型\n                ['organizationTreeSelect_lrt8ic5b', 'disabled', false]  // 组织机构\n              ]);\n            }\n\n            if (qReceive.serviceType) {\n              const val = qReceive.serviceType\n              this.$sharedFns.setNodeOptions([\n                ['gridItem_lrt8ic4c', 'display', val == 10 ? true : false],   //结算单位\n                ['gridItem_lrt8ic4i', 'display', val == 10 ? true : false], // 税率\n                ['gridItem_lrt8ic4l', 'display', val > 0 ? true : false], // 价格类型\n                ['gridItem_lrx82mxn', 'display', val < 0 ? true : false],// 退货供应商\n                ['gridItem_lrt8ic49', 'display', val == 10 ? true : false],// 收料供应商\n                ['gridItem_lrvy0neg', 'display', val == 20 ? true : false], // 调入供应商\n                ['gridItem_lrt8ic46', 'display', val > 0 ? true : false], // 供应方式\n                ['gridItem_ltcx6zc5', 'display', val > 0 ? true : false]// 运费\n\n              ]);\n            }\n            if (qReceiveMoreMaterials.length) {\n              const val = qReceive.serviceType\n              this.$sharedFns.setNodeOptions([\n                ['searchSelect_lrycwdi8', 'disabled', true],//退货供应商\n                ['datePicker_lrt8ic5d', 'disabled', val < 0 ? true : false], // 入库时间\n                ['radioGroup_lrt8ic59', 'disabled', true], // 业务类型\n                ['organizationTreeSelect_lrt8ic5b', 'disabled', true], // 组织机构\n                ['button_lru2vi0j', 'disabled', false], // 保存\n                //  ['dictionarySelect_lrt8ic5p','disabled',true] //供应方式（tableedit组件不支持）\n              ]);\n              const { fullId } = this.$globalVars.$context\n\n              const res = await this.$requestFns.queryReceiveConfig({ fullId: fullId });\n              if (res.data) {\n                Object.assign(receiveConfig.singleTable, res.data.data)\n              }\n              const {\n                contractReceive, // 合同验收是否勾选\n                contractReceiveControl\n              } = receiveConfig.singleTable\n\n              if (contractReceive || contractReceiveControl) {\n                this.$sharedFns.setNodeOptions([\n                  ['basisCommonSelect_lrt8ic5r', 'disabled', true]\n                ])\n              } else {\n                this.$sharedFns.setNodeOptions([\n                  ['basisCommonSelect_lrt8ic5r', 'disabled', false]\n                ])\n              }\n            } else {\n              this.$sharedFns.setNodeOptions([\n                ['searchSelect_lrycwdi8', 'disabled', false],//退货供应商\n                ['button_lru2vi0j', 'disabled', true],//保存\n                ['datePicker_lrt8ic5d', 'disabled', false], // 入库时间\n                ['radioGroup_lrt8ic59', 'disabled', qReceive.id ? true : false], // 业务类型\n                ['basisCommonSelect_lrt8ic5r', 'disabled', false], // 供应商\n                ['organizationTreeSelect_lrt8ic5b', 'disabled', qReceive.id ? true : false], // 组织机构\n                //  ['dictionarySelect_lrt8ic5p', 'disabled', false] //供应方式（tableedit组件不支持)\n              ])\n            }\n\n            this.$sharedFns.setNodeOptions([\n              ['button_lru2vi0d', 'display', qReceive.serviceType > 0 ? true : false],//常用材料选材\n              ['button_lru2vi0f', 'display', qReceive.serviceType > 0 && mq2ReceiveMaterialPurchasePlan ? true : false], // 采购计划选材\n              ['button_lr924zdj', 'display', qReceive.serviceType == 10 && mq2ReceiveMaterialPurchaseContract ? true : false], // 采购合同选材\n              ['button_lr63laab', 'display', qReceive.serviceType > 0 && mq2ReceiveMaterialGhPlan ? true : false], // 总控计划选材\n              ['button_lru2vi0h', 'display', qReceive.serviceType < 0 ? true : false], // 库存选材\n              ['gridItem_ltl81akg', 'display', qReceive.serviceType > 0 && isCrssgCH ? true : false] // 批号设置\n            ])\n          }\n          if (table == 'delivery') {\n            const { qDelivery, qDeliveryMoreOrders } = this.$dataModels.deliveryFormModel\n            if (qDelivery.id) {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_lryr5yo3', 'disabled', true],  // 业务类型\n                ['organizationTreeSelect_lryr5yox', 'disabled', true]  // 组织机构\n              ]);\n            } else {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_lryr5yo3', 'disabled', false],  // 业务类型\n                ['organizationTreeSelect_lryr5yox', 'disabled', false]  // 组织机构\n              ])\n            }\n            if (qDelivery.serviceType) {\n              const val = qDelivery.serviceType\n              this.$sharedFns.setNodeOptions([\n                ['formItem_lryr5ypb', 'display', val == 10 ? true : false], //生产组织发料\n                ['gridItem_lryr5yna', 'display', Math.abs(val) < 20 && !qDelivery.isToProduction ? true : false],   //用料单位\n                ['gridItem_lryvyt7p', 'display', Math.abs(val) < 20 && !qDelivery.isToProduction ? true : false], // 施工队伍\n                ['gridItem_lryr5ynm', 'display', Math.abs(val) < 20 && !qDelivery.isToProduction ? true : false],//使用部位\n                ['gridItem_lryr5ynd', 'display', val == 10 && qDelivery.isToProduction ? true : false], //生产组织\n                ['gridItem_lryr5yng', 'display', 20 <= Math.abs(val) && Math.abs(val) < 40 ? true : false], // 调出单位\n                ['gridItem_lryr5ynj', 'display', val == 40 ? true : false],// 处理方式\n                ['gridItem_lryr5ynp', 'display', val == 40 ? true : false],// 报废原因\n              ])\n            }\n            if (qDeliveryMoreOrders.length) {\n              const val = qDelivery.serviceType\n              this.$sharedFns.setNodeOptions([\n                ['organizationTreeSelect_lryr5yox', 'disabled', true], // 组织机构\n                ['datePicker_lryr5yp9', 'disabled', true], //发料时间\n                ['radioGroup_lryr5yo3', 'disabled', true], //业务类型\n                ['checkbox_lryr5ypf', 'disabled', val !== 10 ? true : false], // 生产组织发料\n                ['basisCommonSelect_lryr5ypj', 'disabled', val < 0 ? true : false], //用料单位\n                ['searchTreeSelect_lryvq98d', 'disabled', val < 0 ? true : false], //使用部位\n                ['searchTreeSelect_lryvq989', 'disabled', val < 0 ? true : false],//调出单位\n                ['button_lryyoiyn', 'disabled', false] //保存\n              ]);\n            } else {\n              this.$sharedFns.setNodeOptions([\n                ['organizationTreeSelect_lryr5yox', 'disabled', qDelivery.id ? true : false], // 组织机构\n                ['datePicker_lryr5yp9', 'disabled', false], //发料时间\n                ['radioGroup_lryr5yo3', 'disabled', qDelivery.id ? true : false], //业务类型\n                ['checkbox_lryr5ypf', 'disabled', false], // 生产组织发料\n                ['basisCommonSelect_lryr5ypj', 'disabled', false], //用料单位\n                ['searchTreeSelect_lryvq98d', 'disabled', false], //使用部位\n                ['searchTreeSelect_lryvq989', 'disabled', false],//调出单位\n                ['button_lryyoiyn', 'disabled', true] //保存\n              ])\n            }\n            this.$sharedFns.setNodeOptions([\n              ['button_lryyoiyj', 'display', qDelivery.serviceType > 0 ? true : false],//组织库存选材\n              ['button_lryyoiyl', 'display', qDelivery.serviceType < 0 ? true : false], // 用料单位库存选材\n            ])\n          }\n          if (table == 'rds') {\n            const { qReceiveToDelivery, qReceive, qReceiveMoreMaterials } = this.$dataModels.rdsFormModel\n            if (qReceiveToDelivery.id) {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_ls9sa6l5', 'disabled', true],  // 业务类型\n                ['organizationTreeSelect_ls9sa6l7', 'disabled', true]  // 组织机构\n              ]);\n            } else {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_ls9sa6l5', 'disabled', false],  // 业务类型\n                ['organizationTreeSelect_ls9sa6l7', 'disabled', false]  // 组织机构\n              ])\n            }\n            this.$sharedFns.setNodeOptions([\n              ['button_ls9sa6kt', 'display',  mq2ReceiveMaterialPurchasePlan ? true : false], // 采购计划选材\n              ['button_ltcsjots', 'display', mq2ReceiveMaterialPurchaseContract && qReceive.serviceType == 10 ? true : false], // 采购合同选材\n              ['button_ltcsjotu', 'display', mq2ReceiveMaterialGhPlan ? true : false] // 总控计划选材\n            ])\n            this.$sharedFns.setNodeOptions([\n              ['gridItem_ls9sa6jr', 'display', qReceive.serviceType == 10 ? false : true], //调入的供应单位\n              ['gridItem_ls9sa6jj', 'display', qReceive.serviceType == 10 ? true : false], //供应单位\n              ['gridItem_ls9sa6jz', 'display', qReceive.serviceType == 10 ? true : false], //结算单位\n              ['gridItem_ls9sa6l1', 'display', qReceive.serviceType == 10 ? true : false], //税率\n              ['gridItem_ltl9q3z2', 'display', isCrssgCH ? true : false] //批号设置\n            ])\n            if (qReceiveMoreMaterials.length) {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_ls9sa6l5', 'disabled', true],  // 业务类型\n                ['organizationTreeSelect_ls9sa6l7', 'disabled', true],  // 组织机构\n                ['button_ls9sa6kv', 'disabled', false] //保存\n              ])\n            } else {\n              this.$sharedFns.setNodeOptions([\n                ['radioGroup_ls9sa6l5', 'disabled', false],  // 业务类型\n                ['organizationTreeSelect_ls9sa6l7', 'disabled', false],  // 组织机构\n                ['button_ls9sa6kv', 'disabled', true] //保存\n              ])\n            }\n          }\n        }",
        "isOn": true,
        "description": "编辑页表单和按钮状态卡控"
      },
      "handleMaterialList": {
        "fn": "async function fnName(rows) {\n          const { qDelivery, matchedList } = this.$dataModels.deliveryFormModel\n\n          for (const key in matchedList) {\n            delete matchedList[key]\n          }\n          const params = {\n            qDelivery: qDelivery,\n            qDeliveryMoreMaterials: rows,\n            qDeliveryMoreOrders: rows,\n            returnOrderType: qDelivery.serviceType < 0\n          }\n          await this.$requestFns.matchItemBarCode(params).then(data => {\n            if (data.data.length) {\n              rows.forEach(row => {\n                if (row.typeMark == '材料维度') {\n                  matchedList[row.materialId] = data.data.filter(res => res.materialId == row.materialId)\n                } else {\n                  matchedList[row.itemBarCode] = data.data.filter(res => {\n                    delete res.id\n                    return res.itemBarCode == row.itemBarCode\n                  })\n                }\n              })\n            }\n          }).catch(err => {\n            console.log(err);\n            this.$vueGlobal.$message({\n              type: 'error',\n              message: '分解条码失败'\n            })\n          })\n\n\n        }",
        "isOn": true,
        "description": "发料分解材料明细"
      },
      "validPhotosData": {
        "fn": "async function fnName(table) {\n          let photos = []\n\n          if (table == 'receive') {\n            photos = this.$dataModels.receiveFormModel.qReceivePhotos\n          }\n          if (table == 'delivery') {\n            photos = this.$dataModels.deliveryFormModel.qDeliveryPhotos\n          }\n          if (table == 'rds') {\n            photos = this.$dataModels.rdsFormModel.qReceivePhotos\n          }\n\n\n          const errData = photos.find(p => {\n            const addNum = p.photoList.filter(o => !o.isRemoved)\n            if (p.isRequired && !addNum.length) {\n              return p\n            }\n          })\n          if (errData) {\n            this.$vueGlobal.$message({\n              type: 'warning',\n              message: `请上传${errData.cameraPosition}照片或凭证`\n            })\n            return false\n          }\n          if (this.$dataModels.gpyPhotoList.singleTable.isRequired) {\n            if (table == 'delivery'){\n              if (this.$dataModels.deliveryFormModel.qDeliveryGpys.length === 0) {\n                this.$vueGlobal.$message({\n                  type: 'warning',\n                  message: `请上传高拍仪照片或凭证`\n                })\n\n                return false\n              }\n            }\n            if (table == 'receive') {\n              if (this.$dataModels.receiveFormModel.qReceiveGpys.length === 0) {\n                this.$vueGlobal.$message({\n                  type: 'warning',\n                  message: `请上传高拍仪照片或凭证`\n                })\n\n                return false\n              }\n            }\n\n            if (table == 'rds') {\n              if ( this.$dataModels.rdsFormModel.qReceiveGpys.length=== 0) {\n                this.$vueGlobal.$message({\n                  type: 'warning',\n                  message: `请上传高拍仪照片或凭证`\n                })\n\n                return false\n              }\n            }\n\n          }\n\n          return errData ? false : true\n        }",
        "isOn": true,
        "description": "校验照片"
      },
      "createOrderCode": {
        "isOn": true,
        "description": "生成单据编号",
        "fn": "async function fnName(table) {\n          const { orderCodeCondtion } = this.$dataModels\n          let orgId = 0\n          let id = null\n          let recordedDate = ''\n          let moduleCode = ''\n          let condtionItems = []\n          let params = {}\n          if (table == 'receive') {\n            const { qReceive } = this.$dataModels.receiveFormModel\n            let { serviceType, orderType } = qReceive\n            let code = serviceType == 10 ? '收料-' : serviceType == -11 ? '退收料-' : serviceType == 20 ? \"调入-\" : \"退调入-\"\n            let codeName = orderType == 2 ? '补-' : ''\n            codeName = codeName + (orderType < 0 ? '冲红-' : '')\n            orgId = qReceive.orgId\n            id = qReceive.id\n            recordedDate = qReceive.exitTime\n            moduleCode = 'mq_receive'\n            condtionItems = [{\n              fieldName: 'orderOrigin',\n              op: 'eq',\n              fieldValue: 2\n            }]\n            params = {\n              code: codeName + code\n            }\n          }\n          if (table == 'delivery') {\n            const { qDelivery } = this.$dataModels.deliveryFormModel\n            let { serviceType, orderType } = qDelivery\n            let code = serviceType == 40 ? '报废-' : serviceType == 10 ? '发料-' : serviceType == -11 ? '退发料-' : serviceType == 20 ? \"调出-\" : \"退调出-\"\n            let codeName = orderType == 2 ? '补-' : ''\n            codeName = codeName + (orderType < 0 ? '冲红-' : '')\n            orgId = qDelivery.orgId\n            id = qDelivery.id\n            recordedDate = qDelivery.exitTime\n            moduleCode = 'mq_delivery'\n            condtionItems = [\n              {\n                fieldName: 'orderOrigin',\n                op: 'eq',\n                fieldValue: 2\n              },\n              {\n                fieldName: 'deliveryType',\n                op: 'eq',\n                fieldValue: 0\n              }\n            ]\n            params = {\n              code: codeName + code\n            }\n          }\n          if (table == 'rds') {\n            const { qReceiveToDelivery } = this.$dataModels.rdsFormModel\n            orgId = qReceiveToDelivery.orgId\n            id = qReceiveToDelivery.id\n            moduleCode = 'mq_receive_to_delivery',\n              recordedDate = qReceiveToDelivery.recordedDate,\n              params = { code: '直-' }\n            condtionItems = [\n              {\n                fieldName: 'orderOrigin',\n                op: 'eq',\n                fieldValue: 2\n              }\n            ]\n          }\n          orderCodeCondtion.singleTable = {\n            orgId, id, recordedDate, moduleCode, condtionItems, params\n          }\n          const res = await this.$requestFns.getOrderCode({});\n          return res.data\n        }"
      },
      "setNodeOptions": {
        "fn": "async function fnName(arr) {\n          // node, prop, value\n\n          arr.map(t => {\n            if (!t) {\n              return\n            }\n            const node = t[0]\n            const prop = t[1]\n            const value = t[2]\n            const isExist = this.$exposeds.get(node)\n            if (isExist) {\n              console.log(this.$exposeds.get(node).model.elementOption.value);\n              this.$exposeds.get(node).model.elementOption.value = {\n                [prop]: value\n              }\n            }\n          })\n        }",
        "isOn": true,
        "description": "设置节点属性"
      },
      "editReceiveControl": {
        "fn": "async function fnName(rows) {\n          const { fullId } = this.$globalVars.$context\n          const { receiveConfig, currentReceiveRow, validText } = this.$dataModels\n          const { qReceive, qReceiveMoreMaterials } = this.$dataModels.receiveFormModel\n\n          const res = await this.$requestFns.queryReceiveConfig({ fullId: fullId });\n          validText.singleTable.validText = ''\n          // validText.materialIds = []\n\n          if (res.data) {\n            Object.assign(receiveConfig.singleTable, res.data.data)\n            const {\n              contractReceive, // 合同验收是否勾选\n              contractReceiveControl,\n              planReceive, // 总控验收是否勾选\n              planReceiveControl // 强卡还是若卡\n            } = receiveConfig.singleTable\n            const mIds = qReceiveMoreMaterials.reduce((arr, t) => {\n              if (!arr.includes(t.materialId)) {\n                arr.push(t.materialId)\n              }\n              return arr\n            }, [])\n            if (planReceive) { // 判断计划量是否够\n              validText.singleTable.validText = '总控计划量'\n              const materialIds = rows.map(row => {\n                return {\n                  quantity: row.netQuantity,\n                  materialId: row.materialId,\n                  materialModel: row.materialModel,\n                  materialName: row.materialName\n                }\n              })\n              const planResult = await this.$requestFns.queryMaterialsPlan({ orgId: qReceive.orgId, materialIds });\n              if (planResult && planResult.data && planResult.data.data.length > 0) {\n                const materialMap = planResult.data.data.reduce((prev, cur) => {\n                  prev[cur.materialId] = cur\n                  validText.materialIds.push(cur.materialId)\n\n                  return prev\n                }, {})\n                rows = rows.reduce((arr, row) => {\n                  if (!mIds.includes(row.materialId)) {\n                    row.netQuantity = 0\n                  }\n                  if (materialMap[row.materialId] !== undefined) {\n                    const { syQuantity, allQuantity, calcPlanQuantity } = materialMap[row.materialId]\n                    // console.log('syQuantity, allQuantity, calcPlanQuantity', syQuantity, allQuantity, calcPlanQuantity, row.materialModel)\n                    row.syQuantity = syQuantity\n                    row.allQuantity = allQuantity\n                    row.calcPlanQuantity = calcPlanQuantity\n                  } else {\n                    row.syQuantity = 0\n                    row.allQuantity = 0\n                    row.calcPlanQuantity = 0\n                  }\n                  arr.push(row)\n                  return arr\n                }, [])\n              }\n            }  // 计划卡控逻辑结束\n            if (contractReceive) { // 合同卡验收开始\n              validText.singleTable.validText = '合同量'\n              const materialIds = rows.reduce((prev, cur) => {\n                prev.push(cur.materialId)\n                return prev\n              }, [])\n              debugger\n              currentReceiveRow.singleTable = qReceive\n              const contractResult = await this.$sharedFns.getContractQuantity(materialIds);\n              const contractIdMap = contractResult.data.reduce((prev, cur) => {\n                prev[cur.materialId] = cur\n                validText.materialIds.push(cur.materialId)\n                return prev\n              }, {})\n\n              rows = rows.reduce((arr, row) => {\n                if (!mIds.includes(row.materialId)) {\n                  row.netQuantity = 0\n                }\n                if (contractIdMap[row.materialId] !== undefined) {\n                  const { sjQuantity, plusQuantity, klReceiveQuantity, plusSjQuantity } = contractIdMap[row.materialId]\n                  row.syQuantity = plusSjQuantity // sjQuantity // 剩余合同可验收量\n                  row.allQuantity = klReceiveQuantity // 已经验收量\n                  row.calcPlanQuantity = plusQuantity // 允许最大验收\n                } else {\n                  row.syQuantity = 0\n                  row.allQuantity = 0\n                  row.calcPlanQuantity = 0\n                }\n                arr.push(row)\n                return arr\n              }, [])\n            }  // 合同卡控逻辑结束\n\n            return rows\n\n          } else {\n            this.$vueGlobal.$message({\n              type: 'warning',\n              message: '获取验收卡控配置失败'\n            })\n            return rows\n          }\n        }",
        "isOn": true,
        "description": "编辑时校验库存卡控逻辑"
      },
      "checkMaterials": {
        "fn": "async function fnName(table) {\n          let isValid = true\n          if (table == 'receive') {\n            const { qReceive, qReceiveMoreMaterials } = this.$dataModels.receiveFormModel\n            if (!qReceiveMoreMaterials.length) {\n              this.$vueGlobal.$message({\n                type: 'warning',\n                message: '请选择物资信息后保存'\n              })\n              isValid = false\n            }\n            // let checkIndex = qReceiveMoreMaterials.findIndex(r => r.netQuantity === 0 || !r.taxIncludedPrice || !r.taxRate)\n            let checkIndex = qReceiveMoreMaterials.findIndex(r => r.netQuantity === 0 )\n            //  let errMsg = qReceive.serviceType >0 ? '收料量' :'退料量'\n            if (qReceive.serviceType === 20) {\n              // checkIndex = qReceiveMoreMaterials.findIndex(r => r.netQuantity === 0 || !r.taxIncludedPrice)\n              checkIndex = qReceiveMoreMaterials.findIndex(r => r.netQuantity === 0)\n            }\n            if (qReceive.serviceType < 0) {\n              checkIndex = qReceiveMoreMaterials.findIndex(r => r.netQuantity === 0)\n            }\n            if (checkIndex > -1) {\n              this.$vueGlobal.$message({\n                type: 'warning',\n                message: `第${checkIndex + 1}行信息填写不完整`\n              })\n              isValid = false\n            }\n          }\n          if (table == 'rds') {\n            const { qReceive, qReceiveMoreMaterials } = this.$dataModels.rdsFormModel\n            if (!qReceiveMoreMaterials.length) {\n              this.$vueGlobal.$message({\n                type: 'warning',\n                message: '请选择物资信息后保存'\n              })\n              isValid = false\n            }\n            let checkIndex = -1\n            //  let errMsg = qReceive.serviceType >0 ? '收料量' :'退料量'\n            if (qReceive.serviceType === 20) {\n              checkIndex = qReceiveMoreMaterials.findIndex(r => r.netQuantity === 0 )\n            }\n            if (qReceive.serviceType < 0) {\n              checkIndex = qReceiveMoreMaterials.findIndex(r => r.netQuantity === 0)\n            }\n            if (checkIndex > -1) {\n              this.$vueGlobal.$message({\n                type: 'warning',\n                message: `第${checkIndex + 1}行信息填写不完整`\n              })\n              isValid = false\n            }\n          }\n          return isValid\n        }",
        "isOn": true,
        "description": "保存时校验材料信息"
      },
      "receiveControl": {
        "fn": "async function fnName() {\n          debugger\n          const { currentReceiveRow, receiveConfig, receiveFormModel } = this.$dataModels\n          const { fullId } = this.$globalVars.$context\n          let isBreak = false\n          if (currentReceiveRow.singleTable.serviceType > 0) {\n            // 获取业务卡控\n            const res = await this.$requestFns.queryReceiveConfig({ fullId: fullId });\n            debugger\n            if (res.data) {\n              Object.assign(receiveConfig.singleTable, res.data.data)\n              const {\n                contractReceive, // 合同验收是否勾选\n                contractReceiveControl,\n                planReceive, // 总控验收是否勾选\n                planReceiveControl // 强卡还是若卡\n              } = receiveConfig.singleTable\n              if (planReceive) { // 判断计划量是否够\n                debugger\n                // // 本次材料的验收量\n                // const mMap = await this.$sharedFns.groupCount(receiveFormModel.qReceiveMoreMaterials, (row) => {\n                //   return {\n                //     key: row.materialId,\n                //     value: row.netQuantity\n                //   }\n                // })\n                let ids = []\n                let mMap = {}\n                let mArr = []\n                receiveFormModel.qReceiveMoreMaterials.forEach(row => {\n                  if (!ids.includes(row.materialId)) {\n                    ids.push(row.materialId)\n                    mMap[row.materialId] = {\n                      quantity: row.netQuantity,\n                      materialId: row.materialId,\n                      materialModel: row.materialModel,\n                      materialName: row.materialName\n                    }\n                  } else {\n                    mMap[row.materialId].quantity += row.netQuantity\n                  }\n                })\n                for (let key in mMap){\n                  mArr.push(mMap[key])\n                }\n                //  receiveFormModel.qReceiveMoreMaterials.forEach(row => {\n                //   if (!ids.includes(row.materialId)){\n                //     ids.push(row.materialId)\n                //     mArr.push()\n                //   }\n                // })\n                debugger\n                const planResult = await this.$requestFns.queryMaterialsPlan({ orgId: currentReceiveRow.singleTable.orgId, materialIds: mArr });\n                debugger\n                if (planResult && planResult.data && planResult.data.data.length > 0) {\n                  const syData = planResult.data.data.filter(r => r.syQuantity < 0)\n                  const materials = syData.map(row => {\n                    return `${row.materialName} - ${row.materialModel}`\n                  })\n                  if (syData && syData.length > 0 && planReceiveControl) { // 强卡\n                    this.$vueGlobal.$message({\n                      type: 'warning',\n                      message: `当前物资 [ ${materials.join(', ')} ] 验收量已超总控计划量，无法验收！`\n                    })\n                    isBreak = true\n                  } else if (syData.length > 0) {\n                    this.$vueGlobal.$message({\n                      type: 'warning',\n                      message: `当前物资 [ ${materials.join(', ')} ] 验收量已超总控计划量！`\n                    })\n                  }\n                }\n              }  // 计划卡控逻辑结束\n              if (contractReceive) { // 合同卡验收开始\n                debugger\n                const materialIds = receiveFormModel.qReceiveMoreMaterials.reduce((prev, cur) => {\n                  prev.push(cur.materialId)\n                  return prev\n                }, [])\n                // 本次材料的验收量\n                const mMap = await this.$sharedFns.groupCount(receiveFormModel.qReceiveMoreMaterials, (row) => {\n                  return {\n                    key: row.materialId,\n                    value: row.netQuantity\n                  }\n                })\n                const contractResult = await this.$sharedFns.getContractQuantity(materialIds);\n                const contractMap = await this.$sharedFns.groupCount(contractResult.data, (row) => {\n                  return {\n                    key: row.materialId,\n                    // value: new window.Decimal(row.contractQuantity).sub(row.sjQuantity)\n                    value: row.plusSjQuantity // row.contractQuantity - row.sjQuantity\n                  }\n                })\n                // 合同量不够的材料\n                const material = []\n                for (const key in mMap) {\n                  const quantity = mMap[key]\n                  const contractQuantity = contractMap[key] || 0\n                  if (contractMap[key] !== undefined && (contractQuantity < quantity)) { // 合同不够\n                    for (const item of receiveFormModel.qReceiveMoreMaterials) {\n                      if (Number(item.materialId) === Number(key)) {\n                        material.push(`${item.materialName} - ${item.materialModel}`)\n                        console.log(material)\n                        break\n                      }\n                    }\n                  }\n                }\n                // 合同验收强卡控\n                if (contractReceiveControl && material.length > 0) {\n                  isBreak = true\n                  this.$vueGlobal.$message({\n                    type: 'warning',\n                    message: `该供应商的 [ ${material.join(', ')} ] 验收量已超采购合同允许量，无法验收！`\n                  })\n                } else if (material.length > 0) { // 若卡\n                  this.$vueGlobal.$message({\n                    type: 'warning',\n                    message: `该供应商的 [ ${material.join(', ')} ] 验收量已超采购合同允许量！`\n                  })\n                }\n              }  // 合同卡控逻辑结束\n            } else {\n              this.$vueGlobal.$message({\n                type: 'warning',\n                message: '获取验收卡控配置失败'\n              })\n              isBreak = true\n            }\n          }\n          return isBreak\n        }",
        "isOn": true,
        "description": "保存或提交时验收卡控逻辑"
      },
      "getContractQuantity": {
        "fn": "async function fnName(materialIds) {\n          debugger\n\n          const { lastProject, fullId } = this.$globalVars.$context\n          this.$dataModels.controlReceiveParams.condtionItems = [{ 'fieldName': 'materialId', 'op': 'eq', 'fieldValue': Array.from(new Set(materialIds)) }, { 'fieldName': 'orgId', 'op': 'eq', 'fieldValue': lastProject.id }, { 'fieldName': 'fullId', 'op': 'eq', 'fieldValue': fullId }, { 'fieldName': 'recordedDateStart', 'op': 'eq', 'fieldValue': '1900-01-01' },\n            { 'fieldName': 'recordedDateEnd', 'op': 'eq', 'fieldValue': this.$dataModels.receiveFormModel.qReceive.recordedDate }, { 'fieldName': 'supplierId', 'op': 'eq', 'fieldValue': this.$dataModels.receiveFormModel.qReceive.supplierId }]\n\n          const res = await this.$requestFns.queryContractReceiveOrder(this.$dataModels.controlReceiveParams.condtionItems );\n          return res.data\n        }",
        "isOn": true,
        "description": "获取材料合同量"
      },
      "downloadFile": {
        "isOn": true,
        "description": "下载照片或文件",
        "fn": "async function fnName(file) {\n          const result = await this.$globalVars.$http.post('/shared-data/fs/accesses', {\n            type: file.type || 'img',\n            product: file.product || 'mquantity',\n            keys: file.keys || [],\n            expires: 15\n          })\n          return result\n        }"
      }
    }
  },
  "routerConfig": {
    "master": {
      "name": "master",
      "path": "/",
      "description": "首页",
      "meta": {
        "title": "首页"
      },
      "pageSet": {
        "isForceFlush": false
      }
    },
    "receiveEdit": {
      "name": "receiveEdit",
      "title": "入库登记/添加",
      "path": "/receiveEdit",
      "description": "入库登记添加",
      "meta": {
        "title": "入库登记/添加"
      },
      "pageSet": {
        "isForceFlush": false
      }
    },
    "deliveryEdit": {
      "name": "deliveryEdit",
      "title": "出库登记/添加",
      "path": "/deliveryEdit",
      "description": "出库登记添加",
      "meta": {
        "title": "出库登记/添加"
      },
      "pageSet": {
        "isForceFlush": false
      }
    },
    "rdsEdit": {
      "name": "rdsEdit",
      "title": "直进直出/添加",
      "path": "/rdsEdit",
      "description": "直进直出/添加",
      "meta": {
        "title": "直进直出/添加"
      },
      "pageSet": {
        "isForceFlush": false
      }
    },
    "receiveDetail": {
      "name": "receiveDetail",
      "title": "入库登记/详情",
      "path": "/receiveDetail",
      "description": "入库登记/详情",
      "meta": {
        "title": "入库登记/详情"
      },
      "pageSet": {
        "isForceFlush": false
      }
    },
    "rdsDetail": {
      "name": "rdsDetail",
      "title": "详情",
      "path": "/rdsDetail",
      "description": "直收直发详情",
      "meta": {
        "title": "详情"
      },
      "pageSet": {
        "isForceFlush": false
      }
    },
    "deliveryDetail": {
      "name": "deliveryDetail",
      "title": "详情",
      "path": "/deliveryDetail",
      "description": "发料详情",
      "meta": {
        "title": "详情"
      },
      "pageSet": {
        "isForceFlush": false
      }
    }
  },
  "globalConfig": {
    "pageContext": {
      "applicationId": "1134897544877056",
      "orgId": 1342955240127488
    }
  }
}
